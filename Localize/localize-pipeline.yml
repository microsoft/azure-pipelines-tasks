name: $(Date:MMddyy)$(Rev:.rrrr)

trigger: none

schedules:
- cron: 0 8 * * Mon # mm HH DD MM DW
  displayName: Localization update
  branches:
    include: 
    - Localization
  always: true

stages:
- stage: __default
  jobs:
  - job: localizationUpdate
    displayName: 'Update localization'
    pool:
      vmImage: windows-latest
    steps:

    - checkout: self
      persistCredentials: true

    - powershell: |
        npm install
      displayName: 'npm install'
      
    - powershell: |
        $sprintInfo = Invoke-WebRequest https://whatsprintis.it -Headers @{"Accept"= "application/json"} | ConvertFrom-Json
        if (($env:PR_CREATION_ENABLED -eq 'True') -and (($sprintInfo.week -eq 3) -or ($env:BUILD_REASON -eq 'Manual')))
        {
          Write-Host "shouldCreatePR was set to true"
          Write-Host "##vso[task.setvariable variable=shouldCreatePR]$($true)"  
        }
        else
        {
          Write-Host "shouldCreatePR was set to false"
          Write-Host "##vso[task.setvariable variable=shouldCreatePR]$($false)"
        }
        Write-Host "##vso[task.setvariable variable=sprint]$($sprintInfo.sprint)"
      displayName: "Determine the number of the week in the sprint and sprint number"

    - powershell: |
        git config --global user.email "$(github_email)"
        git config --global user.name "$(username)"
        git checkout -b Localization origin/Localization
        git merge origin/master
        git push origin Localization
      displayName: "Sync with master branch"
      condition: and(succeeded(), in(variables['build.reason'], 'Schedule', 'Manual'))

    - task: OneLocBuild@3
      condition: and(succeeded(), in(variables['build.reason'], 'Schedule', 'Manual'))
      inputs:
        locProj: 'Localize/LocProject.json'
        outDir: '$(Build.ArtifactStagingDirectory)'
        dependencyPackageSource: 'https://mseng.pkgs.visualstudio.com/PipelinesLocalization/_packaging/LocTools/nuget/v3/index.json'
        packageSourceAuth: 'patAuth'
        patVariable: ''
        isCreatePrSelected: $(shouldCreatePR)
        repoType: 'gitHub'
        prSourceBranchPrefix: 'Localize'
        gitHubPatVariable: '$(GitHubPAT)'
        isAutoCompletePrSelected: false
        gitHubPrMergeMethod: 'squash'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    
    - task: PublishBuildArtifacts@1
      condition: and(succeeded(), in(variables['build.reason'], 'Schedule', 'Manual'))
      displayName: 'Publish an artifact'

    - powershell: |
        node Localize/bump-versions.js
        
        git add -A
        git commit -m 'Bumped versions'
      displayName: Bump tasks' and packages' versions
      condition: and(succeeded(), or(and(eq(variables['SHOULDCREATEPR'], 'True'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))

    - powershell: |
        $date= Get-Date -Format "MMddyyyy"
        $updateBranch="Localization-update_$date"
        echo "##vso[task.setvariable variable=updateBranch]$updateBranch"

        git checkout -b $updateBranch

        if (Test-Path -Path Localize) { 
          Remove-Item -Recurse -Force Localize 
        }
        
        if (Test-Path -Path OneLocBuild) { 
          Remove-Item -Recurse -Force OneLocBuild 
        }

        git add -A
        git commit -m "Removing Localize and OneLocBuild folder"
        git push origin $updateBranch
      displayName: Create and push localization update branch
      condition: and(succeeded(), or(and(eq(variables['SHOULDCREATEPR'], 'True'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))
    
    - task: PowerShell@2
      inputs:
        filePath: 'ci/open-pullrequest.ps1'
        arguments: "-SourceBranch $(updateBranch)"
        failOnStderr: true
      env:
        GH_TOKEN: '$(GitHubPAT)'
      displayName: Open a PR
      condition: and(succeeded(), or(and(eq(variables['SHOULDCREATEPR'], 'True'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))

    # Two next tasks are used to notify about Localization update PRs
    # Notifications are set by POST method to MS Teams webhook
    # Body of message is compiled as Office 365 connector card
    # More details about cards - https://docs.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#office-365-connector-card
    - powershell: .\ci\localization-updates\send-notifications.ps1 -IsPRCreated $true -RepoName "Tasks"
      displayName: 'Send MS Teams notification about PR opened'
      env:
        TEAMS_WEBHOOK: $(MSTeamsUri)
      condition: and(succeeded(), eq(variables['SHOULDCREATEPR'], 'True'), eq(variables['build.reason'], 'Schedule'))

    - powershell: .\ci\localization-updates\send-notifications.ps1 -IsPRCreated $false -RepoName "Tasks"
      displayName: 'Send MS Teams notification about error'
      env:
        TEAMS_WEBHOOK: $(MSTeamsUri)
      condition: and(failed(), eq(variables['SHOULDCREATEPR'], 'True'), eq(variables['build.reason'], 'Schedule'))
