{
  "id": "99A72E7F-25E4-4576-BF38-22A42B995ED8",
  "name": "AzureMonitor",
  "friendlyName": "ms-resource:loc.friendlyName",
  "description": "ms-resource:loc.description",
  "author": "Microsoft Corporation",
  "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/azure-monitor",
  "helpMarkDown": "ms-resource:loc.helpMarkDown",
  "category": "Utility",
  "deprecated": true,
  "visibility": [
    "Build",
    "Release"
  ],
  "runsOn": [
    "Server",
    "ServerGate"
  ],
  "version": {
    "Major": 0,
    "Minor": 198,
    "Patch": 0
  },
  "instanceNameFormat": "ms-resource:loc.instanceNameFormat",
  "groups": [],
  "inputs": [
    {
      "name": "connectedServiceNameARM",
      "type": "connectedService:AzureRM",
      "label": "ms-resource:loc.input.label.connectedServiceNameARM",
      "defaultValue": "",
      "required": "true",
      "helpMarkDown": "ms-resource:loc.input.help.connectedServiceNameARM"
    },
    {
      "name": "ResourceGroupName",
      "type": "pickList",
      "label": "ms-resource:loc.input.label.ResourceGroupName",
      "required": true,
      "helpMarkDown": "ms-resource:loc.input.help.ResourceGroupName",
      "properties": {
        "EditableOptions": "True"
      }
    },
    {
      "name": "ResourceType",
      "type": "pickList",
      "label": "ms-resource:loc.input.label.ResourceType",
      "defaultValue": "Microsoft.Insights/components",
      "options": {
        "Microsoft.Insights/components": "Application Insights",
        "Microsoft.Web/sites": "App Services",
        "Microsoft.Storage/storageAccounts": "Storage Account",
        "Microsoft.Compute/virtualMachines": "Virtual Machines"
      },
      "required": true,
      "helpMarkDown": "ms-resource:loc.input.help.ResourceType"
    },
    {
      "name": "resourceName",
      "type": "pickList",
      "label": "ms-resource:loc.input.label.resourceName",
      "required": true,
      "properties": {
        "EditableOptions": "True"
      },
      "helpMarkDown": "ms-resource:loc.input.help.resourceName"
    },
    {
      "name": "alertRules",
      "type": "pickList",
      "label": "ms-resource:loc.input.label.alertRules",
      "defaultValue": "",
      "required": true,
      "properties": {
        "MultiSelectFlatList": "True",
        "EditableOptions": "True"
      },
      "helpMarkDown": "ms-resource:loc.input.help.alertRules"
    }
  ],
  "dataSourceBindings": [
    {
      "target": "ResourceGroupName",
      "endpointId": "$(connectedServiceNameARM)",
      "dataSourceName": "AzureResourceGroups"
    },
    {
      "target": "resourceName",
      "endpointId": "$(connectedServiceNameARM)",
      "dataSourceName": "AzureRMResourcesInRGBasedOnType",
      "parameters": {
        "ResourceGroupName": "$(ResourceGroupName)",
        "ResourceType": "$(ResourceType)"
      },
      "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
    },
    {
      "target": "alertRules",
      "endpointId": "$(connectedServiceNameARM)",
      "endpointUrl": "{{endpoint.url}}subscriptions/{{endpoint.subscriptionId}}/resourcegroups/$(ResourceGroupName)/providers/microsoft.insights/alertrules?api-version=2016-03-01&$filter=targetResourceUri eq /subscriptions/{{endpoint.subscriptionId}}/resourceGroups/$(ResourceGroupName)/providers/$(ResourceType)/$(resourceName)",
      "resultSelector": "jsonpath:$.value[?(@.properties.isEnabled == true)]",
      "resultTemplate": "{ \"Value\" : \"{{name}}\", \"DisplayValue\":\"{{name}}\"}"
    }
  ],
  "execution": {
    "HttpRequest": {
      "Execute": {
        "EndpointId": "$(connectedServiceNameARM)",
        "EndpointUrl": "$(endpoint.url)batch?api-version=2015-11-01",
        "Method": "POST",
        "Body": "{\"requests\":[{{#splitAndIterate ',' alertRules}}{\"httpMethod\": \"GET\",\"relativeUrl\":\"/subscriptions/{{#..}}{{subscriptionId}}{{/..}}/resourceGroups/{{#..}}{{ResourceGroupName}}{{/..}}/providers/microsoft.insights/alertrules/{{this}}/incidents?api-version=2016-03-01\"},{{/splitAndIterate}}]}",
        "Headers": "{\"Content-Type\":\"application/json\"}",
        "WaitForCompletion": "false",
        "Expression": "and(gt(count(root['responses']), 0), eq(count(jsonpath('$.responses[?(@.httpStatusCode != 200)]')), 0), eq(count(jsonpath('$.responses[*].content.value[?(@.isActive == true)]')), 0))"
      }
    }
  }
}