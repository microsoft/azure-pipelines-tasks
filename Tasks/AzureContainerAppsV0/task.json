{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "cad8dd6a-de28-4d89-a7db-1bc20a2fbb2d",
    "name": "AzureContainerApps",
    "friendlyName": "Azure Container Apps Deploy",
    "description": "An Azure DevOps Task to build and deploy Azure Container Apps.",
    "author": "Microsoft Corporation",
    "helpMarkDown": "[Learn more about this task](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV0/README.md)",
    "releaseNotes": "Released new AzureContainerApps task for building and deploying Azure Container Apps.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "version": {
        "Major": 0,
        "Minor": 215,
        "Patch": 0
    },
    "preview": true,
    "minimumAgentVersion": "2.144.0",
    "instanceNameFormat": "Azure Container Apps Deploy",
    "showEnvironmentVariables": false,
    "inputs": [
        {
            "name": "cwd",
            "aliases": [
                "workingDirectory"
            ],
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Current working directory where the script is run.  Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory)",
            "groupName": "advanced"
        },
        {
            "name": "appSourcePath",
            "type": "string",
            "label": "Application source path",
            "required": false,
            "helpMarkDown": "Absolute path on the runner of the source application code to be built. If not provided, the 'imageToDeploy' argument must be provided to ensure the Container App has an image to reference."
        },
        {
            "name": "connectedServiceNameARM",
            "aliases": [
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure Resource Manager connection",
            "required": true,
            "helpMarkDown": "Select an Azure Resource Manager service connection for the deployment",
            "properties": {
                "EndpointFilterRule": ""
            }
        },
        {
            "name": "acrName",
            "type": "string",
            "label": "Azure Container Registry name",
            "required": true,
            "helpMarkDown": "The name of the Azure Container Registry that the runnable application image will be pushed to."
        },
        {
            "name": "acrUsername",
            "type": "string",
            "label": "Azure Container Registry username",
            "required": false,
            "helpMarkDown": "The username used to authenticate push requests to the provided Azure Contrainer Registry. If not provided, an access token will be generated via 'az acr login' and provided to 'docker login' to authenticate the requests."
        },
        {
            "name": "acrPassword",
            "type": "string",
            "label": "Azure Container Registry password",
            "required": false,
            "helpMarkDown": "The password used to authenticate push requests to the provided Azure Contrainer Registry. If not provided, an access token will be generated via 'az acr login' and provided to 'docker login' to authenticate the requests."
        },
        {
            "name": "dockerfilePath",
            "type": "string",
            "label": "Dockerfile path",
            "required": false,
            "helpMarkDown": "Relative path to the Dockerfile in the provided application source that should be used to build the image that is then pushed to ACR and deployed to the Container App. If not provided, this task will check if there is a file named 'Dockerfile' at the root of the provided application source and use that to build the image. Otherwise, the Oryx++ Builder will be used to create the image."
        },
        {
            "name": "imageToBuild",
            "type": "string",
            "label": "Docker image to build",
            "required": false,
            "helpMarkDown": "The custom name of the image that is to be built, pushed to ACR and deployed to the Container App by this task. Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is not provided, a default image name will be constructed in the form of <acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number>."
        },
        {
            "name": "imageToDeploy",
            "type": "string",
            "label": "Docker image to deploy",
            "required": false,
            "helpMarkDown": "The custom name of the image that has already been pushed to ACR and will be deployed to the Container App by this task. Note: the image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is not provided, the value provided (or determined) for the 'imageToBuild' argument will be used."
        },
        {
            "name": "containerAppName",
            "type": "string",
            "label": "Azure Container App name",
            "required": false,
            "helpMarkDown": "The name of the Azure Container App that will be created or updated. If not provided, this value will be in the form of ado-task-app-<build-id>-<build-number>."
        },
        {
            "name": "resourceGroup",
            "type": "string",
            "label": "Azure resource group name",
            "required": false,
            "helpMarkDown": "The resource group that the Azure Container App will be created in. If not provided, this value will be in the form of <container-app-name>-rg."
        },
        {
            "name": "containerAppEnvironment",
            "type": "string",
            "label": "Azure Container App environment",
            "required": false,
            "helpMarkDown": "The name of the Azure Container App environment to use with the application. If not provided, an existing environment in the resource group of the Container App will be used, otherwise, an environment will be created in the format of <container-app-name>-env."
        },
        {
            "name": "runtimeStack",
            "type": "string",
            "label": "Application runtime stack",
            "required": false,
            "helpMarkDown": "The platform version stack that the application runs in when deployed to the Azure Container App. This should be provided in the form of <platform>:<version>. If not provided, this value is determined by Oryx based on the contents of the provided application. Please view the following document for more information on the supported runtime stacks for Oryx: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md"
        },
        {
            "name": "targetPort",
            "type": "string",
            "label": "Application target port",
            "required": false,
            "helpMarkDown": "The designated port for the application to run on. If not provided, this value is 80 for Python applications, and 8080 for all other supposed platforms."
        }
    ],
    "execution": {
        "Node10": {
            "target": "azurecontainerapps.js"
        },
        "Node16": {
            "target": "azurecontainerapps.js"
        }
    },
    "messages": {
        "AcrAccessTokenAuthFailed": "Unable to authenticate against ACR instance '%s.azurecr.io' with access token.",
        "AcrAccessTokenLoginMessage": "Logging in to Azure Container Registry using access token to be generated via Azure CLI.",
        "AcrUsernamePasswordAuthFailed": "Unable to authenticate against ACR instance '%s.azurecr.io' with username/password.",
        "AcrUsernamePasswordLoginMessage": "Logging in to Azure Container Registry using provided acrUsername and acrPassword arguments.",
        "BashCommandFailed": "`Unable to run provided bash command '%s'.",
        "CheckForAppSourceDockerfileMessage": "No dockerfilePath argument provided; checking for 'Dockerfile' at the root of app source path '%s' to build image from.",
        "ContainerAppEnvironmentUsedMessage": "Using the provided containerAppEnvironment value provided '%s' when deploying the Container App.",
        "CreateImageWithBuilderFailed": "Unable to create runnable application image using Oryx++ Builder.",
        "CreateImageWithBuilderMessage": "No Dockerfile was provided or found for the application source; attempting to create a runnable application image using the Oryx++ Builder.",
        "CreateImageWithDockerfileFailed": "Unable to create runnable application image using provided or discovered Dockerfile.",
        "CreateImageWithDockerfileMessage": "A Dockerfile was provided or found for the application source; attempting to build the image from Dockerfile '%s'.",
        "CreateOrUpdateContainerAppFailed": "Unable to create or update Azure Container App via 'az container app' command.",
        "DefaultContainerAppNameMessage": "No containerAppName argument was provided; setting the name of the Container App to create/update to '%s'.",
        "DefaultImageToBuildMessage": "No imageToBuild argument was provided; setting the image to be built to '%s'.",
        "DefaultImageToDeployMessage": "No imageToDeploy argument was provided; setting the image to deploy to '%s'.",
        "DefaultResourceGroupMessage": "No resourceGroup argument was provided; setting the resource group for deployment to '%s'.",
        "DefaultRuntimeStackMessage": "No runtimeStack argument was provided; using the runtime stack that was found for the app '%s'.",
        "DefaultTargetPortMessage": "No targetPort argument was provided; using the target port '%s' for the application.",
        "DetermineRuntimeStackFailed": "`Unable to determine runtime stack from application source '%s'.",
        "ErrorCodeFormat": "Error Code: [%s]",
        "ErrorMessageFormat": "Error: %s",
        "FoundAppSourceDockerfileMessage": "Found existing Dockerfile in provided application source at path '%s'; image will be built from this Dockerfile.",
        "InvalidArgumentsMessage": "Either appSourcePath or imageToDeploy must be provided, but not both.",
        "PackCliInstallFailed": "Unable to install pack CLI.",
        "PushImageToAcrFailed": "Unable to push image '%s' to ACR.",
        "SetDefaultBuilderFailed": "Unable to set the Oryx++ Builder as the default builder."
    }
}