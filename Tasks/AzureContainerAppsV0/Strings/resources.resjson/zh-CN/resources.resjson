{
  "loc.friendlyName": "Azure 容器应用部署",
  "loc.helpMarkDown": "[了解有关此任务的详细信息](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV0/README.md)",
  "loc.description": "用于生成和部署 Azure 容器应用的 Azure DevOps 任务。",
  "loc.instanceNameFormat": "Azure 容器应用部署",
  "loc.releaseNotes": "发布了用于生成和部署 Azure 容器应用的新 AzureContainerApps 任务。",
  "loc.input.label.cwd": "工作目录",
  "loc.input.help.cwd": "脚本运行于的当前工作目录。存储库(内部版本)或项目(发行版本)的根路径  $(System.DefaultWorkingDirectory) 为空",
  "loc.input.label.appSourcePath": "应用程序源路径",
  "loc.input.help.appSourcePath": "要生成的源应用程序代码的运行程序上的绝对路径。如果未提供，则必须提供“imageToDeploy”参数，以确保容器应用具有要引用的映像。",
  "loc.input.label.connectedServiceNameARM": "Azure 资源管理器连接",
  "loc.input.help.connectedServiceNameARM": "为部署选择 Azure 资源管理器服务连接",
  "loc.input.label.acrName": "Azure 容器注册表名称",
  "loc.input.help.acrName": "可运行应用程序映像将推送到的 Azure 容器注册表的名称。",
  "loc.input.label.acrUsername": "Azure 容器注册表用户名",
  "loc.input.help.acrUsername": "用于对所提供的 Azure 容器注册表的推送请求进行身份验证的用户名。如果未提供，将通过 “az acr login” 生成访问令牌，并将其提供给 “docker login” 以对请求进行身份验证。",
  "loc.input.label.acrPassword": "Azure 容器注册表密码",
  "loc.input.help.acrPassword": "用于对所提供的 Azure 容器注册表的推送请求进行身份验证的密码。如果未提供，将通过 “az acr login” 生成访问令牌，并将其提供给 “docker login” 以对请求进行身份验证。",
  "loc.input.label.dockerfilePath": "Dockerfile 路径",
  "loc.input.help.dockerfilePath": "所提供的应用程序源中 Dockerfile 的相对路径，该路径应用于生成映像，然后将其推送到 ACR 并部署到容器应用。如果未提供，此任务将检查所提供的应用程序源的根目录中是否存在名为“Dockerfile”的文件，并使用该文件生成映像。否则，Oryx++ Builder 将用于创建映像。",
  "loc.input.label.imageToBuild": "要生成的 Docker 映像",
  "loc.input.help.imageToBuild": "要生成、推送到 ACR 并由此任务部署到容器应用的映像的自定义名称。注意: 此映像名称应包括 ACR 服务器；例如，<acr-name>.azurecr.io/<repo>:<tag>。如果未提供此参数，将以 <acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number> 的形式构造默认映像名称。",
  "loc.input.label.imageToDeploy": "要部署的 Docker 映像",
  "loc.input.help.imageToDeploy": "映像的自定义名称，该映像已推送到 ACR，并将通过此任务部署到容器应用。注意: 映像名称应包括 ACR 服务器; 例如，<acr-name>.azurecr.io/<repo>:<tag>。如果未提供此参数，则将使用为“imageToBuild”参数提供的(或确定的)值。",
  "loc.input.label.containerAppName": "Azure 容器应用名称",
  "loc.input.help.containerAppName": "将创建或更新的 Azure 容器应用的名称。如果未提供，此值将采用 ado-task-app-<build-id>-<build-number> 的形式。",
  "loc.input.label.resourceGroup": "Azure 资源组名称",
  "loc.input.help.resourceGroup": "将在其中创建 Azure 容器应用的资源组。如果未提供，则此值将采用 <container-app-name>-rg 的形式。",
  "loc.input.label.containerAppEnvironment": "Azure 容器应用环境",
  "loc.input.help.containerAppEnvironment": "要与应用程序一起使用的 Azure 容器应用环境的名称。如果未提供，则将使用容器应用的资源组中的现有环境，否则，将以 <container-app-name>-env 格式创建环境。",
  "loc.input.label.runtimeStack": "应用程序运行时堆栈",
  "loc.input.help.runtimeStack": "将应用程序部署到 Azure 容器应用时运行的平台版本堆栈。这应以 <platform>:<version> 的形式提供。如果未提供，则此值由 Oryx 根据所提供应用程序的内容确定。有关 Oryx 支持的运行时堆栈的详细信息，请查看以下文档: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md",
  "loc.input.label.targetPort": "应用程序目标端口",
  "loc.input.help.targetPort": "应用程序要在其上运行的指定端口。如果未提供，则此值对于 Python 应用程序为 80，对于所有其他预期平台则为 8080。",
  "loc.input.label.location": "容器应用的位置",
  "loc.input.help.location": "容器应用(和其他已创建的资源)将部署到的位置。",
  "loc.input.label.environmentVariables": "环境变量",
  "loc.input.help.environmentVariables": "容器的环境变量列表。以 \"key=value\" 格式分隔的值。用于清除现有值的空字符串。前缀值为“secretref:”，用于引用机密。",
  "loc.input.label.disableTelemetry": "禁用遥测",
  "loc.input.help.disableTelemetry": "如果设置为“true”，则此 Azure DevOps 任务不会收集遥测数据。如果设置为“false”，或者未提供此参数，则会向 Microsoft 发送有关此 Azure DevOps 任务所针对的容器应用生成和部署方案的遥测数据。",
  "loc.messages.AcrAccessTokenAuthFailed": "无法使用访问令牌对 ACR 实例“%s.azurecr.io”进行身份验证。",
  "loc.messages.AcrAccessTokenLoginMessage": "使用要通过 Azure CLI 生成的访问令牌登录到 Azure 容器注册表。",
  "loc.messages.AcrUsernamePasswordAuthFailed": "无法通过用户名/密码对 ACR 实例“%s.azurecr.io”进行身份验证。",
  "loc.messages.AcrUsernamePasswordLoginMessage": "使用提供的 acrUsername 和 acrPassword 参数登录到 Azure 容器注册表。",
  "loc.messages.BashCommandFailed": "`无法运行提供的 bash 命令 \"%s\"。",
  "loc.messages.CheckForAppSourceDockerfileMessage": "未提供 dockerfilePath 参数; 正在检查应用源路径“%s”的根目录中的“Dockerfile”以从中生成映像。",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "部署容器应用时，使用提供的 containerAppEnvironment 值提供的“%s”。",
  "loc.messages.CreateImageWithBuilderFailed": "无法使用 Oryx++ Builder 创建可运行的应用程序映像。",
  "loc.messages.CreateImageWithBuilderMessage": "未为应用程序源提供或找到 Dockerfile；正在尝试使用 Oryx++ 生成器创建可运行的应用程序映像。",
  "loc.messages.CreateImageWithDockerfileFailed": "无法使用提供的或发现的 Dockerfile 创建可运行的应用程序映像。",
  "loc.messages.CreateImageWithDockerfileMessage": "已为应用程序源提供或找到 Dockerfile; 正在尝试从 Dockerfile“%s”生成映像。",
  "loc.messages.CreateOrUpdateContainerAppFailed": "无法通过“az container app”命令创建或更新 Azure 容器应用。",
  "loc.messages.DefaultContainerAppNameMessage": "未提供 containerAppName 参数; 正在设置要创建/更新到“%s”的容器应用的名称。",
  "loc.messages.DefaultImageToBuildMessage": "未提供 imageToBuild 参数; 正在将要生成的映像设置为“%s”。",
  "loc.messages.DefaultImageToDeployMessage": "未提供 imageToDeploy 参数; 正在将映像设置为部署到“%s”。",
  "loc.messages.DefaultResourceGroupMessage": "未提供 resourceGroup 参数；正在将部署的资源组设置为“%s”。",
  "loc.messages.DefaultRuntimeStackMessage": "未提供 runtimeStack 参数；正在使用为应用“%s”找到的运行时堆栈。",
  "loc.messages.DefaultTargetPortMessage": "未提供 targetPort 参数; 使用应用程序的目标端口“%s”。",
  "loc.messages.DetermineRuntimeStackFailed": "`无法从应用程序源“%s”确定运行时堆栈。",
  "loc.messages.ErrorCodeFormat": "错误代码: [%s]",
  "loc.messages.ErrorMessageFormat": "错误: %s",
  "loc.messages.FoundAppSourceDockerfileMessage": "在路径“%s”提供的应用程序源中找到现有的 Dockerfile; 映像将从此 Dockerfile 生成。",
  "loc.messages.LoginFailed": "Azure 登录失败",
  "loc.messages.MissingAcrNameMessage": "如果提供了 appSourcePath 参数，则还必须提供 acrName 参数。",
  "loc.messages.MissingImageToDeployMessage": "如果未提供 appSourcePath 和 acrName，则必须提供参数 imageToDeploy。",
  "loc.messages.PackCliInstallFailed": "无法安装包 CLI。",
  "loc.messages.PushImageToAcrFailed": "无法将映像“%s”推送到 ACR。",
  "loc.messages.SetDefaultBuilderFailed": "无法将 Oryx++ Builder 设置为默认生成器。"
}