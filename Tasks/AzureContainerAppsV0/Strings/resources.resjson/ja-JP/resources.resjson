{
  "loc.friendlyName": "Azure Container Apps のデプロイ",
  "loc.helpMarkDown": "[このタスクの詳細](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV0/README.md)",
  "loc.description": "Azure Container Apps をビルドしてデプロイするためのAzure DevOps タスク。",
  "loc.instanceNameFormat": "Azure Container Apps のデプロイ",
  "loc.releaseNotes": "Azure Container Apps を構築してデプロイするための新しい AzureContainerApps タスクをリリースしました。",
  "loc.input.label.cwd": "作業ディレクトリ",
  "loc.input.help.cwd": "スクリプトを実行する現行の作業ディレクトリです。空白の場合はリポジトリ (ビルド) または成果物 (リリース) のルートであり、$(System.DefaultWorkingDirectory) となります",
  "loc.input.label.appSourcePath": "アプリケーションのソース パス",
  "loc.input.help.appSourcePath": "ビルドするソース アプリケーション コードのランナー上の絶対パスです。指定しない場合は、コンテナー アプリに参照するイメージがあることを確認するために、'imageToDeploy' 引数を指定する必要があります。",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager 接続",
  "loc.input.help.connectedServiceNameARM": "デプロイ用の Azure Resource Manager サービス接続を選択します",
  "loc.input.label.acrName": "Azure Container Registry 名",
  "loc.input.help.acrName": "実行可能なアプリケーション イメージのプッシュ先となる Azure Container Registry の名前。",
  "loc.input.label.acrUsername": "Azure Container Registry ユーザー名",
  "loc.input.help.acrUsername": "指定された Azure Container Registry へのプッシュ要求の認証に使用されるユーザー名です。指定しない場合、アクセス トークンは 'az acr login' を介して生成され、要求を認証するために 'docker login' に提供されます。",
  "loc.input.label.acrPassword": "Azure Container Registry のパスワード",
  "loc.input.help.acrPassword": "指定された Azure Container Registry へのプッシュ要求の認証に使用されるパスワードです。指定しない場合、アクセス トークンは 'az acr login' を介して生成され、要求を認証するために 'docker login' に提供されます。",
  "loc.input.label.dockerfilePath": "Dockerfile パス",
  "loc.input.help.dockerfilePath": "指定されたアプリケーション ソース内の Dockerfile への相対パスで、イメージをビルドするために使用する必要があります。イメージは ACR にプッシュされ、コンテナー アプリにデプロイされます。指定しない場合、このタスクは、指定されたアプリケーション ソースのルートに 'Dockerfile' という名前のファイルがあるかどうかを確認し、それを使用してイメージをビルドします。それ以外の場合は、Oryx++ Builder を使用してイメージが作成されます。",
  "loc.input.label.imageToBuild": "ビルドする Docker イメージ",
  "loc.input.help.imageToBuild": "The custom name of the image that is to be built, pushed to ACR and deployed to the Container App by this task. Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is not provided, a default image name will be constructed in the form of `<acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number>`.",
  "loc.input.label.imageToDeploy": "デプロイする Docker イメージ",
  "loc.input.help.imageToDeploy": "ACR に既にプッシュされ、このタスクによってコンテナー アプリにデプロイされるイメージのカスタム名です。注: イメージ名には ACR サーバーを含める必要があります。例: 。<acr-name>.azurecr.io/<repo>:<tag>。この引数が指定されていない場合は、'imageToBuild' 引数に指定 (または決定) された値が使用されます。",
  "loc.input.label.containerAppName": "Azure Container Apps 名",
  "loc.input.help.containerAppName": "The name of the Azure Container App that will be created or updated. If not provided, this value will be in the form of `ado-task-app-<build-id>-<build-number>`.",
  "loc.input.label.resourceGroup": "Azure リソース グループ名",
  "loc.input.help.resourceGroup": "The existing resource group that the Azure Container App will be created in. If not provided, this value will be `<container-app-name>-rg` and its existence will first be checked before attempting to create it.",
  "loc.input.label.containerAppEnvironment": "Azure Container App 環境",
  "loc.input.help.containerAppEnvironment": "The name of the Azure Container App environment to use with the application. If not provided, an existing environment in the resource group of the Container App will be used, otherwise, an environment will be created in the form of `<container-app-name>-env`.",
  "loc.input.label.runtimeStack": "アプリケーション ランタイム スタック",
  "loc.input.help.runtimeStack": "The platform version stack that the application runs in when deployed to the Azure Container App. This should be provided in the form of `<platform>:<version>`. If not provided, this value is determined by Oryx based on the contents of the provided application. Please view the following document for more information on the supported runtime stacks for Oryx: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md",
  "loc.input.label.targetPort": "アプリケーション ターゲット ポート",
  "loc.input.help.targetPort": "The designated port for the application to run on. If no value is provided and the builder is used to build the runnable application image, the target port will be set to 80 for Python applications and 8080 for all other platform applications. If no value is provided when creating a Container App, the target port will default to 80. Note: when using this task to update a Container App, the target port may be updated if not provided based on changes to the ingress property.",
  "loc.input.label.location": "コンテナー アプリの場所",
  "loc.input.help.location": "コンテナー アプリ (およびその他の作成されたリソース) のデプロイ先となる場所。",
  "loc.input.label.environmentVariables": "環境変数",
  "loc.input.help.environmentVariables": "コンテナーの環境変数のリスト。スペースで区切られた値を 'key=value' 形式で指定します。既存の値をクリアするための空の文字列。シークレットを参照するプレフィックス値に 'secretref:' を付けます。",
  "loc.input.label.ingress": "Ingress setting",
  "loc.input.help.ingress": "Possible options: external, internal, disabled. If set to `external` (default value if not provided when creating a Container App), the Container App will be visible from the internet or a VNET, depending on the app environment endpoint configured. If set to `internal`, the Container App will be visible from within the app environment only. If set to `disabled`, ingress will be disabled for this Container App and will not have an HTTP or TCP endpoint.",
  "loc.input.label.yamlConfigPath": "YAML configuration file path",
  "loc.input.help.yamlConfigPath": "Full path (on the executing Azure Pipelines agent) to the YAML file detailing the configuration of the Container App.",
  "loc.input.label.disableTelemetry": "テレメトリを無効にする",
  "loc.input.help.disableTelemetry": "'true' に設定すると、この Azure DevOps タスクによってテレメトリは収集されません。'false' に設定した場合、またはこの引数が指定されていない場合は、この Azure DevOps タスクの対象となるコンテナー アプリのビルドとデプロイのシナリオに関するテレメトリが Microsoft に送信されます。",
  "loc.messages.AcrAccessTokenAuthFailed": "アクセス トークンを使用して ACR インスタンス '%s.azurecr.io' に対して認証できません。",
  "loc.messages.AcrAccessTokenLoginMessage": "Azure CLI 経由で生成されるアクセス トークンを使用して Azure Container Registry にログインしています。",
  "loc.messages.AcrUsernamePasswordAuthFailed": "ユーザー名/パスワードを使用して ACR インスタンス '%s.azurecr.io' に対して認証できません。",
  "loc.messages.AcrUsernamePasswordLoginMessage": "指定された acrUsername 引数と acrPassword 引数を使用して Azure Container Registry にログインしています。",
  "loc.messages.AzureCliDynamicInstallFailed": "Unable to set the Azure CLI to dynamically install missing extensions.",
  "loc.messages.BashCommandFailed": "Unable to run provided bash command '%s'.",
  "loc.messages.CheckForAppSourceDockerfileMessage": "dockerfilePath 引数が指定されていません。イメージのビルド元のアプリ ソース パス '%s' のルートにある 'Dockerfile' を確認しています。",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "コンテナー アプリケーションのデプロイ時に指定された containerAppEnvironment 値 '%s' を使用しています。",
  "loc.messages.CreateContainerAppEnvironmentFailed": "Unable to create Container App Environment.",
  "loc.messages.CreateContainerAppFailed": "Unable to create Azure Container App via 'az containerapp create' command.",
  "loc.messages.CreateContainerAppFromYamlFailed": "Unable to create Azure Container App from YAML configuration file via 'az containerapp create' command.",
  "loc.messages.CreateImageWithBuilderFailed": "Oryx++ Builder を使用して実行可能なアプリケーション イメージを作成できません。",
  "loc.messages.CreateImageWithBuilderMessage": "アプリケーション ソースの Dockerfile が指定されていないか、見つかりませんでした。Oryx++ Builder を使用して実行可能なアプリケーション イメージを作成しようとしています。",
  "loc.messages.CreateImageWithDockerfileFailed": "指定または検出された Dockerfile を使用して実行可能なアプリケーション イメージを作成できません。",
  "loc.messages.CreateImageWithDockerfileMessage": "アプリケーション ソースに対して Dockerfile が指定されたか見つかりました。Dockerfile '%s' からイメージをビルドしようとしています。",
  "loc.messages.CreateResourceGroupFailed": "Unable to create resource group '%s'.",
  "loc.messages.DefaultContainerAppNameMessage": "containerAppName 引数が指定されませんでした。作成/更新するコンテナー アプリの名前を '%s' に設定します。",
  "loc.messages.DefaultContainerAppEnvironmentMessage": "No containerAppEnvironment argument was provided; setting the Container App to create/update to '%s'.",
  "loc.messages.DefaultImageToBuildMessage": "imageToBuild 引数が指定されませんでした。ビルドするイメージを '%s' に設定しています。",
  "loc.messages.DefaultImageToDeployMessage": "imageToDeploy 引数が指定されませんでした。イメージを '%s' にデプロイするように設定しています。",
  "loc.messages.DefaultIngressMessage": "No ingress argument was provided, setting the ingress value to '%s'.",
  "loc.messages.DefaultResourceGroupMessage": "resourceGroup 引数が指定されませんでした。デプロイのリソース グループを '%s' に設定しています。",
  "loc.messages.DefaultRuntimeStackMessage": "runtimeStack 引数が指定されませんでした。アプリ '%s' で見つかったランタイム スタックを使用します。",
  "loc.messages.DefaultTargetPortMessage": "targetPort 引数が指定されませんでした。アプリケーションのターゲット ポート '%s' を使用します。",
  "loc.messages.DetermineRuntimeStackFailed": "Unable to determine runtime stack from application source '%s'.",
  "loc.messages.DisableContainerAppIngressFailed": "Unable to disable ingress for the Container App.",
  "loc.messages.DisabledIngressMessage": "Ingress will be disabled for the Container App.",
  "loc.messages.EnableContainerAppIngressFailed": "Unable to enable ingress for the Container App.",
  "loc.messages.ErrorCodeFormat": "エラー コード: [%s]",
  "loc.messages.ErrorMessageFormat": "エラー: %s",
  "loc.messages.ExistingContainerAppEnvironmentMessage": "Discovered existing Container App Environment, '%s', to use with the Container App.",
  "loc.messages.FoundAppSourceDockerfileMessage": "指定されたアプリケーション ソースのパス '%s' で既存の Dockerfile が見つかりました。イメージはこの Dockerfile からビルドされます。",
  "loc.messages.MissingAcrNameMessage": "appSourcePath 引数が指定されている場合は、acrName 引数も指定する必要があります。",
  "loc.messages.MissingRequiredArgumentMessage": "One of the following arguments must be provided: appSourcePath, imageToDeploy, yamlConfigPath",
  "loc.messages.PackCliInstallFailed": "パック CLI をインストールできません。",
  "loc.messages.PushImageToAcrFailed": "イメージ '%s' を ACR にプッシュできません。",
  "loc.messages.SetDefaultBuilderFailed": "Oryx++ ビルダーを既定のビルダーとして設定できません。",
  "loc.messages.UpdateContainerAppFailed": "Unable to update Azure Container App via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppFromYamlFailed": "Unable to update Azure Container App from YAML configuration file via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppRegistryDetailsFailed": "Unable to update Azure Container App ACR details via 'az containerapp registry set' command."
}