{
  "loc.friendlyName": "Déployer Azure Container Apps",
  "loc.helpMarkDown": "[En savoir plus sur cette tâche](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV0/README.md)",
  "loc.description": "Une tâche Azure DevOps pour générer et déployer Azure Container Apps",
  "loc.instanceNameFormat": "Déployer Azure Container Apps",
  "loc.releaseNotes": "Publication de la nouvelle tâche AzureContainerApps pour la création et le déploiement d’Azure Container Apps.",
  "loc.input.label.cwd": "Répertoire de travail",
  "loc.input.help.cwd": "Répertoire de travail actif dans lequel le script est exécuté. Une valeur vide représente la racine du dépôt (build) ou des artefacts (mise en production), à savoir $(System.DefaultWorkingDirectory)",
  "loc.input.label.appSourcePath": "Chemin d’accès source de l’application",
  "loc.input.help.appSourcePath": "Chemin d’accès absolu sur le runner du code source de l’application à construire. S’il n’est pas fourni, l’argument 'imageToDeploy' doit être fourni pour s’assurer que l’application conteneur a une image à référencer.",
  "loc.input.label.connectedServiceNameARM": "Connexion Azure Resource Manager",
  "loc.input.help.connectedServiceNameARM": "Sélectionnez une connexion de service Azure Resource Manager pour le déploiement",
  "loc.input.label.acrName": "Nom du registre de conteneurs Azure",
  "loc.input.help.acrName": "Le nom d’Azure Container Registry vers lequel l’image de l’application exécutable sera poussée",
  "loc.input.label.acrUsername": "Nom d’utilisateur d’Azure Container Registry",
  "loc.input.help.acrUsername": "Nom d’utilisateur utilisé pour authentifier les demandes Push auprès du Azure Container Registry fourni. S’il n’est pas fourni, un jeton d’accès est généré via « az acr login » et fourni à « docker login » pour authentifier les demandes.",
  "loc.input.label.acrPassword": "Mot de passe Azure Container Registry",
  "loc.input.help.acrPassword": "Le mot de passe utilisé pour authentifier les demandes d’envoi auprès du Azure Container Registry fourni. S’il n’est pas fourni, un jeton d’accès est généré via 'az acr login' et fourni à 'docker login' pour authentifier les demandes.",
  "loc.input.label.dockerfilePath": "Chemin du fichier Docker",
  "loc.input.help.dockerfilePath": "Chemin relatif vers le fichier Dockerfile dans la source de l’application fournie qui doit être utilisé pour construire l’image qui est ensuite poussée vers ACR et déployée dans l’application conteneur. Si elle n’est pas fournie, cette tâche vérifiera s’il existe un fichier nommé 'Dockerfile' à la racine de la source d’application fournie et l’utilisera pour construire l’image. Sinon, l’Oryx++ Builder sera utilisé pour créer l’image.",
  "loc.input.label.imageToBuild": "Image Docker à générer",
  "loc.input.help.imageToBuild": "The custom name of the image that is to be built, pushed to ACR and deployed to the Container App by this task. Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is not provided, a default image name will be constructed in the form of `<acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number>`.",
  "loc.input.label.imageToDeploy": "Image Docker à déployer",
  "loc.input.help.imageToDeploy": "Le nom personnalisé de l’image qui a déjà été poussée vers ACR et qui sera déployée vers l’application conteneur par cette tâche. Remarque : le nom de l’image doit inclure le serveur ACR ; par exemple, <acr-name>.azurecr.io/<repo>:<tag>. Si cet argument n’est pas fourni, la valeur fournie (ou déterminée) pour l’argument 'imageToBuild' sera utilisée.",
  "loc.input.label.containerAppName": "Nom de l’application du conteneur Azure",
  "loc.input.help.containerAppName": "The name of the Azure Container App that will be created or updated. If not provided, this value will be in the form of `ado-task-app-<build-id>-<build-number>`.",
  "loc.input.label.resourceGroup": "Nom du groupe de ressources Azure",
  "loc.input.help.resourceGroup": "The existing resource group that the Azure Container App will be created in. If not provided, this value will be `<container-app-name>-rg` and its existence will first be checked before attempting to create it.",
  "loc.input.label.containerAppEnvironment": "Environnement Azure Container App",
  "loc.input.help.containerAppEnvironment": "The name of the Azure Container App environment to use with the application. If not provided, an existing environment in the resource group of the Container App will be used, otherwise, an environment will be created in the form of `<container-app-name>-env`.",
  "loc.input.label.runtimeStack": "Pile de l’Application Runtime",
  "loc.input.help.runtimeStack": "The platform version stack that the application runs in when deployed to the Azure Container App. This should be provided in the form of `<platform>:<version>`. If not provided, this value is determined by Oryx based on the contents of the provided application. Please view the following document for more information on the supported runtime stacks for Oryx: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md",
  "loc.input.label.targetPort": "Port cible de l’application",
  "loc.input.help.targetPort": "The designated port for the application to run on. If no value is provided and the builder is used to build the runnable application image, the target port will be set to 80 for Python applications and 8080 for all other platform applications. If no value is provided when creating a Container App, the target port will default to 80. Note: when using this task to update a Container App, the target port may be updated if not provided based on changes to the ingress property.",
  "loc.input.label.location": "Emplacement de l’application conteneur",
  "loc.input.help.location": "Emplacement où l’application conteneur (et d’autres ressources créées) sera déployée.",
  "loc.input.label.environmentVariables": "Variables d’environnement",
  "loc.input.help.environmentVariables": "Liste de variables d’environnement pour le conteneur. Valeurs séparées par des espaces au format 'key=value'. Chaîne vide pour effacer les valeurs existantes. Valeur de préfixe avec 'secretref:' pour référencer un secret.",
  "loc.input.label.ingress": "Ingress setting",
  "loc.input.help.ingress": "Possible options: external, internal, disabled. If set to `external` (default value if not provided when creating a Container App), the Container App will be visible from the internet or a VNET, depending on the app environment endpoint configured. If set to `internal`, the Container App will be visible from within the app environment only. If set to `disabled`, ingress will be disabled for this Container App and will not have an HTTP or TCP endpoint.",
  "loc.input.label.yamlConfigPath": "YAML configuration file path",
  "loc.input.help.yamlConfigPath": "Full path (on the executing Azure Pipelines agent) to the YAML file detailing the configuration of the Container App.",
  "loc.input.label.disableTelemetry": "Désactiver la télémétrie",
  "loc.input.help.disableTelemetry": "Si la valeur est 'true', aucune télémétrie n’est collectée par cette tâche Azure DevOps. Si la valeur est 'false', ou si cet argument n’est pas fourni, la télémétrie est envoyée à Microsoft à propos du scénario de génération et de déploiement d’application conteneur ciblé par cette tâche Azure DevOps.",
  "loc.messages.AcrAccessTokenAuthFailed": "Impossible d’authentifier l’instance ACR « %s.azurecr.io » avec le jeton d’accès.",
  "loc.messages.AcrAccessTokenLoginMessage": "Connexion à Azure Container Registry à l’aide du jeton d’accès à générer via Azure CLI.",
  "loc.messages.AcrUsernamePasswordAuthFailed": "Impossible de s’authentifier auprès de l’instance ACR '%s.azurecr.io' avec nom d’utilisateur/mot de passe.",
  "loc.messages.AcrUsernamePasswordLoginMessage": "Connexion à Azure Container Registry à l’aide des arguments acrUsername et acrPassword fournis.",
  "loc.messages.AzureCliDynamicInstallFailed": "Unable to set the Azure CLI to dynamically install missing extensions.",
  "loc.messages.BashCommandFailed": "Unable to run provided bash command '%s'.",
  "loc.messages.CheckForAppSourceDockerfileMessage": "Aucun argument dockerfilePath n'a été fourni; recherche de 'Dockerfile' à la racine du chemin source de l’application '%s' pour construire l’image.",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "L’utilisation de la valeur containerAppEnvironment fournie '%s' lors du déploiement de l’application conteneur.",
  "loc.messages.CreateContainerAppEnvironmentFailed": "Unable to create Container App Environment.",
  "loc.messages.CreateContainerAppFailed": "Unable to create Azure Container App via 'az containerapp create' command.",
  "loc.messages.CreateContainerAppFromYamlFailed": "Unable to create Azure Container App from YAML configuration file via 'az containerapp create' command.",
  "loc.messages.CreateImageWithBuilderFailed": "Nous n’avons pas pu créer une image d’application exécutable à l’aide d’Oryx++Builder.",
  "loc.messages.CreateImageWithBuilderMessage": "Aucun Dockerfile n’a été fourni ou trouvé pour la source de l’application ; tentative de création d’une image d’application exécutable à l’aide du générateur Oryx++.",
  "loc.messages.CreateImageWithDockerfileFailed": "Nous n’avons pas pu créer une image d’application exécutable à l’aide du Dockerfile fourni ou découvert.",
  "loc.messages.CreateImageWithDockerfileMessage": "Un Dockerfile a été fourni ou trouvé pour la source de l’application. Tentative de génération de l’image à partir de Dockerfile '%s'",
  "loc.messages.CreateResourceGroupFailed": "Unable to create resource group '%s'.",
  "loc.messages.DefaultContainerAppNameMessage": "Aucun argument containerAppName n’a été fourni. Définition du nom de l’application conteneur à créer/mettre à jour pour '%s'.",
  "loc.messages.DefaultContainerAppEnvironmentMessage": "No containerAppEnvironment argument was provided; setting the Container App to create/update to '%s'.",
  "loc.messages.DefaultImageToBuildMessage": "Aucun argument imageToBuild n’a été fourni; définition de l’image à générer pour '%s'.",
  "loc.messages.DefaultImageToDeployMessage": "Aucun argument imageToDeploy n’a été fourni. Définition de l’image à déployer sur '%s'",
  "loc.messages.DefaultIngressMessage": "No ingress argument was provided, setting the ingress value to '%s'.",
  "loc.messages.DefaultResourceGroupMessage": "Aucun argument resourceGroup n’a été fourni ; définition du groupe de ressources pour le déploiement sur '%s'.",
  "loc.messages.DefaultRuntimeStackMessage": "Aucun argument runtimeStack n’a été fourni ; à l’aide de la pile d’exécution trouvée pour l’application '%s'.",
  "loc.messages.DefaultTargetPortMessage": "Aucun argument targetPort n’a été fourni. Utilisation du port cible '%s' pour l’application",
  "loc.messages.DetermineRuntimeStackFailed": "Unable to determine runtime stack from application source '%s'.",
  "loc.messages.DisableContainerAppIngressFailed": "Unable to disable ingress for the Container App.",
  "loc.messages.DisabledIngressMessage": "Ingress will be disabled for the Container App.",
  "loc.messages.EnableContainerAppIngressFailed": "Unable to enable ingress for the Container App.",
  "loc.messages.ErrorCodeFormat": "Code d’erreur : [%s]",
  "loc.messages.ErrorMessageFormat": "Erreur : %s",
  "loc.messages.ExistingContainerAppEnvironmentMessage": "Discovered existing Container App Environment, '%s', to use with the Container App.",
  "loc.messages.FoundAppSourceDockerfileMessage": "Dockerfile existant trouvé dans la source d’application fournie dans le chemin d’accès '%s'; l’image sera générée à partir de ce Dockerfile.",
  "loc.messages.MissingAcrNameMessage": "L’argument acrName doit également être fourni si l’argument appSourcePath est fourni.",
  "loc.messages.MissingRequiredArgumentMessage": "One of the following arguments must be provided: appSourcePath, imageToDeploy, yamlConfigPath",
  "loc.messages.PackCliInstallFailed": "Impossible d’installer l’interface CLI du pack.",
  "loc.messages.PushImageToAcrFailed": "Impossible d’envoyer (push) l’image '%s' à ACR.",
  "loc.messages.SetDefaultBuilderFailed": "Nous n’avons pas pu définir le générateur Oryx++ comme générateur par défaut.",
  "loc.messages.UpdateContainerAppFailed": "Unable to update Azure Container App via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppFromYamlFailed": "Unable to update Azure Container App from YAML configuration file via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppRegistryDetailsFailed": "Unable to update Azure Container App ACR details via 'az containerapp registry set' command."
}