{
  "loc.friendlyName": "Azure Container Apps Bereitstellen",
  "loc.helpMarkDown": "[Weitere Informationen zu dieser Aufgabe](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV0/README.md)",
  "loc.description": "Eine Azure DevOps-Aufgabe zum Erstellen und Bereitstellen von Azure Container Apps.",
  "loc.instanceNameFormat": "Azure Container Apps Bereitstellen",
  "loc.releaseNotes": "Neue AzureContainerApps-Aufgabe zum Erstellen und Bereitstellen von Azure Container Apps veröffentlicht.",
  "loc.input.label.cwd": "Arbeitsverzeichnis",
  "loc.input.help.cwd": "Das aktuelle Arbeitsverzeichnis, in dem das Skript ausgeführt wird. Wenn keine Angabe erfolgt, wird der Stamm des Repositorys (Build) oder der Artefakte (Release) verwendet, das \"$(System.DefaultWorkingDirectory)\" lautet.",
  "loc.input.label.appSourcePath": "Quellpfad der Anwendung",
  "loc.input.help.appSourcePath": "Absoluter Pfad auf dem Runner des zu erstellenden Quellcodes der Quellcodeanwendung. Wenn keine Angabe erfolgt, muss das Argument \"imageToDeploy\" angegeben werden, um sicherzustellen, dass die Container-App über ein Image verfügt, auf das verwiesen werden soll.",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager-Verbindung",
  "loc.input.help.connectedServiceNameARM": "Wählen Sie eine Azure Resource Manager-Dienstverbindung für die Bereitstellung aus.",
  "loc.input.label.acrName": "Azure Container Registry-Name",
  "loc.input.help.acrName": "Der Name der Azure Container Registry, an die das ausführbare Anwendungsimage gepusht wird.",
  "loc.input.label.acrUsername": "Benutzername für Azure Container Registry",
  "loc.input.help.acrUsername": "Der Benutzername, der zum Authentifizieren von Pushanforderungen an die bereitgestellte Azure Container Registry verwendet wird. Wenn keine Angabe erfolgt, wird ein Zugriffstoken über \"az acr login\" generiert und an \"docker login\" übergeben, um die Anforderungen zu authentifizieren.",
  "loc.input.label.acrPassword": "Kennwort für Azure Container Registry",
  "loc.input.help.acrPassword": "Das Kennwort, das zum Authentifizieren von Pushanforderungen an die bereitgestellte Azure Container Registry verwendet wird. Wenn keine Angabe erfolgt, wird ein Zugriffstoken über \"az acr login\" generiert und an \"docker login\" übergeben, um die Anforderungen zu authentifizieren.",
  "loc.input.label.dockerfilePath": "Dockerfile-Pfad",
  "loc.input.help.dockerfilePath": "Relativer Pfad zur Dockerfile-Datei in der bereitgestellten Anwendungsquelle, die zum Erstellen des Images verwendet werden soll, das dann per Push an ACR übertragen und in der Container-App bereitgestellt wird. Wenn keine Angabe erfolgt, überprüft diese Aufgabe, ob im Stammverzeichnis der angegebenen Anwendungsquelle eine Datei mit dem Namen \"Dockerfile\" vorhanden ist, und verwendet diese Datei, um das Image zu erstellen. Andernfalls wird der Oryx++-Generator zum Erstellen des Images verwendet.",
  "loc.input.label.imageToBuild": "Zu erstellendes Docker-Image",
  "loc.input.help.imageToBuild": "The custom name of the image that is to be built, pushed to ACR and deployed to the Container App by this task. Note: this image name should include the ACR server; e.g., <acr-name>.azurecr.io/<repo>:<tag>. If this argument is not provided, a default image name will be constructed in the form of `<acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number>`.",
  "loc.input.label.imageToDeploy": "Bereitzustellendes Docker-Image",
  "loc.input.help.imageToDeploy": "Der benutzerdefinierte Name des Images, das bereits per Push an ACR übertragen wurde und durch diese Aufgabe in der Container-App bereitgestellt wird. Hinweis: Der Imagename sollte den ACR-Server enthalten. Beispiel: <acr-name>.azurecr.io/<repo>:<tag>. Wenn dieses Argument nicht angegeben wird, wird der für das Argument \"imageToBuild\" angegebene (oder festgelegte) Wert verwendet.",
  "loc.input.label.containerAppName": "Name der Azure Container-App",
  "loc.input.help.containerAppName": "The name of the Azure Container App that will be created or updated. If not provided, this value will be in the form of `ado-task-app-<build-id>-<build-number>`.",
  "loc.input.label.resourceGroup": "Name der Azure-Ressourcengruppe",
  "loc.input.help.resourceGroup": "The existing resource group that the Azure Container App will be created in. If not provided, this value will be `<container-app-name>-rg` and its existence will first be checked before attempting to create it.",
  "loc.input.label.containerAppEnvironment": "Azure Container-App-Umgebung",
  "loc.input.help.containerAppEnvironment": "The name of the Azure Container App environment to use with the application. If not provided, an existing environment in the resource group of the Container App will be used, otherwise, an environment will be created in the form of `<container-app-name>-env`.",
  "loc.input.label.runtimeStack": "Application Runtime-Stapel",
  "loc.input.help.runtimeStack": "The platform version stack that the application runs in when deployed to the Azure Container App. This should be provided in the form of `<platform>:<version>`. If not provided, this value is determined by Oryx based on the contents of the provided application. Please view the following document for more information on the supported runtime stacks for Oryx: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md",
  "loc.input.label.targetPort": "Zielport der Anwendung",
  "loc.input.help.targetPort": "The designated port for the application to run on. If no value is provided and the builder is used to build the runnable application image, the target port will be set to 80 for Python applications and 8080 for all other platform applications. If no value is provided when creating a Container App, the target port will default to 80. Note: when using this task to update a Container App, the target port may be updated if not provided based on changes to the ingress property.",
  "loc.input.label.location": "Speicherort der Container-App",
  "loc.input.help.location": "Der Speicherort, an dem die Container-App (und andere erstellte Ressourcen) bereitgestellt werden.",
  "loc.input.label.environmentVariables": "Umgebungsvariablen",
  "loc.input.help.environmentVariables": "Eine Liste der Umgebungsvariablen für den Container. Durch Leerzeichen getrennte Werte im Format \"key=value\". Leere Zeichenfolge zum Löschen vorhandener Werte. Präfixwert mit \"secretref:\", um auf ein Geheimnis zu verweisen.",
  "loc.input.label.ingress": "Ingress setting",
  "loc.input.help.ingress": "Possible options: external, internal, disabled. If set to `external` (default value if not provided when creating a Container App), the Container App will be visible from the internet or a VNET, depending on the app environment endpoint configured. If set to `internal`, the Container App will be visible from within the app environment only. If set to `disabled`, ingress will be disabled for this Container App and will not have an HTTP or TCP endpoint.",
  "loc.input.label.yamlConfigPath": "YAML configuration file path",
  "loc.input.help.yamlConfigPath": "Full path (on the executing Azure Pipelines agent) to the YAML file detailing the configuration of the Container App.",
  "loc.input.label.disableTelemetry": "Telemetrie deaktivieren",
  "loc.input.help.disableTelemetry": "Wenn auf \"true\" festgelegt, werden von diesem Azure DevOps Task keine Telemetriedaten erfasst. Wenn \"false\" festgelegt ist oder dieses Argument nicht angegeben wird, werden Telemetriedaten zum Build- und Bereitstellungsszenario der Container-App, auf das diese Azure DevOps-Aufgabe abzielt, an Microsoft gesendet.",
  "loc.messages.AcrAccessTokenAuthFailed": "Die Authentifizierung bei der ACR-Instanz \"%s.azurecr.io\" mit Zugriffstoken ist nicht möglich.",
  "loc.messages.AcrAccessTokenLoginMessage": "Melden Sie sich bei Azure Container Registry mithilfe des Zugriffstokens an, das über Azure CLI generiert werden soll.",
  "loc.messages.AcrUsernamePasswordAuthFailed": "Die Authentifizierung bei der ACR-Instanz \"%s.azurecr.io\" mit Benutzername/Kennwort ist nicht möglich.",
  "loc.messages.AcrUsernamePasswordLoginMessage": "Melden Sie sich bei Azure Container Registry mit den angegebenen Argumenten \"acrUsername\" und \"acrPassword\" an.",
  "loc.messages.AzureCliDynamicInstallFailed": "Unable to set the Azure CLI to dynamically install missing extensions.",
  "loc.messages.BashCommandFailed": "Unable to run provided bash command '%s'.",
  "loc.messages.CheckForAppSourceDockerfileMessage": "Es wurde kein dockerfilePath-Argument angegeben. Überprüfung auf \"Dockerfile\" im Stammverzeichnis des App-Quellpfads \"%s\", aus dem das Image erstellt werden soll.",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "Verwenden des angegebenen containerAppEnvironment-Werts, der beim Bereitstellen der Container-App \"%s\" angegeben wurde.",
  "loc.messages.CreateContainerAppEnvironmentFailed": "Unable to create Container App Environment.",
  "loc.messages.CreateContainerAppFailed": "Unable to create Azure Container App via 'az containerapp create' command.",
  "loc.messages.CreateContainerAppFromYamlFailed": "Unable to create Azure Container App from YAML configuration file via 'az containerapp create' command.",
  "loc.messages.CreateImageWithBuilderFailed": "Das ausführbare Anwendungsimage kann nicht mithilfe von Oryx++-Generator erstellt werden.",
  "loc.messages.CreateImageWithBuilderMessage": "Für die Anwendungsquelle wurde keine Dockerfile-Datei angegeben oder gefunden. Es wird versucht, ein ausführbares Anwendungsimage mithilfe des Oryx++-Generators zu erstellen.",
  "loc.messages.CreateImageWithDockerfileFailed": "Das ausführbare Anwendungsimage kann nicht mithilfe der angegebenen oder ermittelten Dockerfile-Datei erstellt werden.",
  "loc.messages.CreateImageWithDockerfileMessage": "Für die Anwendungsquelle wurde eine Dockerfile-Datei bereitgestellt oder gefunden. Es wird versucht, das Image aus der Dockerfile-Datei \"%s\" zu erstellen.",
  "loc.messages.CreateResourceGroupFailed": "Unable to create resource group '%s'.",
  "loc.messages.DefaultContainerAppNameMessage": "Es wurde kein containerAppName-Argument angegeben. Festlegen des Namens der Container-App, die auf \"%s\" erstellt/aktualisiert werden soll.",
  "loc.messages.DefaultContainerAppEnvironmentMessage": "No containerAppEnvironment argument was provided; setting the Container App to create/update to '%s'.",
  "loc.messages.DefaultImageToBuildMessage": "Es wurde kein imageToBuild-Argument angegeben. festlegen, dass das Image auf \"%s\" erstellt werden soll.",
  "loc.messages.DefaultImageToDeployMessage": "Es wurde kein imageToDeploy-Argument angegeben. festlegen, dass das Image auf \"%s\" bereitgestellt werden soll.",
  "loc.messages.DefaultIngressMessage": "No ingress argument was provided, setting the ingress value to '%s'.",
  "loc.messages.DefaultResourceGroupMessage": "Es wurde kein resourceGroup-Argument angegeben. Die Ressourcengruppe für die Bereitstellung auf \"%s\" festlegen.",
  "loc.messages.DefaultRuntimeStackMessage": "Es wurde kein runtimeStack-Argument angegeben. Es wird der Runtime-Stack verwendet, der für die Anwendung \"%s\" gefunden wurde.",
  "loc.messages.DefaultTargetPortMessage": "Es wurde kein targetPort-Argument angegeben. Verwendung des Zielports \"%s\" für die Anwendung.",
  "loc.messages.DetermineRuntimeStackFailed": "Unable to determine runtime stack from application source '%s'.",
  "loc.messages.DisableContainerAppIngressFailed": "Unable to disable ingress for the Container App.",
  "loc.messages.DisabledIngressMessage": "Ingress will be disabled for the Container App.",
  "loc.messages.EnableContainerAppIngressFailed": "Unable to enable ingress for the Container App.",
  "loc.messages.ErrorCodeFormat": "Fehlercode: [%s]",
  "loc.messages.ErrorMessageFormat": "Fehler: %s",
  "loc.messages.ExistingContainerAppEnvironmentMessage": "Discovered existing Container App Environment, '%s', to use with the Container App.",
  "loc.messages.FoundAppSourceDockerfileMessage": "Es wurde eine vorhandene Dockerfile-Datei in der angegebenen Anwendungsquelle im Pfad \"%s\" gefunden. Das Image wird aus dieser Dockerfile-Datei erstellt.",
  "loc.messages.MissingAcrNameMessage": "Das acrName-Argument muss auch angegeben werden, wenn das appSourcePath-Argument angegeben wird.",
  "loc.messages.MissingRequiredArgumentMessage": "One of the following arguments must be provided: appSourcePath, imageToDeploy, yamlConfigPath",
  "loc.messages.PackCliInstallFailed": "Die Paket-CLI kann nicht installiert werden.",
  "loc.messages.PushImageToAcrFailed": "Das Image \"%s\" kann nicht per Push an ACR übertragen werden.",
  "loc.messages.SetDefaultBuilderFailed": "Der Oryx++-Generator kann nicht als Standard-Generator festgelegt werden.",
  "loc.messages.UpdateContainerAppFailed": "Unable to update Azure Container App via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppFromYamlFailed": "Unable to update Azure Container App from YAML configuration file via 'az containerapp update' command.",
  "loc.messages.UpdateContainerAppRegistryDetailsFailed": "Unable to update Azure Container App ACR details via 'az containerapp registry set' command."
}