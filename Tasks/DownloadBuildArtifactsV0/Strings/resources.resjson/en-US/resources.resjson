{
  "loc.friendlyName": "Download build artifacts",
  "loc.helpMarkDown": "",
  "loc.description": "Download files that were saved as artifacts of a completed build",
  "loc.instanceNameFormat": "Download Build Artifacts",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.buildType": "Download artifacts produced by",
  "loc.input.help.buildType": "Download artifacts produced by the current build, or from a specific build.",
  "loc.input.label.project": "Project",
  "loc.input.help.project": "The project from which to download the build artifacts",
  "loc.input.label.definition": "Build pipeline",
  "loc.input.help.definition": "Select the build pipeline name",
  "loc.input.label.specificBuildWithTriggering": "When appropriate, download artifacts from the triggering build.",
  "loc.input.help.specificBuildWithTriggering": "If checked, this build task will try to download artifacts from the triggering build. If there is no triggering build from the specified pipeline, it will download artifacts from the build specified in the options below.",
  "loc.input.label.buildVersionToDownload": "Build version to download",
  "loc.input.label.allowPartiallySucceededBuilds": "Download artifacts even from partially succeeded builds.",
  "loc.input.help.allowPartiallySucceededBuilds": "If checked, this build task will try to download artifacts whether the build is succeeded or partially succeeded.",
  "loc.input.label.branchName": "Branch name",
  "loc.input.help.branchName": "Specify to filter on branch/ref name, for example: ```refs/heads/develop```.",
  "loc.input.label.buildId": "Build",
  "loc.input.help.buildId": "The build from which to download the artifacts",
  "loc.input.label.tags": "Build Tags",
  "loc.input.help.tags": "A comma-delimited list of tags. Only builds with these tags will be returned.",
  "loc.input.label.downloadType": "Download type",
  "loc.input.help.downloadType": "Download a specific artifact or specific files from the build.",
  "loc.input.label.artifactName": "Artifact name",
  "loc.input.help.artifactName": "The name of the artifact to download",
  "loc.input.label.itemPattern": "Matching pattern",
  "loc.input.help.itemPattern": "Specify files to be downloaded as multi line minimatch pattern. [More Information](https://aka.ms/minimatchexamples) <p>The default pattern (\\*\\*) will download all files across all artifacts in the build if \"Specific files\" option is selected. To download all files within artifact drop use drop/**.</p>",
  "loc.input.label.downloadPath": "Destination directory",
  "loc.input.help.downloadPath": "Path on the agent machine where the artifacts will be downloaded",
  "loc.input.label.cleanDestinationFolder": "Clean destination folder",
  "loc.input.help.cleanDestinationFolder": "Delete all existing files in destination folder before artifact download",
  "loc.input.label.parallelizationLimit": "Parallelization limit",
  "loc.input.help.parallelizationLimit": "Number of files to download simultaneously",
  "loc.input.label.checkDownloadedFiles": "Check downloaded files",
  "loc.input.help.checkDownloadedFiles": "If checked, this build task will check that all files are fully downloaded.",
  "loc.input.label.retryDownloadCount": "Retry count",
  "loc.input.help.retryDownloadCount": "Optional number of times to retry downloading a build artifact if the download fails.",
  "loc.input.label.extractTars": "Extract all files that are stored inside tar archives",
  "loc.input.help.extractTars": "Enable this option to extract all downloaded files that have .tar extension. This is helpful because you need to pack your artifact files into tar if you want to preserve Unix file permissions. Enabling `StoreAsTar` option in PublishBuildArtifacts task will store artifacts as .tar files automatically.",
  "loc.messages.DownloadArtifacts": "Downloading artifact %s from: %s",
  "loc.messages.DownloadingArtifactsForBuild": "Downloading artifacts for build: %s",
  "loc.messages.LinkedArtifactCount": "Linked artifacts count:  %s",
  "loc.messages.ExtractionFailed": "Failed to extract package with error %s",
  "loc.messages.FileContainerInvalidArtifactData": "Invalid file container artifact. Resource data must be in the format #/{container id}/path",
  "loc.messages.UnsupportedArtifactType": "Unsupported artifact type: %s",
  "loc.messages.BuildNotFound": "Build with ID %s not found",
  "loc.messages.BuildArtifactNotFound": "Artifact %s not found for build %s. Please ensure you have published artifacts in any previous phases of the current build.",
  "loc.messages.NoArtifactsFound": "No artifacts found for build %s",
  "loc.messages.BuildIdBuildDefinitionMismatch": "Build with ID %s not found for build pipeline ID %s",
  "loc.messages.ArtifactsSuccessfullyDownloaded": "Successfully downloaded artifacts to %s",
  "loc.messages.RetryingOperation": "Error: in %s, so retrying => retries pending  : %s",
  "loc.messages.OperationFailed": "Failed in %s with error: %s",
  "loc.messages.ArtifactNameDirectoryNotFound": "Directory '%s' does not exist. Falling back to parent directory: %s",
  "loc.messages.LatestBuildFound": "Latest build found:  %s",
  "loc.messages.LatestBuildNotFound": "Latest build not found",
  "loc.messages.LatestBuildFromBranchNotFound": "Latest build from branch %s not found",
  "loc.messages.DownloadingContainerResource": "Downloading items from container resource %s",
  "loc.messages.DefinitionNameMatchFound": "Definition Name %s resolved to id %d",
  "loc.messages.InvalidBuildDefinitionName": "Definition name %s didn't correspond to a valid definition",
  "loc.messages.UnresolvedDefinitionId": "Could not resolve build definition id",
  "loc.messages.BeginArtifactItemsIntegrityCheck": "Starting artifact items integrity check",
  "loc.messages.CorruptedArtifactItemsList": "The following items are not passed integrity check:",
  "loc.messages.IntegrityCheckNotPassed": "Artifact items integrity check failed",
  "loc.messages.IntegrityCheckPassed": "Artifact items integrity check successfully finished",
  "loc.messages.TarExtractionNotSupportedInWindows": "Tar extraction is not supported on Windows",
  "loc.messages.NoTarsFound": "No tar archives were found to extract",
  "loc.messages.CleaningDestinationFolder": "Cleaning destination folder: %s",
  "loc.messages.NoFolderToClean": "Specified cleaning folder was not found. Nothing to clean"
}