{
  "loc.friendlyName": "Gradle",
  "loc.helpMarkDown": "[이 작업에 대한 자세한 정보](https://go.microsoft.com/fwlink/?LinkID=613720) 또는 [Gradle 설명서 참조](https://docs.gradle.org/current/userguide/userguide.html)",
  "loc.description": "Gradle 래퍼 스크립트를 사용하여 빌드",
  "loc.instanceNameFormat": "gradlew $(tasks)",
  "loc.releaseNotes": "SonarQube 분석 구성이 [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) 또는 [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) 확장의 '분석 구성 준비' 작업으로 이동됨",
  "loc.group.displayName.junitTestResults": "JUnit 테스트 결과",
  "loc.group.displayName.codeCoverage": "코드 검사",
  "loc.group.displayName.advanced": "고급",
  "loc.group.displayName.CodeAnalysis": "코드 분석",
  "loc.input.label.wrapperScript": "Gradle 래퍼",
  "loc.input.help.wrapperScript": "Gradle 래퍼 스크립트의 리포지토리 루트로부터의 상대 경로입니다.",
  "loc.input.label.cwd": "작업 디렉터리",
  "loc.input.help.cwd": "Gradle 빌드를 실행할 작업 디렉터리입니다. 지정되지 않은 경우 리포지토리 루트 디렉터리가 사용됩니다.",
  "loc.input.label.options": "옵션",
  "loc.input.label.tasks": "작업",
  "loc.input.label.publishJUnitResults": "Azure Pipelines/에 게시",
  "loc.input.help.publishJUnitResults": "Gradle 빌드에서 생성된 JUnit 테스트 결과를 Azure Pipelines에 게시하려면 이 옵션을 선택합니다. '테스트 결과 파일'과 일치하는 각 테스트 결과 파일이 Azure Pipelines에 테스트 실행으로 게시됩니다.",
  "loc.input.label.testResultsFiles": "테스트 결과 파일",
  "loc.input.help.testResultsFiles": "테스트 결과 파일 경로입니다. 와일드카드를 사용할 수 있습니다([자세한 정보](https://go.microsoft.com/fwlink/?linkid=856077)). 예를 들어 이름이 TEST-로 시작하는 모든 XML 파일을 표시하려면 '**/TEST-*.xml'을 지정합니다.",
  "loc.input.label.testRunTitle": "테스트 실행 제목",
  "loc.input.help.testRunTitle": "테스트 실행의 이름을 지정하세요.",
  "loc.input.label.codeCoverageTool": "코드 검사 도구",
  "loc.input.help.codeCoverageTool": "코드 검사 도구를 선택하세요.",
  "loc.input.label.classFilesDirectories": "클래스 파일 디렉터리",
  "loc.input.help.classFilesDirectories": "클래스 파일, 보관 파일(JAR, WAR 등)이 포함된 디렉터리의 쉼표로 구분된 목록입니다. 코드 검사는 이러한 디렉터리에 있는 클래스 파일에 대해 보고됩니다. 일반적으로 Gradle 빌드의 기본 클래스 디렉터리인 `build/classes/main` 아래에 있는 클래스가 검색됩니다.",
  "loc.input.label.classFilter": "클래스 포함/제외 필터",
  "loc.input.help.classFilter": "코드 검사 수집에서 클래스를 포함하거나 제외할 필터의 쉼표로 구분된 목록입니다(예: +:com.*,+:org.*,-:my.app*.*).",
  "loc.input.label.failIfCoverageEmpty": "코드 검사 결과가 없는 경우 실패",
  "loc.input.help.failIfCoverageEmpty": "코드 검사에서 게시할 결과를 생성하지 않은 경우 빌드가 실패합니다.",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 설정 방법",
  "loc.input.help.javaHomeSelection": "빌드 중에 검색될 JDK 버전을 선택하거나 수동으로 JDK 경로를 입력하여 JAVA_HOME을 설정합니다.",
  "loc.input.label.jdkVersion": "JDK 버전",
  "loc.input.help.jdkVersion": "선택한 JDK 버전의 경로에 대한 검색을 시도하고 그에 따라 JAVA_HOME을 설정하게 됩니다.",
  "loc.input.label.jdkUserInputPath": "JDK 경로",
  "loc.input.help.jdkUserInputPath": "JAVA_HOME을 지정된 경로로 설정합니다.",
  "loc.input.label.jdkArchitecture": "JDK 아키텍처",
  "loc.input.help.jdkArchitecture": "선택적으로 JDK의 아키텍처(x86, x64)를 제공하세요.",
  "loc.input.label.gradleOpts": "GRADLE_OPTS 설정",
  "loc.input.help.gradleOpts": "JVM을 시작하기 위해 명령줄 인수를 보내는 데 사용되는 GRADLE_OPTS 환경 변수를 설정합니다. xmx 플래그는 JVM에 사용 가능한 최대 메모리를 지정합니다.",
  "loc.input.label.sqAnalysisEnabled": "SonarQube 또는 SonarCloud 분석 실행",
  "loc.input.help.sqAnalysisEnabled": "이 옵션은 [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) 및 [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) Marketplace 확장을 사용하기 위해 **Gradle** 작업의 버전 1에서 변경되었습니다. **작업** 필드의 작업을 실행한 후 [SonarQube 또는 SonarCloud 분석](http://redirect.sonarsource.com/doc/install-configure-scanner-tfs-ts.html)을 실행하려면 이 옵션을 사용하도록 설정하세요. 또한 빌드 파이프라인에서 이 Gradle 작업 앞에 확장 중 하나의 **분석 구성 준비** 작업을 추가해야 합니다.",
  "loc.input.label.sqGradlePluginVersionChoice": "SonarQube Scanner for Gradle 버전",
  "loc.input.help.sqGradlePluginVersionChoice": "사용할 SonarQube Gradle 플러그 인 버전입니다. Gradle 구성 파일에서 선언하거나 여기서 버전을 지정할 수 있습니다.",
  "loc.input.label.sqGradlePluginVersion": "SonarQube Scanner for Gradle 플러그 인 버전",
  "loc.input.help.sqGradlePluginVersion": "사용 가능한 모든 버전을 보려면 https://plugins.gradle.org/plugin/org.sonarqube를 참조하세요.",
  "loc.input.label.checkstyleAnalysisEnabled": "Checkstyle 실행",
  "loc.input.help.checkstyleAnalysisEnabled": "기본 일요일 검사로 Checkstyle 도구를 실행하세요. 결과는 빌드 아티팩트로 업로드됩니다.",
  "loc.input.label.findbugsAnalysisEnabled": "FindBugs 실행",
  "loc.input.help.findbugsAnalysisEnabled": "FindBugs 정적 분석 도구를 사용하여 코드에서 버그를 찾습니다. 결과는 빌드 아티팩트로 업로드됩니다.",
  "loc.input.label.pmdAnalysisEnabled": "PMD 실행",
  "loc.input.help.pmdAnalysisEnabled": "PMD Java 정적 분석 도구를 사용하여 코드에서 버그를 찾아보세요. 결과는 빌드 아티팩트로 업로드됩니다.",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "TaskReport 개체를 만들지 못했습니다. 없는 필드: %s",
  "loc.messages.sqCommon_WaitingForAnalysis": "SonarQube 서버에서 빌드가 분석될 때까지 대기하는 중입니다.",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "빌드가 SonarQube 분석을 기다리도록 구성되지 않았습니다. 자세한 품질 게이트 상태를 사용할 수 없습니다.",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "품질 게이트 상태를 검색할 수 없거나 새 상태가 발생했습니다.",
  "loc.messages.sqCommon_InvalidResponseFromServer": "서버가 잘못되거나 예기치 않은 응답 형식으로 응답했습니다.",
  "loc.messages.codeAnalysis_ToolIsEnabled": "%s 분석을 사용하도록 설정했습니다.",
  "loc.messages.codeAnalysis_ToolFailed": "%s을(를) 분석하지 못했습니다.",
  "loc.messages.sqAnalysis_IncrementalMode": "검색된 PR 빌드 - SonarQube 분석을 증분 모드에서 실행 중",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 분석 보고서",
  "loc.messages.sqAnalysis_TaskReportInvalid": "작업 보고서가 잘못되었거나 없습니다. SonarQube가 완료되었는지 확인하세요.",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "자세한 SonarQube 보고서",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "SonarQube 서버에 인증할 수 없습니다. 저장된 서비스 연결 정보 및 서버 상태를 확인하세요.",
  "loc.messages.sqAnalysis_AnalysisTimeout": "할당된 시간 %d초 내에 분석이 완료되지 않았습니다.",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildSummary": "끌어오기 요청 빌드: 자세한 SonarQube 빌드 요약을 사용할 수 없습니다.",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildBreaker": "끌어오기 요청 빌드: 품질 게이트가 실패하면 빌드가 분할되지 않습니다.",
  "loc.messages.sqAnalysis_BuildBrokenDueToQualityGateFailure": "이 빌드와 연결된 SonarQube 품질 게이트가 실패했습니다.",
  "loc.messages.sqAnalysis_QualityGatePassed": "이 빌드와 연결된 SonarQube 품질 게이트가 통과했습니다(상태 %s).",
  "loc.messages.sqAnalysis_UnknownComparatorString": "SonarQube 빌드 요약에서 문제가 발생했습니다. 알 수 없는 비교 연산자 '%s'입니다.",
  "loc.messages.sqAnalysis_NoUnitsFound": "서버에서 SonarQube 단위 목록을 검색할 수 없습니다.",
  "loc.messages.sqAnalysis_NoReportTask": "report-task.txt를 찾을 수 없습니다. 예상 원인: SonarQube 분석이 완료되지 않았습니다.",
  "loc.messages.sqAnalysis_MultipleReportTasks": "여러 report-task.txt 파일을 찾았습니다. 첫 번째 파일을 선택합니다. 빌드 요약 및 빌드 분리기가 정확하지 않을 수 있습니다. 예상 원인: 동일한 빌드 중에 SonarQube를 여러 번 분석할 수 없습니다.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s이(가) 위반 %d개를 %d개 파일에서 찾았습니다.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s이(가) 위반 %d개를 1개 파일에서 찾았습니다.",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s이(가) 위반 1개를 1개 파일에서 찾았습니다.",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s이(가) 위반을 찾을 수 없습니다.",
  "loc.messages.codeAnalysisBuildSummaryTitle": "코드 분석 보고서",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "코드 분석 결과",
  "loc.messages.codeAnalysisDisabled": "빌드 환경 외부에서 코드 분석을 사용하지 않도록 설정되어 있습니다. %s에 대한 값을 찾을 수 없습니다.",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "Java %s %s에 대해 JAVA_HOME 찾기",
  "loc.messages.UnsupportedJdkWarning": "JDK 9 및 JDK 10은 지원되지 않습니다. 프로젝트 및 파이프라인에서 최신 버전으로 전환하세요. JDK 11을 사용하여 빌드를 시도하는 중...",
  "loc.messages.FailedToLocateSpecifiedJVM": "지정한 JDK 버전을 찾지 못했습니다. 지정한 JDK 버전이 에이전트에 설치되어 있으며 환경 변수 '%s'이(가) 있고 해당 JDK의 위치로 설정되었는지 확인하거나, [Java 도구 설치 관리자](https://go.microsoft.com/fwlink/?linkid=875287) 작업을 사용하여 원하는 JDK를 설치하세요.",
  "loc.messages.NoCodeCoverage": "게시할 코드 검사 결과가 없습니다.",
  "loc.messages.InvalidBuildFile": "잘못되거나 지원되지 않는 빌드 파일입니다.",
  "loc.messages.FileNotFound": "파일 또는 폴더가 없음: %s",
  "loc.messages.FailedToAppendCC": "코드 검사 데이터를 추가할 수 없음: %s",
  "loc.messages.NoTestResults": "%s과(와) 일치하는 테스트 결과 파일을 찾을 수 없으므로 JUnit 테스트 결과 게시를 건너뜁니다."
}