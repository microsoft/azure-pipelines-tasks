{
  "loc.friendlyName": "Azure Key Vault",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=848891)",
  "loc.description": "Download Azure Key Vault secrets",
  "loc.instanceNameFormat": "Azure Key Vault: $(KeyVaultName)",
  "loc.releaseNotes": "Works with cross-platform agents (Linux, macOS, or Windows)",
  "loc.input.label.ConnectedServiceName": "Azure subscription",
  "loc.input.help.ConnectedServiceName": "Select the Azure subscription for the key vault",
  "loc.input.label.KeyVaultName": "Key vault",
  "loc.input.help.KeyVaultName": "Provide the name of an existing key vault",
  "loc.input.label.SecretsFilter": "Secrets filter",
  "loc.input.help.SecretsFilter": "Comma separated list of secret names or leave * to download all secrets from the selected key vault.",
  "loc.input.label.RunAsPreJob": "Make secrets available to whole job",
  "loc.input.help.RunAsPreJob": "Run the task before job execution begins. Exposes secrets to all tasks in the job, not just tasks that follow this one.",
  "loc.messages.ClientIdCannotBeEmpty": "clientId must be a non empty string.",
  "loc.messages.DomainCannotBeEmpty": "domain must be a non empty string.",
  "loc.messages.SecretCannotBeEmpty": "secret must be a non empty string.",
  "loc.messages.armUrlCannotBeEmpty": "arm URL must be a non empty string.",
  "loc.messages.authorityUrlCannotBeEmpty": "authority must be a non empty string.",
  "loc.messages.CallbackCannotBeNull": "callback cannot be null.",
  "loc.messages.CredentialsCannotBeNull": "'credentials' cannot be null.",
  "loc.messages.SubscriptionIdCannotBeNull": "'subscriptionId' cannot be null.",
  "loc.messages.InvalidResponseLongRunningOperation": "Invalid response received for fetching status of a long running operation.",
  "loc.messages.TimeoutWhileWaiting": "Timed out while waiting",
  "loc.messages.ResourceGroupCannotBeNull": "resourceGroupName cannot be null or undefined and it must be of type string.",
  "loc.messages.ResourceGroupExceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MaxLength\": 90",
  "loc.messages.ResourceGroupDeceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MinLength\": 1",
  "loc.messages.ResourceGroupDoesntMatchPattern": "\"resourceGroupName\" should satisfy the constraint - \"Pattern\": /^[-\\w\\._\\(\\)]+$/",
  "loc.messages.AzKv_ConstructorFailed": "Azure key vault parameters initialization failed. Error: %s.",
  "loc.messages.SubscriptionIdLabel": "SubscriptionId: %s.",
  "loc.messages.KeyVaultNameLabel": "Key vault name: %s.",
  "loc.messages.DownloadingSecretsUsing": "Downloading secrets using: %s.",
  "loc.messages.GetSecretsFailed": "Get secrets failed. Error: %s.",
  "loc.messages.NoSecretsFound": "No secrets found in: %s",
  "loc.messages.NumberOfSecretsFound": "Number of secrets found in %s: %s",
  "loc.messages.NumberOfEnabledSecretsFound": "Number of enabled and unexpired secrets found in %s: %s",
  "loc.messages.DownloadingSecretValue": "Downloading secret value for: %s.",
  "loc.messages.AccessDeniedError": "%s. The specified Azure service connection needs to have Get, List secret management permissions on the selected key vault. To set these permissions, download the ProvisionKeyVaultPermissions.ps1 script from build/release logs and execute it, or set them from the Azure portal.",
  "loc.messages.GetSecretValueFailed": "Get secret value failed for: %s. Error: %s.",
  "loc.messages.ConflictingVariableFound": "Variable with name %s is defined in both environment and key vault",
  "loc.messages.GetSecretFailedBecauseOfInvalidCharacters": "Secret not found: %s. Secret name must be a string 1-127 characters in length containing only -, 0-9, a-z and A-Z.",
  "loc.messages.UploadingAttachment": "Uploading %s as attachment",
  "loc.messages.CouldNotWriteToFile": "Could not save content to file. Failed with an error %s",
  "loc.messages.CouldNotMaskSecret": "%s value has regular expressions hence could not mask completely",
  "loc.messages.CouldNotFetchAccessTokenforAzureStatusCode": "Could not fetch access token for Azure. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIStatusCode": "Could not fetch access token for Managed Service Principal. Status code: %s, status message: %s",
  "loc.messages.RetryingWithVaultResourceIdFromResponse": "Retrying with vault resource Id reterieved from response : %s",
  "loc.messages.ExpiredServicePrincipal": "Could not fetch access token for Azure. Verify if the Service Principal used is valid and not expired."
}