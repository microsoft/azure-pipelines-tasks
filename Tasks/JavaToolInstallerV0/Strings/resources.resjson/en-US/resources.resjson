{
  "loc.friendlyName": "Java tool installer",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=875287) or [see the Java documentation](https://docs.oracle.com/java/)",
  "loc.description": "Acquire a specific version of Java from a user-supplied Azure blob or the tool cache and sets JAVA_HOME",
  "loc.instanceNameFormat": "Use Java $(versionSpec)",
  "loc.group.displayName.JavaInAzureGroup": "Download Java from an Azure blob",
  "loc.input.label.versionSpec": "JDK version",
  "loc.input.help.versionSpec": "A number that specifies the JDK version to make available on the path. Use a whole number version, such as 10",
  "loc.input.label.jdkArchitectureOption": "JDK architecture",
  "loc.input.help.jdkArchitectureOption": "The architecture (x86, x64) of the JDK.",
  "loc.input.label.jdkSourceOption": "JDK source",
  "loc.input.help.jdkSourceOption": "Source for the compressed JDK.",
  "loc.input.label.jdkFile": "JDK file",
  "loc.input.help.jdkFile": "Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.",
  "loc.input.label.azureResourceManagerEndpoint": "Azure subscription",
  "loc.input.help.azureResourceManagerEndpoint": "Choose the Azure Resource Manager subscription for the JDK.",
  "loc.input.label.azureStorageAccountName": "Storage account name",
  "loc.input.help.azureStorageAccountName": "Azure Classic and Resource Manager storage accounts are listed. Select the storage account name in which the JDK is located.",
  "loc.input.label.azureContainerName": "Container name",
  "loc.input.help.azureContainerName": "Name of the container in the storage account in which the JDK is located.",
  "loc.input.label.azureCommonVirtualFile": "Common virtual path",
  "loc.input.help.azureCommonVirtualFile": "Path to the JDK inside the Azure storage container.",
  "loc.input.label.jdkDestinationDirectory": "Destination directory",
  "loc.input.help.jdkDestinationDirectory": "On Linux and Windows, this is used as the destination directory for JDK installation. On macOS, this directory is used as a temporary folder for extracting of .dmg's since macOS doesn't support installing of JDK to specific directory.",
  "loc.input.label.cleanDestinationDirectory": "Clean destination directory",
  "loc.input.help.cleanDestinationDirectory": "Select this option to clean the destination directory before JDK is extracted into it.",
  "loc.input.label.createExtractDirectory": "Create directory for extracting",
  "loc.input.help.createExtractDirectory": "By default, task is creating a directory similar to this JAVA_HOME_8_X64_OpenJDK_zip for extracting JDK. This option allows to disable creation of this folder, in this case, JDK will be located in the root of jdkDestinationDirectory",
  "loc.messages.DownloadFromAzureBlobStorage": "Downloading artifacts from Azure blob storage, Container Name: %s",
  "loc.messages.SuccessFullyFetchedItemList": "Successfully fetched list of items",
  "loc.messages.StorageAccountDoesNotExist": "Failed to get azure storage account with name %s.",
  "loc.messages.UnzipExtractFile": "Extracting file: %s",
  "loc.messages.SevenZipExtractFile": "Extracting file: %s",
  "loc.messages.TarExtractFile": "Extracting file: %s",
  "loc.messages.ExtractFileFailedMsg": "Extraction failed for file: %s \ncode: %d \nstdout: %s \nstderr: %s \nerror: %s;",
  "loc.messages.ExtractNonExistFile": "Extraction failed for file: %s because it does not exist.",
  "loc.messages.ExtractDirFailed": "Extraction failed for file: %s because it is a directory.",
  "loc.messages.CreateTempDir": "Creating temp folder: %s to decompress: %s",
  "loc.messages.TempDir": "tempFolder = %s",
  "loc.messages.DecompressedTempTar": "Decompressed temporary tar from: %s to: %s",
  "loc.messages.RemoveTempDir": "Removing temp folder: %s",
  "loc.messages.ExtractFailedCannotCreate": "Extraction failed for file: %s because temporary location could not be created: %s",
  "loc.messages.CleanDestDir": "Cleaning destination folder before extraction: %s",
  "loc.messages.CreateDestDir": "Creating destination folder: %s",
  "loc.messages.RetrievingJdkFromAzure": "Retrieving the JDK from Azure blob storage.",
  "loc.messages.RetrievingJdkFromLocalPath": "Retrieving the JDK from local path.",
  "loc.messages.SucceedMsg": "Successfully extracted all files.",
  "loc.messages.SetJavaHome": "JAVA_HOME is being set to: %s",
  "loc.messages.SetExtendedJavaHome": "%s is being set to: %s",
  "loc.messages.UnsupportedFileExtension": "Specified JDK source file does not have a supported file extension.",
  "loc.messages.CouldNotFetchAccessTokenforAzureStatusCode": "Could not fetch access token for Azure. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIStatusCode": "Could not fetch access token for Managed Service Principal. Status code: %s, status message: %s",
  "loc.messages.ExpiredServicePrincipal": "Could not fetch access token for Azure. Verify if the Service Principal used is valid and not expired.",
  "loc.messages.CorrelationIdForARM": "Correlation ID from ARM api call response : %s",
  "loc.messages.JavaNotPreinstalled": "Java %s is not preinstalled on this agent",
  "loc.messages.UsePreinstalledJava": "Use preinstalled JDK from %s",
  "loc.messages.WrongArchiveStructure": "JDK file is not valid. Verify if JDK file contains only one root folder with 'bin' inside.",
  "loc.messages.WrongArchiveFile": "Archive file is wrong. There is not any folder which contains JDK",
  "loc.messages.ShareAccessError": "Network shared resource not available: (%s)",
  "loc.messages.UnsupportedDMGStructure": "JDK file is not supported. Verify if JDK file contains exactly one folder inside.",
  "loc.messages.NoPKGFile": "Could not find PKG file.",
  "loc.messages.SeveralPKGFiles": "Found more than one PKG files.",
  "loc.messages.InstallJDK": "Installing JDK.",
  "loc.messages.AttachDiskImage": "Attaching a disk image.",
  "loc.messages.DetachDiskImage": "Detaching a disk image.",
  "loc.messages.PkgPathDoesNotExist": "Package path does not exist.",
  "loc.messages.PreInstalledJavaUpgraded": "Preinstalled JDK updated.",
  "loc.messages.JavaSuccessfullyInstalled": "Java has been successfully installed",
  "loc.messages.ArchiveWasExtractedEarlier": "Archive with JDK was extracted earlier - skipping extracting",
  "loc.messages.ExtractingArchiveToPath": "Extracting archive to: %s",
  "loc.messages.ErrorCleaningFolder": "Folder cleaning error: %s"
}