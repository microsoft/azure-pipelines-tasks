{
  "loc.friendlyName": "Docker",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=848006) or [see the Docker documentation](https://docs.docker.com/)",
  "loc.description": "Build or push Docker images, login or logout, start or stop containers, or run a Docker command",
  "loc.instanceNameFormat": "$(command)",
  "loc.releaseNotes": "Simplified the task YAML by:<br/>&nbsp;- Removing the Container registry type input<br/>&nbsp;- Removing complex inputs as they can be passed as arguments to the command.",
  "loc.group.displayName.containerRepository": "Container Repository",
  "loc.group.displayName.commands": "Commands",
  "loc.input.label.containerRegistry": "Container registry",
  "loc.input.help.containerRegistry": "Select a Docker registry service connection. Required for commands that need to authenticate with a registry.",
  "loc.input.label.repository": "Container repository",
  "loc.input.help.repository": "Name of the repository.",
  "loc.input.label.command": "Command",
  "loc.input.help.command": "Select a Docker command.",
  "loc.input.label.Dockerfile": "Dockerfile",
  "loc.input.help.Dockerfile": "Path to the Dockerfile.",
  "loc.input.label.buildContext": "Build context",
  "loc.input.help.buildContext": "Path to the build context. Pass ** to specify the directory that contains the Dockerfile.",
  "loc.input.label.tags": "Tags",
  "loc.input.help.tags": "A list of tags in separate lines. These tags are used in build, push and buildAndPush commands. Ex:<br><br>beta1.1<br>latest",
  "loc.input.label.arguments": "Arguments",
  "loc.input.help.arguments": "Docker command options. Ex:<br> For build command,<br>--build-arg HTTP_PROXY=http://10.20.30.2:1234 --quiet",
  "loc.input.label.addPipelineData": "Add Pipeline metadata to image(s)",
  "loc.input.help.addPipelineData": "By default pipeline data like source branch name, build id are added which helps with traceability. For example you can inspect an image to find out which pipeline built the image. You can opt out of this default behavior by using this input.",
  "loc.input.label.addBaseImageData": "Add base image metadata to image(s)",
  "loc.input.help.addBaseImageData": "By default base image data like base image name and digest are added which helps with traceability. You can opt out of this default behavior by using this input.",
  "loc.input.label.container": "Container",
  "loc.input.help.container": "Name of the container. For use with start and stop commands.",
  "loc.messages.AddingNewAuthToExistingConfig": "Adding auth data for registry to Docker config file. Registry: %s.",
  "loc.messages.ConnectingToDockerHost": "DOCKER_HOST variable is set. Docker will try to connect to the Docker host: %s",
  "loc.messages.CommandNotRecognized": "Command not recognized: %s",
  "loc.messages.ContainerPatternFound": "Pattern found in Docker filepath parameter",
  "loc.messages.ContainerPatternNotFound": "No pattern found in Docker filepath parameter",
  "loc.messages.ContainerDockerFileNotFound": "No Dockerfile matching  %s  was found.",
  "loc.messages.CantWriteDataToFile": "Can not write data to the file %s. Error: %s",
  "loc.messages.CouldNotFindDockerConfig": "Could not find Docker Config. Either DOCKER_CONFIG variable is not set, or the config file is outside the temp directory, or the file does not exist. DOCKER_CONFIG: %s",
  "loc.messages.DockerHostVariableWarning": "DOCKER_HOST variable is set. Please ensure that the Docker daemon is running on: %s",
  "loc.messages.DeletingDockerConfigDirectory": "Deleting Docker config directory. Path: %s",
  "loc.messages.DeletingAuthDataFromDockerConfig": "Deleting auth data for registry from Docker config file. Registry: %s, New Docker config: %s",
  "loc.messages.DockerRegistryNotFound": "Docker registry service connection not specified.",
  "loc.messages.ErrorParsingDockerConfig": "Could not parse the Docker config obtained from the file. Error: %s",
  "loc.messages.FileContentSynced": "Synced the file content to the disk. The content is %s.",
  "loc.messages.FoundDockerConfigStoredInTempPath": "Found the Docker Config stored in the temp path. Docker config path: %s, Docker config: %s",
  "loc.messages.FoundLoginsForOtherRegistries": "Found login info for other registry(s). Trying to remove auth from the Docker config for the registry: %s",
  "loc.messages.IgnoringArgumentsInput": "The arguments input is not supported when the command is buildAndPush. Ignoring the input.",
  "loc.messages.LoggingOutFromRegistry": "Trying to logout from registry: %s",
  "loc.messages.LoggingOutWithNoRegistrySpecified": "Logging out. Removing all auth data from temp docker config, since no registry is specified.",
  "loc.messages.NoAuthInfoFoundInDockerConfig": "No auths found in Docker config. Hence returning 0 registry url's.",
  "loc.messages.NoDataWrittenOnFile": "No data was written into the file %s",
  "loc.messages.NoImagesInImageNamesFile": "At least one image name is expected in file '%s'.",
  "loc.messages.NotAddingAnyTagsToBuild": "Not adding any tags to the built image as no repository is specified.",
  "loc.messages.NotPushingAsNoLoginFound": "Not pushing to any registry as no login information was found.",
  "loc.messages.OldDockerConfigContent": "Found an earlier login to the same registry. Saving old auth data and continuing with the new login. Old docker config: %s",
  "loc.messages.OutputVariableDataSizeExceeded": "Output variable not set as Docker command output exceeded the maximum supported length. Output length: %s, Maximum supported length: %s",
  "loc.messages.PathIsNotInTempDirectory": "The config path is not inside the temp directory. Config path: %s, Temp directory: %s",
  "loc.messages.RegistryAuthNotPresentInConfig": "Could not find the auth data for registry in the Docker config file. Nothing to be done to logout. Registry: %s",
  "loc.messages.RestoringOldLoginAuth": "Restoring the previous login auth data for the registry: %s",
  "loc.messages.WritingDockerConfigToTempFile": "Writing Docker config to temp file. File path: %s, Docker config: %s"
}