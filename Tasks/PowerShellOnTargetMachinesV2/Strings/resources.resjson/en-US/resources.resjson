{
  "loc.friendlyName": "PowerShell on target machines",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=627414)",
  "loc.description": "Execute PowerShell scripts on remote machines",
  "loc.instanceNameFormat": "Run PowerShell on $(EnvironmentName)",
  "loc.releaseNotes": "What's new in Version 2.0: <br/>&nbsp;&nbsp; Removed support of legacy DTL machines.",
  "loc.group.displayName.deployment": "Deployment",
  "loc.group.displayName.advanced": "Advanced Options",
  "loc.input.label.EnvironmentName": "Machines",
  "loc.input.help.EnvironmentName": "Provide a comma separated list of machine IP addresses or FQDNs along with ports. Port is defaulted based on the selected protocol. <br>Eg: dbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.12.34:5986 <br>Or provide output variable of other tasks. Eg: $(variableName) <br>If you are using HTTPS, name/IP of machine should match the CN in the certificate.",
  "loc.input.label.AdminUserName": "Admin Login",
  "loc.input.help.AdminUserName": "Administrator login for the target machines. <br> Eg: Format: Domain\\Admin User, Admin User@Domain, .\\Admin User",
  "loc.input.label.AdminPassword": "Password",
  "loc.input.help.AdminPassword": "Administrator password for the target machines. <br>It can accept variable defined in build or release pipelines as '$(passwordVariable)'. <br>You may mark variable type as 'secret' to secure it.",
  "loc.input.label.Protocol": "Protocol",
  "loc.input.help.Protocol": "Select the protocol to use for the WinRM service connection with the machine(s). Default is HTTPS.",
  "loc.input.label.TestCertificate": "Test Certificate",
  "loc.input.help.TestCertificate": "Select the option to skip validating the authenticity of the machine's certificate by a trusted certification authority. The parameter is required for the WinRM HTTPS protocol.",
  "loc.input.label.ScriptPath": "PowerShell Script",
  "loc.input.help.ScriptPath": "Location of the PowerShell script on the target machines or on a UNC path like C:\\BudgetIT\\Web\\Deploy\\Website.ps1",
  "loc.input.label.ScriptArguments": "Script Arguments",
  "loc.input.help.ScriptArguments": "Arguments for the PowerShell script. Can be ordinal parameters or named parameters like -testParam test",
  "loc.input.label.InitializationScriptPath": "Initialization Script",
  "loc.input.help.InitializationScriptPath": "Location of the data script for DSC on the target machines or on a UNC path like C:\\BudgetIT\\Web\\Deploy\\WebsiteConfiguration.ps1",
  "loc.input.label.SessionVariables": "Session Variables",
  "loc.input.help.SessionVariables": "Set common session variables for both the scripts. For example, $variable = value, $var1 = \"value, 123\"",
  "loc.input.label.RunPowershellInParallel": "Run PowerShell in Parallel",
  "loc.input.help.RunPowershellInParallel": "Setting it to true will run the PowerShell scripts in parallel on the target machines.",
  "loc.input.label.ResourceFilteringMethod": "Select Machines By",
  "loc.input.help.ResourceFilteringMethod": "Optionally, select a subset of machines either by providing machine names or tags.",
  "loc.input.label.MachineNames": "Filter Criteria",
  "loc.input.help.MachineNames": "This input is valid only for machine groups or output variables and is not supported for flat list of machines yet. Provide a list of machines like, dbserver.fabrikam.com, webserver.fabrikam.com, 192.168.12.34, or tags like, Role:DB; OS:Win8.1. If multiple tags are provided, then the task will run in all the machines with the specified tags. The default is to run the task in all machines.",
  "loc.messages.PS_TM_NoMachineExistsUnderEnvironment0ForDeployment": "No machine exists under environment: '{0}' for deployment",
  "loc.messages.PS_TM_DeploymentStartedForMachine0": "Deployment started for machine: '{0}'",
  "loc.messages.PS_TM_DeploymentStatusForMachine01": "Deployment status for machine '{0}' : '{1}'",
  "loc.messages.PS_TM_DeploymentFailedOnMachine0WithFollowingMessage1": "Deployment failed on machine '{0}' with following message : '{1}'",
  "loc.messages.PS_TM_ResourceDoesnotHaveWinRMServiceConfigured": "Resource: '{0}' does not have WinRM service configured. Configure WinRM service on the Azure VM Resources. Refer for more details '{1}'",
  "loc.messages.PS_TM_0PortWasNotProvidedForResource1": "{0} port was not provided for resource '{1}'",
  "loc.messages.PS_TM_DeploymentOnOneOrMoreMachinesFailed": "Deployment on one or more machines failed."
}