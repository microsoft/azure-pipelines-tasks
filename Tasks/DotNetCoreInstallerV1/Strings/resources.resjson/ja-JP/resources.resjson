{
  "loc.friendlyName": ".NET Core SDK/ランタイム インストーラー",
  "loc.helpMarkDown": "[Learn more about this task](https://aka.ms/AA4ihfi)",
  "loc.description": "インターネットまたはローカル キャッシュから .NET Core SDK の特定のバージョンを取得し、PATH に追加します",
  "loc.instanceNameFormat": ".NET Core $(packageType) $(version) のインストール",
  "loc.releaseNotes": "<li>複数のバージョンを同時にインストールするためのサポート。</li><li>最新のマイナーまたはメジャー バージョンをフェッチするためのバージョンのパターンのサポート。</li><li>マルチレベル検索を制限する</li>",
  "loc.group.displayName.advanced": "詳細設定",
  "loc.input.label.packageType": "インストールするパッケージ",
  "loc.input.help.packageType": "ランタイムのみをインストールするか、SDK をインストールするかを選択してください。",
  "loc.input.label.version": "バージョン",
  "loc.input.help.version": "インストールする .NET Core SDK またはランタイムのバージョンを指定します。<br/>バージョンは以下の形式で指定できます<li>2.x   => メジャー バージョンが最新のものをインストールします。</li><li>2.2.x => メジャー バージョンとマイナー バージョンが最新のものをインストールします</li><li>2.2.104 => バージョンが正確に一致するものをインストールします</li><br/>SDK またはランタイムをインストールするために release.json で `version` の値を探します。その major.minor バージョンの releases.json へのリンクは [**releases-index ファイル**](https://github.com/dotnet/core/blob/master/release-notes/releases-index.json)から分かります。たとえば、2.2 バージョンの releases.json へのリンクは https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json です",
  "loc.input.label.includePreviewVersions": "プレビュー バージョンを含める",
  "loc.input.help.includePreviewVersions": "2.2.x を検索するときのように最新バージョンを検索するときにプレビュー バージョンを含める場合に選択します。次のように正確なバージョンを指定する場合、この設定は無視されます: 3.0.100-preview3-010431",
  "loc.input.label.installationPath": ".Net Core をインストールするパス",
  "loc.input.help.installationPath": ".NET Core SDK/ランタイムのインストール場所を指定します。各パスは、.Net の動作に次のような影響を与える可能性があります。<li>$(Agent.ToolsDirectory): このディレクトリはパイプライン間でクリーンアップされないため、この場合、バージョンがエージェントにキャッシュされます。エージェントで実行されるパイプラインはすべて、エージェントを使用して既にインストールされているバージョンにアクセスすることができます。</li><li>$(Agent.TempDirectory): このフォルダーは各パイプラインの後にクリーンアップされるので、この場合、キャッシュされた .Net Core バージョンがパイプラインで使用されないようにすることができます。</li><li>それ以外のすべてのパス: エージェント プロセスで他のいずれかのパスにアクセスできる場合は、そのパスを構成できます。これによってマシンの状態が変更され、それを実行しているすべてのプロセスに影響を与えます。<br/>適切なバージョンの .Net ホストの調査を構成できる複数レベルのルックアップ設定を構成することもできます。",
  "loc.input.label.performMultiLevelLookup": "複数レベルの検索を実行",
  "loc.input.help.performMultiLevelLookup": "この入力は、Windows ベースのエージェントにのみ適用されます。これは、適切な共有フレームワークを検索するための .NET ホスト プロセスの動作を構成します。<li>オフ: このタスクで指定されたフォルダーに存在するバージョンのみがホスト プロセスによって検索されます。</li><li>オン: ホストは、複数レベルのルックアップを使用した事前定義されたグローバルな場所の検索を試みます。<br/>既定のグローバルな場所は、次のとおりです: <br/><b>Windows の場合:</b><br/>C:\\Program Files\\dotnet (64 ビット プロセス)<br/>C:\\Program Files (x86)\\dotnet (32 ビット プロセス)</li>これについて詳しくは、[**こちら**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md)をご覧ください。<br/>",
  "loc.messages.ToolFailed": "ツールをインストールできませんでした: %s",
  "loc.messages.ImplicitVersionNotSupported": "バージョンは、有効で明示的なバージョンである必要があります: %s",
  "loc.messages.getMachinePlatformFailed": "マシンのプラットフォームの詳細を取得できませんでした。エラー: %s。",
  "loc.messages.getDownloadUrlsFailed": "ダウンロード URL を取得できませんでした。エラー: %s。",
  "loc.messages.UsingCachedTool": ".NET Core のキャッシュ済みのコピーが存在します。新しくインストールする必要はありません。キャッシュされたツールの場所は %s です。",
  "loc.messages.CheckingToolCache": "このバージョンのキャッシュ済みコピーが存在するかどうか確認しています...",
  "loc.messages.InstallingAfresh": "キャッシュに要求されたバージョンの .NET Core が含まれていません。ダウンロードしてインストールしています。",
  "loc.messages.GettingDownloadUrl": ".NET Core %s バージョンをダウンロードする URL を取得しています: %s。",
  "loc.messages.CouldNotDetectPlatform": "マシンの OS を検出できませんでした",
  "loc.messages.NullDownloadUrls": "ダウンロード URL を作成できませんでした。指定されたバージョン %s が有効であることをご確認ください。",
  "loc.messages.DownloadingUrl": "URL から .NET Core パッケージをダウンロードしています: %s",
  "loc.messages.ExtractingPackage": "ダウンロードされたパッケージ %s を抽出しています。",
  "loc.messages.CachingTool": "このインストール済みのツールをキャッシュしています。",
  "loc.messages.SuccessfullyInstalled": ".NET Core %s バージョン %s が正常にインストールされました。",
  "loc.messages.ToolToInstall": "インストールするツール: .NET Core %s バージョン %s。",
  "loc.messages.PrimaryPlatform": "検出されたプラットフォーム (プライマリ): %s",
  "loc.messages.LegacyPlatform": "検出されたプラットフォーム (レガシ): %s",
  "loc.messages.WarningVersionNotFound": "バージョン %s のダウンロード情報を取得できませんでした。指定されたバージョンが正しいことをご確認ください。サポートされているバージョンを確認するには次のリンクを参照します。https://github.com/dotnet/core/blob/master/release-notes/releases.json。規則に基づく URL の作成にフォールバックします。",
  "loc.messages.CouldNotDownload": "次の URL からインストール パッケージをダウンロードできませんでした: %s。エラー: %s",
  "loc.messages.FailedToDownloadPackage": "インストール用のパッケージをダウンロードできませんでした",
  "loc.messages.PrependGlobalToolPath": "グローバル ツール パスを作成し、パスの先頭に追加しています。",
  "loc.messages.VersionsFileMalformed": "指定されたバージョンのダウンロード リンクが、サポートされているバージョンのドキュメントの正しい形式ではありません => %s/ ",
  "loc.messages.MatchingVersionNotFound": "次の指定バージョンと一致する %s バージョンが見つかりませんでした: %s。[プレビュー バージョンを含める] チェック ボックスがオンの場合、プレビュー バージョンは最新バージョンの検索でのみ考慮されます。",
  "loc.messages.UnableToAccessPath": "Unable to access path: %s. Error: %s. Please make sure that agent process has access to the path.",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "バージョン: %s を URL: %s からダウンロードできません。URL またはバージョンのいずれかが正しくありません。",
  "loc.messages.CopyingFoldersIntoPath": "すべてのルート フォルダーを次のインストール パスにコピーしています: %s",
  "loc.messages.CopyingFilesIntoPath": "ルート ファイル (dotnet.exe など) を次のインストール パスにコピーしています: %s",
  "loc.messages.FailedToCopyTopLevelFiles": "ルート ファイルを次のインストール パスにコピーできませんでした: %s。エラー: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "パス: %s のバージョン: %s のインストール中、次のエラーで失敗しました: %s",
  "loc.messages.ExplicitVersionRequired": "バージョン: %s は許可されていません。インストールするバージョンは、次の形式にする必要があります: major.minor.patchversion。例: 2.2.1",
  "loc.messages.VersionFoundInCache": "バージョン: %s がキャッシュに見つかりました。",
  "loc.messages.VersionNotFoundInCache": "バージョン %s がキャッシュに見つかりませんでした。",
  "loc.messages.CreatingInstallationCompeleteFile": "Creating installation complete marker file for .Net core %s version %s",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "パッケージの種類: %s、バージョン: %s のランタイム バージョンが見つかりません",
  "loc.messages.PathNotFoundException": "パス: %s が見つかりませんでした。パスが存在することを確認してください。",
  "loc.messages.VersionIsLocalLatest": "バージョン: %s は、パス: %s に存在するバージョン間で最新です。",
  "loc.messages.VersionIsNotLocalLatest": "バージョン: %s は、%s に存在する最新のバージョンではありません",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "次の OS プラットフォーム (rid) の .Net Core %s バージョン %s のダウンロード URL が見つかりませんでした: %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "次のエラーにより release-index.json のダウンロードまたは解析に失敗しました: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "次のユーザー指定バージョン仕様のチャネル %s でバージョン %s が見つかりました: %s",
  "loc.messages.UrlForReleaseChannelNotFound": "次のチャネル バージョンの release.json の URL が見つかりませんでした: %s",
  "loc.messages.NoSuitableChannelWereFound": "バージョン %s に対応するチャネルが見つかりませんでした。",
  "loc.messages.DetectingPlatform": "OS に対して正しいダウンロード パッケージを見つけるために OS プラットフォームを検出しています。",
  "loc.messages.FailedInDetectingMachineArch": "マシン OS プラットフォームの検出中、次のエラーで失敗しました: %s",
  "loc.messages.runtimeVersionPropertyNotFound": ".Net Core %s バージョン %s の runtime-version プロパティが見つかりませんでした。",
  "loc.messages.VersionNotFound": "%s バージョンの一致: %s が見つかりませんでした",
  "loc.messages.VersionNotAllowed": "バージョン %s は許可されていません。許可されているバージョンの種類は次のとおりです: majorVersion.x、majorVersion.minorVersion.x、majorVersion.minorVersion.patchVersion",
  "loc.messages.VersionsCanNotBeCompared": "バージョン %s と %s を比較できません。両方のバージョンを明示的に指定する必要があります。",
  "loc.messages.FileNameNotCorrectCompleteFileName": "File name %s is not a correct '.complete' file.",
  "loc.messages.ChannelVersionsNotComparable": "チャネルのバージョン %s と %s を比較できません。両方とも数値のメジャー バージョンとマイナー バージョンが必要です。",
  "loc.messages.LookingForVersionInChannel": "チャネル %s のバージョンを検索しています",
  "loc.messages.FallingBackToAdjacentChannels": "バージョン %s がそのチャネルで見つかりませんでした。隣接するチャネルを検索します。",
  "loc.messages.ErrorWhileSettingDotNetToolPath": ".Net Core Tool パスを PATH 環境変数の先頭に追加しているときに失敗しました。エラー: %s",
  "loc.messages.RequiredChannelVersionForSpec": "バージョン %s のチャネル %s を検索しています",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "チャネル %s からのバージョン %s の取得中、次のエラーで失敗しました: %s",
  "loc.messages.ComparingInstalledFolderVersions": "インストールされるバージョン %s が、フォルダー名 %s の既にインストールされているバージョンより後のものかどうかを比較しています",
  "loc.messages.ComparingInstalledFileVersions": "インストールされるバージョン %s が、version complete ファイル名 %s の既にインストールされているバージョンより後のものかどうかを比較しています",
  "loc.messages.InvalidChannelObject": "オブジェクトをチャネルとして使用することはできません。channel-version、release. json などの必須プロパティがありません。",
  "loc.messages.ReleasesIndexBodyIncorrect": "解析されたリリース インデックス本体が正しくありません。ファイルの releases-index セクションが空でないかどうかを確認してください。",
  "loc.messages.InvalidVersionObject": "releases.json には、無効な %s オブジェクトを含むリリースが含まれています: %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "リリース %s (バージョン %s) のファイル データが正しくありません (name、rid、および url などの必須フィールドが存在していない可能性があります): %s",
  "loc.messages.VersionFilesDataIncorrect": "バージョンのファイル データがないか、必須フィールドがありません。",
  "loc.messages.VersionInformationNotComplete": "バージョン: %s で必要な情報が releases.json ファイルで不足しています。エラー: %s",
  "loc.messages.FailedWhileExtractingPacakge": "ダウンロードされたパッケージの抽出中、次のエラーで失敗しました: %s"
}