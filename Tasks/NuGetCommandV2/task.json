{
    "id": "333b11bd-d341-40d9-afcf-b32d5ce6f23b",
    "name": "NuGetCommand",
    "friendlyName": "NuGet",
    "description": "Restore, pack, or push NuGet packages, or run a NuGet command. Supports NuGet.org and authenticated feeds like Azure Artifacts and MyGet. Uses NuGet.exe and works with .NET Framework apps. For .NET Core and .NET Standard apps, use the .NET Core task.",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/package/nuget",
    "helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?LinkID=613747) or [see the NuGet documentation](https://docs.microsoft.com/nuget/)",
    "category": "Package",
    "author": "Microsoft Corporation",
    "version": {
        "Major": 2,
        "Minor": 216,
        "Patch": 0
    },
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "minimumAgentVersion": "2.144.0",
    "groups": [
        {
            "name": "restoreAuth",
            "displayName": "Feeds and authentication",
            "isExpanded": true,
            "visibleRule": "command = restore"
        },
        {
            "name": "restoreAdvanced",
            "displayName": "Advanced",
            "isExpanded": false,
            "visibleRule": "command = restore"
        },
        {
            "name": "pushAdvanced",
            "displayName": "Advanced",
            "isExpanded": false,
            "visibleRule": "command = push"
        },
        {
            "name": "packOptions",
            "displayName": "Pack options",
            "isExpanded": false,
            "visibleRule": "command = pack"
        },
        {
            "name": "packAdvanced",
            "displayName": "Advanced",
            "isExpanded": false,
            "visibleRule": "command = pack"
        }
    ],
    "instanceNameFormat": "NuGet $(command)",
    "inputs": [
        {
            "name": "command",
            "type": "pickList",
            "label": "Command",
            "defaultValue": "restore",
            "helpMarkDown": "The NuGet command to run. Select 'Custom' to add arguments or to use a different command.",
            "required": "true",
            "properties": {
                "EditableOptions": "False"
            },
            "options": {
                "restore": "restore",
                "pack": "pack",
                "push": "push",
                "custom": "custom"
            }
        },
        {
            "name": "solution",
            "aliases": [
                "restoreSolution"
            ],
            "type": "filePath",
            "label": "Path to solution, packages.config, or project.json",
            "defaultValue": "**/*.sln",
            "helpMarkDown": "The path to the solution, packages.config, or project.json file that references the packages to be restored.",
            "required": "true",
            "visibleRule": "command = restore"
        },
        {
            "name": "selectOrConfig",
            "aliases": [
                "feedsToUse"
            ],
            "type": "radio",
            "label": "Feeds to use",
            "defaultValue": "select",
            "helpMarkDown": "You can either select a feed from Azure Artifacts and/or NuGet.org here, or commit a nuget.config file to your source code repository and set its path here.",
            "required": "true",
            "options": {
                "select": "Feed(s) I select here",
                "config": "Feeds in my NuGet.config"
            },
            "groupName": "restoreAuth"
        },
        {
            "name": "feedRestore",
            "aliases": [
                "vstsFeed"
            ],
            "type": "pickList",
            "label": "Use packages from this Azure Artifacts/TFS feed",
            "defaultValue": "",
            "helpMarkDown": "Include the selected feed in the generated NuGet.config. You must have Azure Artifacts installed and licensed to select a feed here.",
            "required": "false",
            "groupName": "restoreAuth",
            "visibleRule": "selectOrConfig = select",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "includeNuGetOrg",
            "type": "boolean",
            "label": "Use packages from NuGet.org",
            "defaultValue": "true",
            "helpMarkDown": "Include NuGet.org in the generated NuGet.config.",
            "required": "false",
            "groupName": "restoreAuth",
            "visibleRule": "selectOrConfig = select"
        },
        {
            "name": "nugetConfigPath",
            "type": "filePath",
            "label": "Path to NuGet.config",
            "defaultValue": "",
            "helpMarkDown": "The NuGet.config in your repository that specifies the feeds from which to restore packages.",
            "required": "false",
            "groupName": "restoreAuth",
            "visibleRule": "selectOrConfig = config"
        },
        {
            "name": "externalEndpoints",
            "aliases": [
                "externalFeedCredentials"
            ],
            "type": "connectedService:ExternalNuGetFeed",
            "label": "Credentials for feeds outside this organization/collection",
            "required": false,
            "helpMarkDown": "Credentials to use for external registries located in the selected NuGet.config. For feeds in this organization/collection, leave this blank; the build’s credentials are used automatically.",
            "properties": {
                "EditableOptions": "False",
                "MultiSelectFlatList": "True"
            },
            "groupName": "restoreAuth",
            "visibleRule": "selectOrConfig = config"
        },
        {
            "name": "noCache",
            "type": "boolean",
            "label": "Disable local cache",
            "defaultValue": "false",
            "helpMarkDown": "Prevents NuGet from using packages from local machine caches.",
            "required": "false",
            "groupName": "restoreAdvanced"
        },
        {
            "name": "disableParallelProcessing",
            "type": "boolean",
            "label": "Disable parallel processing",
            "defaultValue": "false",
            "helpMarkDown": "Prevents NuGet from installing multiple packages in parallel.",
            "required": "false",
            "groupName": "restoreAdvanced"
        },
        {
            "name": "packagesDirectory",
            "aliases": [
                "restoreDirectory"
            ],
            "type": "string",
            "label": "Destination directory",
            "defaultValue": "",
            "helpMarkDown": "Specifies the folder in which packages are installed. If no folder is specified, packages are restored into a packages/ folder alongside the selected solution, packages.config, or project.json.",
            "required": "false",
            "groupName": "restoreAdvanced"
        },
        {
            "name": "verbosityRestore",
            "type": "pickList",
            "label": "Verbosity",
            "defaultValue": "Detailed",
            "helpMarkDown": "Specifies the amount of detail displayed in the output.",
            "required": "false",
            "groupName": "restoreAdvanced",
            "options": {
                "Quiet": "Quiet",
                "Normal": "Normal",
                "Detailed": "Detailed"
            }
        },
        {
            "name": "searchPatternPush",
            "aliases": [
                "packagesToPush"
            ],
            "type": "filePath",
            "label": "Path to NuGet package(s) to publish",
            "defaultValue": "$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg",
            "helpMarkDown": "The pattern to match or path to nupkg files to be uploaded. Multiple patterns can be separated by a semicolon.",
            "required": true,
            "visibleRule": "command = push"
        },
        {
            "name": "nuGetFeedType",
            "type": "radio",
            "label": "Target feed location",
            "required": true,
            "defaultValue": "internal",
            "options": {
                "internal": "This organization/collection",
                "external": "External NuGet server (including other accounts/collections)"
            },
            "visibleRule": "command = push"
        },
        {
            "name": "feedPublish",
            "aliases": [
                "publishVstsFeed"
            ],
            "type": "pickList",
            "label": "Target feed",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select a feed hosted in this account. You must have Azure Artifacts installed and licensed to select a feed here.",
            "visibleRule": "command = push && nuGetFeedType = internal",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "publishPackageMetadata",
            "groupName": "pushAdvanced",
            "type": "boolean",
            "label": "Publish pipeline metadata",
            "defaultValue": true,
            "helpMarkDown": "Associate this build/release pipeline’s metadata (run #, source code information) with the package",
            "visibleRule": "command = push && nuGetFeedType = internal"
        },
        {
            "name": "allowPackageConflicts",
            "type": "boolean",
            "label": "Allow duplicates to be skipped",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "If you continually publish a set of packages and only change the version number of the subset of packages that changed, use this option. It allows the task to report success even if some of your packages are rejected with 409 Conflict errors.\n\nThis option is currently only available on Azure Pipelines and using Windows agents. If NuGet.exe encounters a conflict, the task will fail. This option will not work and publish will fail if you are within a proxy environment.",
            "visibleRule": "command = push && nuGetFeedType = internal"
        },
        {
            "name": "externalEndpoint",
            "aliases": [
                "publishFeedCredentials"
            ],
            "type": "connectedService:ExternalNuGetFeed",
            "label": "NuGet server",
            "required": true,
            "helpMarkDown": "The NuGet service connection that contains the external NuGet server’s credentials.",
            "visibleRule": "command = push && nuGetFeedType = external"
        },
        {
            "name": "verbosityPush",
            "type": "pickList",
            "label": "Verbosity",
            "defaultValue": "Detailed",
            "helpMarkDown": "Specifies the amount of detail displayed in the output.",
            "required": "false",
            "groupName": "pushAdvanced",
            "options": {
                "Quiet": "Quiet",
                "Normal": "Normal",
                "Detailed": "Detailed"
            }
        },
        {
            "name": "searchPatternPack",
            "aliases": [
                "packagesToPack"
            ],
            "type": "filePath",
            "label": "Path to csproj or nuspec file(s) to pack",
            "defaultValue": "**/*.csproj",
            "helpMarkDown": "Pattern to search for csproj directories to pack.\n\nYou can separate multiple patterns with a semicolon, and you can make a pattern negative by prefixing it with '!'. Example: `**\\*.csproj;!**\\*.Tests.csproj`",
            "required": true,
            "visibleRule": "command = pack"
        },
        {
            "name": "configurationToPack",
            "aliases": [
                "configuration"
            ],
            "type": "string",
            "label": "Configuration to package",
            "defaultValue": "$(BuildConfiguration)",
            "helpMarkDown": "When using a csproj file this specifies the configuration to package",
            "required": false,
            "visibleRule": "command = pack"
        },
        {
            "name": "outputDir",
            "aliases": [
                "packDestination"
            ],
            "type": "filePath",
            "label": "Package folder",
            "defaultValue": "$(Build.ArtifactStagingDirectory)",
            "helpMarkDown": "Folder where packages will be created. If empty, packages will be created at the source root.",
            "required": false,
            "visibleRule": "command = pack"
        },
        {
            "name": "versioningScheme",
            "type": "pickList",
            "label": "Automatic package versioning",
            "defaultValue": "off",
            "helpMarkDown": "Cannot be used with include referenced projects. If you choose 'Use the date and time', this will generate a [SemVer](http://semver.org/spec/v1.0.0.html)-compliant version formatted as `X.Y.Z-ci-datetime` where you choose X, Y, and Z.\n\nIf you choose 'Use an environment variable', you must select an environment variable and ensure it contains the version number you want to use.\n\nIf you choose 'Use the build number', this will use the build number to version your package. **Note:** Under Options set the build number format to be '[$(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)](https://go.microsoft.com/fwlink/?LinkID=627416)'.",
            "required": true,
            "groupName": "packOptions",
            "options": {
                "off": "Off",
                "byPrereleaseNumber": "Use the date and time",
                "byEnvVar": "Use an environment variable",
                "byBuildNumber": "Use the build number"
            }
        },
        {
            "name": "includeReferencedProjects",
            "type": "boolean",
            "label": "Include referenced projects",
            "defaultValue": "false",
            "helpMarkDown": "Include referenced projects either as dependencies or as part of the package. Cannot be used with automatic package versioning. If a referenced project has a corresponding nuspec file that has the same name as the project, then that referenced project is added as a dependency. Otherwise, the referenced project is added as part of the package. [Learn more](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-pack).",
            "groupName": "packOptions",
            "visibleRule": "versioningScheme = off"
        },
        {
            "name": "versionEnvVar",
            "type": "string",
            "label": "Environment variable",
            "defaultValue": "",
            "helpMarkDown": "Enter the variable name without $, $env, or %.",
            "required": true,
            "groupName": "packOptions",
            "visibleRule": "versioningScheme = byEnvVar"
        },
        {
            "name": "requestedMajorVersion",
            "aliases": [
                "majorVersion"
            ],
            "type": "string",
            "label": "Major",
            "defaultValue": "1",
            "helpMarkDown": "The 'X' in version [X.Y.Z](http://semver.org/spec/v1.0.0.html)",
            "required": true,
            "groupName": "packOptions",
            "visibleRule": "versioningScheme = byPrereleaseNumber"
        },
        {
            "name": "requestedMinorVersion",
            "aliases": [
                "minorVersion"
            ],
            "type": "string",
            "label": "Minor",
            "defaultValue": "0",
            "helpMarkDown": "The 'Y' in version [X.Y.Z](http://semver.org/spec/v1.0.0.html)",
            "required": true,
            "groupName": "packOptions",
            "visibleRule": "versioningScheme = byPrereleaseNumber"
        },
        {
            "name": "requestedPatchVersion",
            "aliases": [
                "patchVersion"
            ],
            "type": "string",
            "label": "Patch",
            "defaultValue": "0",
            "helpMarkDown": "The 'Z' in version [X.Y.Z](http://semver.org/spec/v1.0.0.html)",
            "required": true,
            "groupName": "packOptions",
            "visibleRule": "versioningScheme = byPrereleaseNumber"
        },
        {
            "name": "packTimezone",
            "type": "pickList",
            "label": "Time zone",
            "defaultValue": "utc",
            "helpMarkDown": "Specifies the desired time zone used to produce the version of the package. Selecting UTC is recommended if you're using hosted build agents as their date and time might differ.",
            "required": "false",
            "groupName": "packOptions",
            "options": {
                "utc": "UTC",
                "local": "Agent local time"
            },
            "visibleRule": "versioningScheme = byPrereleaseNumber"
        },
        {
            "name": "includeSymbols",
            "type": "boolean",
            "label": "Create symbols package",
            "defaultValue": "false",
            "helpMarkDown": "Specifies that the package contains sources and symbols. When used with a .nuspec file, this creates a regular NuGet package file and the corresponding symbols package.",
            "groupName": "packOptions"
        },
        {
            "name": "toolPackage",
            "type": "boolean",
            "label": "Tool Package",
            "defaultValue": false,
            "helpMarkDown": "Determines if the output files of the project should be in the tool folder.",
            "groupName": "packOptions"
        },
        {
            "name": "buildProperties",
            "type": "string",
            "label": "Additional build properties",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies a list of token=value pairs, separated by semicolons, where each occurrence of $token$ in the .nuspec file will be replaced with the given value. Values can be strings in quotation marks.",
            "groupName": "packAdvanced"
        },
        {
            "name": "basePath",
            "type": "string",
            "label": "Base path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The base path of the files defined in the nuspec file.",
            "groupName": "packAdvanced"
        },
        {
            "name": "verbosityPack",
            "type": "pickList",
            "label": "Verbosity",
            "defaultValue": "Detailed",
            "helpMarkDown": "Specifies the amount of detail displayed in the output.",
            "required": "false",
            "groupName": "packAdvanced",
            "options": {
                "Quiet": "Quiet",
                "Normal": "Normal",
                "Detailed": "Detailed"
            }
        },
        {
            "name": "arguments",
            "type": "string",
            "label": "Command and arguments",
            "defaultValue": "",
            "helpMarkDown": "The command and arguments which will be passed to NuGet.exe for execution. If NuGet 3.5 or later is used, authenticated commands like list, restore, and publish against any feed in this organization/collection that the Project Collection Build Service has access to will be automatically authenticated.",
            "required": true,
            "visibleRule": "command = custom"
        }
    ],
    "dataSourceBindings": [
        {
            "target": "feedRestore",
            "endpointId": "tfs:feed",
            "endpointUrl": "{{endpoint.url}}/_apis/packaging/feeds?includeUrls=False",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{#if project}}{{{project.id}}}\\/{{/if}}{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "feedPublish",
            "endpointId": "tfs:feed",
            "endpointUrl": "{{endpoint.url}}/_apis/packaging/feeds?includeUrls=False",
            "resultSelector": "jsonpath:$.value[*]",
            "resultTemplate": "{ \"Value\" : \"{{#if project}}{{{project.id}}}\\/{{/if}}{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        }
    ],
    "execution": {
        "Node10": {
            "target": "nugetcommandmain.js",
            "argumentFormat": ""
        },
        "Node16": {
            "target": "nugetcommandmain.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "Warning_NoConfigForNoCredentialProvider": "To connect to NuGet feeds hosted in your Azure DevOps organization on this build agent, edit your build pipeline to choose a higher version of nuget or specify a path to a NuGet.config containing the package sources you wish to use.",
        "Warning_ConflictingNuGetPreference": "NuGet 3.3 was selected, but a custom NuGet path was provided. The custom path will be preferred. To resolve this warning, edit your build task and select 'custom' for NuGet version under Advanced.",
        "PackagesInstalledSuccessfully": "Packages were restored successfully",
        "PackagesFailedToInstall": "Packages failed to restore",
        "ConnectingAs": "Connecting to feeds in your Azure DevOps organization as '%s' [%s]",
        "BuildIdentityPermissionsHint": "For internal feeds, make sure the build service identity '%s' [%s] has access to the feed.",
        "NoCredProviderOnAgent": "CredentialProvider.TeamBuild.exe not found on the agent. Falling back to config-based credential flow.",
        "NotARegularFile": "%s is not a solution file. Check the 'path to solution or packages.config' property of the NuGet Restore task.",
        "UnknownRestoreMode": "Unknown restore mode '%s'",
        "CouldNotFindNuGetService": "Could not find the NuGet service. This task will be unable to authenticate to feeds hosted in your Azure DevOps organization.",
        "NoNuGetSpecified": "If 'custom' is selected, you must provide a path to NuGet.exe",
        "Warning_AutomaticallyVersionReferencedProjects": "The automatic package versioning and include referenced projects options do not work together. Referenced projects will not inherit the custom version provided by the automatic versioning settings.",
        "Error_AutomaticallyVersionReleases": "Autoversion: Getting version number from build option is not supported in releases",
        "Error_NoVersionFoundInBuildNumber": "Could not find version number data in the following environment variable: BUILD_BUILDNUMBER. The value of the variable should contain a substring with the following formats: X.Y.Z or X.Y.Z.A where A, X, Y, and Z are positive integers.",
        "Warning_MoreThanOneVersionInBuildNumber": "Found more than one instance of version data in BUILD_BUILDNUMBER.Assuming first instance is version.",
        "Error_NoValueFoundForEnvVar": "No value was found for the provided environment variable.",
        "Error_PackageFailure": "An error occurred while trying to pack the files.",
        "Info_AttemptingToPackFile": "Attempting to pack file: ",
        "Warning_NoConfigForOldNuGet": "To connect to NuGet feeds hosted in your Azure DevOps organization with NuGet 3.1 or below, edit your build pipeline to specify a path to a NuGet.config containing the package sources you wish to use.",
        "PackagesPublishedSuccessfully": "Packages were published successfully",
        "PackagesFailedToPublish": "Packages failed to publish",
        "UnknownFeedType": "Unknown feed type '%s'",
        "Error_NoSourceSpecifiedForPush": "No source was specified for push",
        "Error_UnexpectedErrorVstsNuGetPush": "An unexpected error occurred while trying to push the package with VstsNuGetPush.exe. Exit code(%s) and error(%s)",
        "Warning_FallBackToNuGet": "VstsNuGetPush.exe was not found, falling back to NuGet.exe.",
        "Info_NoPackagesMatchedTheSearchPattern": "No packages matched the search pattern.",
        "Warning_ForceNuGetCannotSkipConflicts": "NuGet.exe was forced to be used for publish, if push conflicts occur it will result in a failure.",
        "Error_PushNotARegularFile": "%s is not a file. Check the 'Path/Pattern to nupkg' property of the task.",
        "Warning_AllowDuplicatesOnlyAvailableHosted": "The 'Allow duplicates to be skipped' option is currently only available on Azure Pipelines. If NuGet.exe encounters a conflict, the task will fail.",
        "Warning_SkipConflictsNotSupportedUnixAgents": "The 'Allow duplicates to be skipped' option is currently only available on Windows agents. If NuGet.exe encounters a conflict, the task will fail.",
        "Error_CommandNotRecognized": "The command %s was not recognized.",
        "Error_ApiKeyNotSupported": "DotNetCore currently does not support using an encrypted Api Key.",
        "Error_ExpectedConfigurationElement": "Invalid xml. Expected element named 'configuration'.",
        "Error_NoMatchingFilesFoundForPattern": "No matching files were found with search pattern: %s",
        "Error_NoUrlWasFoundWhichMatches": "No download URL was found for %s",
        "Error_NoVersionWasFoundWhichMatches": "No version was found which matches the input %s",
        "Error_NuGetToolInstallerFailer": "Tool install failed: %s",
        "Info_AvailableVersions": "The available versions are: %s",
        "Info_ExpectBehaviorChangeWhenUsingVersionQuery": "You are using a query match on the version string. Behavior changes or breaking changes might occur as NuGet updates to a new version.",
        "Info_MatchingUrlWasFoundSettingAuth": "Using authentication information for the following URI: ",
        "Info_ResolvedToolFromCache": "Resolved from tool cache: %s",
        "Info_SavingTempConfig": "Saving NuGet.config to a temporary config file.",
        "Info_UsingToolPath": "Using tool path: %s",
        "Info_UsingVersion": "Using version: %s",
        "NGCommon_AddingSources": "Setting credentials in NuGet.config",
        "NGCommon_AreaNotFoundInSps": "Unable to locate the '%s' [%s] area. The service containing that area may not be available in your region.",
        "NGCommon_DetectedNuGetExtensionsPath": "Detected NuGet extensions loader path (NUGET_EXTENSIONS_PATH environment variable): %s",
        "NGCommon_DetectedNuGetVersion": "Detected NuGet version %s / %s",
        "NGCommon_IgnoringNuGetExtensionsPath": "Detected NuGet extensions loader path (NUGET_EXTENSIONS_PATH environment variable). Extensions are ignored when using the built-in NuGet client",
        "NGCommon_NoSourcesFoundInConfig": "No package sources were found in the NuGet.config file at %s",
        "NGCommon_NuGetConfigIsInvalid": "The NuGet.config at %s is invalid.",
        "NGCommon_NuGetConfigIsPackagesConfig": "Expected a NuGet.config file at %s, but its contents appear to be a packages.config. Check the settings for the %s task and confirm you selected NuGet.config rather than packages.config.",
        "NGCommon_RemovingSources": "Preparing to set credentials in NuGet.config",
        "NGCommon_SpsNotFound": "Unable to find the '%s' [%s] area. There may be a problem with your Team Foundation Server installation.",
        "NGCommon_UnabletoDetectNuGetVersion": "Unknown NuGet version selected.",
        "NGCommon_UnableToFindTool": "Unable to find tool %s",
        "Warning_SessionCreationFailed": "Could not create provenance session: %s",
        "Warning_UpdatingNuGetVersion": "Updating version of NuGet.exe to %s from %s. Behavior changes or breaking changes might occur as NuGet updates to a new version. If this is not desired, deselect the 'Check for Latest Version' option in the task.",
        "Error_NugetFailedWithCodeAndErr": "The nuget command failed with exit code(%s) and error(%s)",
        "Warning_IncludeNuGetOrgEnabled":  "IncludeNugetOrg is currently enabled for this task. To resolve this warning, edit your build task and set 'includeNuGetOrg' to 'false' or deselect 'Use packages from NuGet.org'.",
        "Error_IncludeNuGetOrgEnabled": "Packages failed to restore. Edit your build task and set 'includeNuGetOrg' to 'false' or deselect 'Use packages from NuGet.org'."
    }
}
