{
  "loc.friendlyName": "Azure 容器應用程式部署",
  "loc.helpMarkDown": "[深入了解此工作](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV1/README.md)",
  "loc.description": "建置及部署 Azure 容器應用程式的 Azure DevOps 工作。",
  "loc.instanceNameFormat": "Azure 容器應用程式部署",
  "loc.releaseNotes": "用於建置及部署 Azure 容器應用程式的 AzureContainerApps 工作發行版本 1.x.x。",
  "loc.input.label.cwd": "工作目錄",
  "loc.input.help.cwd": "指令碼執行所在的現行工作目錄。Empty 是存放庫 (組建) 或成品 (發行) 的根目錄，即 $(System.DefaultWorkingDirectory)",
  "loc.input.label.appSourcePath": "應用程式來源路徑",
  "loc.input.help.appSourcePath": "要建立之來源應用程式程式碼執行器上的絕對路徑。若未提供，必須提供 'imageToDeploy' 引數，以確保容器應用程式具有要參考的映像。",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager 連線",
  "loc.input.help.connectedServiceNameARM": "為部署選取 Azure Resource Manager 服務連線",
  "loc.input.label.acrName": "Azure Container Registry 名稱",
  "loc.input.help.acrName": "要推送可執行之應用程式映像的目標 Azure Container Registry 名稱。",
  "loc.input.label.acrUsername": "Azure Container Registry 使用者名稱",
  "loc.input.help.acrUsername": "用來向提供的 Azure Container Registry 驗證推送要求的使用者名稱。若未提供，將會透過 'az acr login' 產生存取權杖，並提供給 'docker login' 以驗證要求。",
  "loc.input.label.acrPassword": "Azure Container Registry 密碼",
  "loc.input.help.acrPassword": "用來向提供的 Azure Container Registry 驗證推送要求的密碼。若未提供，將會透過 'az acr login' 產生存取權杖，並提供給 'docker login' 以驗證要求。",
  "loc.input.label.dockerfilePath": "Dockerfile 路徑",
  "loc.input.help.dockerfilePath": "所提供應用程式來源中 Dockerfile 的相對路徑，應該用於建置映像，然後推送至 ACR 並部署到容器應用程式。若未提供，此工作將檢查提供的應用程式來源根目錄是否有名為 'Dockerfile' 的檔案，並使用該檔案來建置映像。否則，將使用 Oryx++ Builder 來建立映像。",
  "loc.input.label.imageToBuild": "要建置的 Docker 映像",
  "loc.input.help.imageToBuild": "要建置、推送至 ACR 並由此工作部署到容器應用程式的影像自訂名稱。注意事項: 此影像名稱應包含 ACR 伺服器; 例如 <acr-name>.azurecr.io/<repo>:<tag>。若未提供此引數，將會以 `<acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number>` 的格式建構預設影像名稱。",
  "loc.input.label.imageToDeploy": "要部署的 Docker 映像",
  "loc.input.help.imageToDeploy": "映像的自訂名稱已推送至 ACR，且將由此工作部署到容器應用程式。注意: 映像名稱應包含 ACR 伺服器; 例如 <acr-name>.azurecr.io/<repo>:<tag>。如果未提供此引數，則會使用為 'imageToBuild' 引數提供 (或決定) 的值。",
  "loc.input.label.containerAppName": "Azure 容器應用程式名稱",
  "loc.input.help.containerAppName": "將建立或更新的 Azure 容器應用程式名稱。若未提供，此值的格式為 `ado-task-app-<build-id>-<build-number>`。",
  "loc.input.label.resourceGroup": "Azure 資源群組名稱",
  "loc.input.help.resourceGroup": "會在其中建立 Azure 容器應用程式的現有資源群組。若未提供，此值將會是 '<container-app-name>-rg'，而且會先檢查其是否存在，然後才嘗試建立。",
  "loc.input.label.containerAppEnvironment": "Azure 容器應用程式環境",
  "loc.input.help.containerAppEnvironment": "要和應用程式搭配使用的 Azure 容器應用程式環境名稱。若未提供，將會使用容器應用程式資源群組中的現有環境，否則會以 `<container-app-name>-env` 的格式建立環境。",
  "loc.input.label.runtimeStack": "應用程式執行階段堆疊",
  "loc.input.help.runtimeStack": "應用程式部署到 Azure 容器應用程式時所執行的平台版本堆疊。這應該以 `<platform>:<version>` 的格式提供。若未提供，此值會由 Oryx 根據所提供應用程式的內容決定。如需 Oryx 支援的執行階段堆疊詳細資訊，請檢視下列文件: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md",
  "loc.input.label.targetPort": "應用程式目標連接埠",
  "loc.input.help.targetPort": "供應用程式執行的指定連接埠。如果未提供任何值，並使用建立器建置可執行的應用程式影像，則 Python 應用程式的目標連接埠會設為 80，所有其他平台應用程式的目標連接埠則設為 8080。如果在建立容器應用程式時未提供任何值，則目標埠會預設為 80。注意事項: 使用此工作來更新容器應用程式時，若未根據輸入屬性的變更提供目標連接埠，則可能會更新目標連接埠。",
  "loc.input.label.location": "容器應用程式的位置",
  "loc.input.help.location": "容器應用程式 (及其他已建立資源) 的目標部署位置。",
  "loc.input.label.environmentVariables": "環境變數",
  "loc.input.help.environmentVariables": "容器的環境變數清單。以 'key=value' 為格式的空格分隔值。用以清除現有值的空字串。以 'secretref:' 作為參考秘密的前置值。",
  "loc.input.label.ingress": "輸入設定",
  "loc.input.help.ingress": "可能的選項: external、internal、disabled。若設為 'external' (建立容器應用程式時若未提供，即為預設值)，則根據設定的應用程式環境端點，容器應用程式會從網際網路或 VNET 顯示。如果設為 'internal'，則容器應用程式將只能從應用程式環境中顯示。如果設為 'disabled'，則會停用此容器應用程式的輸入，而且不會有 HTTP 或 TCP 端點。",
  "loc.input.label.yamlConfigPath": "YAML 設定檔路徑",
  "loc.input.help.yamlConfigPath": "到詳細描述容器應用程式設定的 YAML 檔案的完整路徑 (在執行中的 Azure Pipelines 代理程式上)。",
  "loc.input.label.disableTelemetry": "停用遙測",
  "loc.input.help.disableTelemetry": "如果設定為 'true'，此 Azure DevOps 工作將不會收集任何遙測。如果設定為 'false'，或未提供此引數，則會將有關容器應用程式組建的遙測傳送給 Microsoft，並部署此 Azure DevOps 工作的目標案例。",
  "loc.messages.AcrAccessTokenAuthFailed": "無法使用存取權杖對 ACR 執行個體 '%s.azurecr.io' 進行驗證。",
  "loc.messages.AcrAccessTokenLoginMessage": "使用透過 Azure CLI 產生的存取權杖登入 Azure Container Registry。",
  "loc.messages.AcrUsernamePasswordAuthFailed": "無法使用使用者名稱/密碼對 ACR 執行個體 '%s.azurecr.io' 進行驗證。",
  "loc.messages.AcrUsernamePasswordLoginMessage": "使用提供的 acrUsername 和 acrPassword 引數登入 Azure Container Registry。",
  "loc.messages.AzureCliDynamicInstallFailed": "無法設定 Azure CLI 以動態安裝遺漏的延伸模組。",
  "loc.messages.BashCommandFailed": "無法執行提供的 bash 命令 '%s'。",
  "loc.messages.CheckForAppSourceDockerfileMessage": "未提供 dockerfilePath 引數; 正在檢查應用程式來源路徑 '%s' 根目錄的 'Dockerfile'，從中建立映像。",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "部署容器應用程式時，使用提供的 containerAppEnvironment 值提供 '%s'。",
  "loc.messages.CreateContainerAppEnvironmentFailed": "無法建立容器應用程式環境。",
  "loc.messages.CreateContainerAppFailed": "無法透過 'az containerapp create' 命令建立 Azure 容器應用程式。",
  "loc.messages.CreateContainerAppFromYamlFailed": "無法透過 'az containerapp create' 命令從 YAML 設定檔建立 Azure 容器應用程式。",
  "loc.messages.CreateImageWithBuilderFailed": "無法使用 Oryx++ Builder 建立可執行的應用程式映像。",
  "loc.messages.CreateImageWithBuilderMessage": "未提供或找不到應用程式來源的 Dockerfile; 嘗試使用 Oryx++ Builder 建立可執行的應用程式映像。",
  "loc.messages.CreateImageWithDockerfileFailed": "無法使用提供的或探索到的 Dockerfile 建立可執行的應用程式映像。",
  "loc.messages.CreateImageWithDockerfileMessage": "已提供或找到應用程式來源的 Dockerfile; 嘗試從 Dockerfile '%s' 建置映像。",
  "loc.messages.CreateResourceGroupFailed": "無法建立資源群組 '%s'。",
  "loc.messages.DefaultContainerAppNameMessage": "未提供 containerAppName 引數; 設定容器應用程式的名稱，以建立/更新至 '%s'。",
  "loc.messages.DefaultContainerAppEnvironmentMessage": "未提供 containerAppEnvironment 引數; 設定容器應用程式，以建立/更新至 '%s'。",
  "loc.messages.DefaultImageToBuildMessage": "未提供 imageToBuild 引數; 設定要建置成 '%s' 的映像。",
  "loc.messages.DefaultImageToDeployMessage": "未提供 imageToDeploy 引數; 設定映像以部署到' %s'。",
  "loc.messages.DefaultIngressMessage": "未提供任何輸入引數，請將輸入值設定為 '%s'。",
  "loc.messages.DefaultResourceGroupMessage": "未提供 resourceGroup 引數; 將部署的資源群組設定為'%s'。",
  "loc.messages.DefaultRuntimeStackMessage": "未提供 RuntimeStack 引數; 使用針對應用程式 '%s' 找到的執行階段堆疊。",
  "loc.messages.DefaultTargetPortMessage": "未提供 targetPort 引數; 使用應用程式的目標連接埠 '%s'。",
  "loc.messages.DetermineRuntimeStackFailed": "無法從應用程式來源 '%s' 判斷執行階段堆疊。",
  "loc.messages.DisableContainerAppIngressFailed": "無法停用容器應用程式的輸入。",
  "loc.messages.DisabledIngressMessage": "將停用容器應用程式的輸入。",
  "loc.messages.EnableContainerAppIngressFailed": "無法啟用容器應用程式的輸入。",
  "loc.messages.ErrorCodeFormat": "錯誤碼: [%s]",
  "loc.messages.ErrorMessageFormat": "錯誤: %s",
  "loc.messages.ExistingContainerAppEnvironmentMessage": "已探索到要和容器應用程式搭配使用的現有容器應用程式環境 '%s'。",
  "loc.messages.FoundAppSourceDockerfileMessage": "在提供的應用程式來源中找到現有的 Dockerfile，位於路徑 '%s'; 將會從這個 Dockerfile 建立映像。",
  "loc.messages.MissingAcrNameMessage": "如果提供 appSourcePath 引數，也必須提供 acrName 引數。",
  "loc.messages.MissingRequiredArgumentMessage": "必須提供下列其中一個引數: appSourcePath、imageToDeploy、yamlConfigPath",
  "loc.messages.PackCliInstallFailed": "無法安裝套件 CLI。",
  "loc.messages.PushImageToAcrFailed": "無法將映像 '%s' 推送至 ACR。",
  "loc.messages.SetDefaultBuilderFailed": "無法將 Oryx++ Builder 設定為預設建立器。",
  "loc.messages.UpdateContainerAppFailed": "無法透過 'az containerapp update' 命令更新 Azure 容器應用程式。",
  "loc.messages.UpdateContainerAppFromYamlFailed": "無法透過 'az containerapp update' 命令從 YAML 設定檔更新 Azure 容器應用程式。",
  "loc.messages.UpdateContainerAppRegistryDetailsFailed": "無法透過 'az containerapp registry set' 命令更新 Azure 容器應用程式 ACR 詳細資料。"
}