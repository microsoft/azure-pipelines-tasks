{
  "loc.friendlyName": "Déployer Azure Container Apps",
  "loc.helpMarkDown": "[En savoir plus sur cette tâche](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureContainerAppsV1/README.md)",
  "loc.description": "Une tâche Azure DevOps pour générer et déployer Azure Container Apps",
  "loc.instanceNameFormat": "Déployer Azure Container Apps",
  "loc.releaseNotes": "Publication de la version 1.x.x. de la tâche AzureContainerApps pour la création et le déploiement d’Azure Container Apps.",
  "loc.input.label.cwd": "Répertoire de travail",
  "loc.input.help.cwd": "Répertoire de travail actif dans lequel le script est exécuté. Une valeur vide représente la racine du dépôt (build) ou des artefacts (mise en production), à savoir $(System.DefaultWorkingDirectory)",
  "loc.input.label.appSourcePath": "Chemin d’accès source de l’application",
  "loc.input.help.appSourcePath": "Chemin d’accès absolu sur le runner du code source de l’application à construire. S’il n’est pas fourni, l’argument 'imageToDeploy' doit être fourni pour s’assurer que l’application conteneur a une image à référencer.",
  "loc.input.label.connectedServiceNameARM": "Connexion Azure Resource Manager",
  "loc.input.help.connectedServiceNameARM": "Sélectionnez une connexion de service Azure Resource Manager pour le déploiement",
  "loc.input.label.acrName": "Nom du registre de conteneurs Azure",
  "loc.input.help.acrName": "Le nom d’Azure Container Registry vers lequel l’image de l’application exécutable sera poussée",
  "loc.input.label.acrUsername": "Nom d’utilisateur d’Azure Container Registry",
  "loc.input.help.acrUsername": "Nom d’utilisateur utilisé pour authentifier les demandes Push auprès du Azure Container Registry fourni. S’il n’est pas fourni, un jeton d’accès est généré via « az acr login » et fourni à « docker login » pour authentifier les demandes.",
  "loc.input.label.acrPassword": "Mot de passe Azure Container Registry",
  "loc.input.help.acrPassword": "Le mot de passe utilisé pour authentifier les demandes d’envoi auprès du Azure Container Registry fourni. S’il n’est pas fourni, un jeton d’accès est généré via 'az acr login' et fourni à 'docker login' pour authentifier les demandes.",
  "loc.input.label.dockerfilePath": "Chemin du fichier Docker",
  "loc.input.help.dockerfilePath": "Chemin relatif vers le fichier Dockerfile dans la source de l’application fournie qui doit être utilisé pour construire l’image qui est ensuite poussée vers ACR et déployée dans l’application conteneur. Si elle n’est pas fournie, cette tâche vérifiera s’il existe un fichier nommé 'Dockerfile' à la racine de la source d’application fournie et l’utilisera pour construire l’image. Sinon, l’Oryx++ Builder sera utilisé pour créer l’image.",
  "loc.input.label.imageToBuild": "Image Docker à générer",
  "loc.input.help.imageToBuild": "Nom personnalisé de l’image à générer, envoyée (push) à ACR et déployée dans l’application conteneur par cette tâche. Remarque : ce nom d’image doit inclure le serveur ACR ; par exemple, <acr-name>.azurecr.io/<repo>:<tag>. Si cet argument n’est pas fourni, un nom d’image par défaut est construit sous la forme « <acr-name>.azurecr.io/ado-task/container-app:<build-id>.<build-number> ».",
  "loc.input.label.imageToDeploy": "Image Docker à déployer",
  "loc.input.help.imageToDeploy": "Le nom personnalisé de l’image qui a déjà été poussée vers ACR et qui sera déployée vers l’application conteneur par cette tâche. Remarque : le nom de l’image doit inclure le serveur ACR ; par exemple, <acr-name>.azurecr.io/<repo>:<tag>. Si cet argument n’est pas fourni, la valeur fournie (ou déterminée) pour l’argument 'imageToBuild' sera utilisée.",
  "loc.input.label.containerAppName": "Nom de l’application du conteneur Azure",
  "loc.input.help.containerAppName": "Nom de l’application conteneur Azure qui sera créée ou mise à jour. Si elle n’est pas fournie, cette valeur se présente sous la forme « ado-task-app-<build-id>-<build-number> ».",
  "loc.input.label.resourceGroup": "Nom du groupe de ressources Azure",
  "loc.input.help.resourceGroup": "Groupe de ressources existant dans lequel l’application conteneur Azure sera créée. Si elle n’est pas fournie, cette valeur est « <container-app-name>-rg » et son existence est d’abord vérifiée avant d’essayer de la créer.",
  "loc.input.label.containerAppEnvironment": "Environnement Azure Container App",
  "loc.input.help.containerAppEnvironment": "Nom de l’environnement de l’application conteneur Azure à utiliser avec l’application. S’il n’est pas fourni, un environnement existant dans le groupe de ressources de l’application conteneur est utilisé, sinon un environnement est créé sous la forme de « <container-app-name>-env »",
  "loc.input.label.runtimeStack": "Pile de l’Application Runtime",
  "loc.input.help.runtimeStack": "Pile de version de la plateforme dans laquelle l’application s’exécute lorsqu’elle est déployée dans l’application conteneur Azure. Elle doit être fournie sous la forme `<platform>:<version>`. Si elle n’est pas fournie, cette valeur est déterminée par Oryx en fonction du contenu de l’application fournie. Veuillez consulter le document suivant pour plus d’informations sur les piles d’exécution prises en charge par Oryx : https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md.",
  "loc.input.label.targetPort": "Port cible de l’application",
  "loc.input.help.targetPort": "Port désigné pour l’exécution de l’application. Si aucune valeur n’est fournie et que le générateur est utilisé pour générer l’image de l’application exécutable, le port cible est défini sur 80 pour les applications Python et sur 8080 pour toutes les autres applications de plateforme. Si aucune valeur n’est fournie lors de la création d’une application conteneur, le port cible a la valeur par défaut 80. Remarque : lors de l’utilisation de cette tâche pour mettre à jour une application conteneur, le port cible peut être mis à jour s’il n’est pas fourni en fonction des modifications apportées à la propriété d’entrée.",
  "loc.input.label.location": "Emplacement de l’application conteneur",
  "loc.input.help.location": "Emplacement où l’application conteneur (et d’autres ressources créées) sera déployée.",
  "loc.input.label.environmentVariables": "Variables d’environnement",
  "loc.input.help.environmentVariables": "Liste de variables d’environnement pour le conteneur. Valeurs séparées par des espaces au format 'key=value'. Chaîne vide pour effacer les valeurs existantes. Valeur de préfixe avec 'secretref:' pour référencer un secret.",
  "loc.input.label.ingress": "Paramètre d’entrée",
  "loc.input.help.ingress": "Options possibles : externe, interne, désactivée. Si la valeur est « externe » (valeur par défaut si elle n’est pas fournie lors de la création d’une application conteneur), l’application conteneur est visible depuis Internet ou un réseau virtuel, en fonction du point de terminaison de l’environnement d’application configuré. Si la valeur est « interne », l’application conteneur est visible uniquement à partir de l’environnement de l’application. Si la valeur est « désactivée », l’entrée est désactivée pour cette application conteneur et n’a pas de point de terminaison HTTP ou TCP.",
  "loc.input.label.yamlConfigPath": "Chemin d’accès au fichier de configuration YAML",
  "loc.input.help.yamlConfigPath": "Chemin d’accès complet (sur l’agent Azure Pipelines en cours d’exécution) vers le fichier YAML détaillant la configuration de l’application conteneur.",
  "loc.input.label.disableTelemetry": "Désactiver la télémétrie",
  "loc.input.help.disableTelemetry": "Si la valeur est 'true', aucune télémétrie n’est collectée par cette tâche Azure DevOps. Si la valeur est 'false', ou si cet argument n’est pas fourni, la télémétrie est envoyée à Microsoft à propos du scénario de génération et de déploiement d’application conteneur ciblé par cette tâche Azure DevOps.",
  "loc.messages.AcrAccessTokenAuthFailed": "Impossible d’authentifier l’instance ACR « %s.azurecr.io » avec le jeton d’accès.",
  "loc.messages.AcrAccessTokenLoginMessage": "Connexion à Azure Container Registry à l’aide du jeton d’accès à générer via Azure CLI.",
  "loc.messages.AcrUsernamePasswordAuthFailed": "Impossible de s’authentifier auprès de l’instance ACR '%s.azurecr.io' avec nom d’utilisateur/mot de passe.",
  "loc.messages.AcrUsernamePasswordLoginMessage": "Connexion à Azure Container Registry à l’aide des arguments acrUsername et acrPassword fournis.",
  "loc.messages.AzureCliDynamicInstallFailed": "Désolé… Nous n’avons pas pu définir l’interface de ligne de commande Azure (CLI) pour installer dynamiquement les extensions manquantes.",
  "loc.messages.BashCommandFailed": "Désolé… Nous n’avons pas pu exécuter la commande bash « %s » fournie.",
  "loc.messages.CheckForAppSourceDockerfileMessage": "Aucun argument dockerfilePath n'a été fourni; recherche de 'Dockerfile' à la racine du chemin source de l’application '%s' pour construire l’image.",
  "loc.messages.ContainerAppEnvironmentUsedMessage": "L’utilisation de la valeur containerAppEnvironment fournie '%s' lors du déploiement de l’application conteneur.",
  "loc.messages.CreateContainerAppEnvironmentFailed": "Désolé… Nous n’avons pas pu créer un environnement d’application conteneur.",
  "loc.messages.CreateContainerAppFailed": "Désolé… Nous n’avons pas pu créer l’application conteneur Azure via la commande « az containerapp create ».",
  "loc.messages.CreateContainerAppFromYamlFailed": "Désolé… Nous n’avons pas pu créer l’application conteneur Azure à partir du fichier de configuration YAML via la commande « az containerapp create ».",
  "loc.messages.CreateImageWithBuilderFailed": "Nous n’avons pas pu créer une image d’application exécutable à l’aide d’Oryx++Builder.",
  "loc.messages.CreateImageWithBuilderMessage": "Aucun Dockerfile n’a été fourni ou trouvé pour la source de l’application ; tentative de création d’une image d’application exécutable à l’aide du générateur Oryx++.",
  "loc.messages.CreateImageWithDockerfileFailed": "Nous n’avons pas pu créer une image d’application exécutable à l’aide du Dockerfile fourni ou découvert.",
  "loc.messages.CreateImageWithDockerfileMessage": "Un Dockerfile a été fourni ou trouvé pour la source de l’application. Tentative de génération de l’image à partir de Dockerfile '%s'",
  "loc.messages.CreateResourceGroupFailed": "Désolé… Nous n’avons pas pu créer le groupe de ressources « %s ».",
  "loc.messages.DefaultContainerAppNameMessage": "Aucun argument containerAppName n’a été fourni. Définition du nom de l’application conteneur à créer/mettre à jour pour '%s'.",
  "loc.messages.DefaultContainerAppEnvironmentMessage": "Aucun argument containerAppEnvironment n’a été fourni. Définition de l’application conteneur à créer/mettre à jour pour « %s ».",
  "loc.messages.DefaultImageToBuildMessage": "Aucun argument imageToBuild n’a été fourni; définition de l’image à générer pour '%s'.",
  "loc.messages.DefaultImageToDeployMessage": "Aucun argument imageToDeploy n’a été fourni. Définition de l’image à déployer sur '%s'",
  "loc.messages.DefaultIngressMessage": "Aucun argument d’entrée n’a été fourni, définissant la valeur d’entrée sur « %s ».",
  "loc.messages.DefaultResourceGroupMessage": "Aucun argument resourceGroup n’a été fourni ; définition du groupe de ressources pour le déploiement sur '%s'.",
  "loc.messages.DefaultRuntimeStackMessage": "Aucun argument runtimeStack n’a été fourni ; à l’aide de la pile d’exécution trouvée pour l’application '%s'.",
  "loc.messages.DefaultTargetPortMessage": "Aucun argument targetPort n’a été fourni. Utilisation du port cible '%s' pour l’application",
  "loc.messages.DetermineRuntimeStackFailed": "Désolé… Nous n’avons pas pu déterminer la pile d’exécution à partir de la source d’application « %s ».",
  "loc.messages.DisableContainerAppIngressFailed": "Désolé… Nous n’avons pas pu désactiver l’entrée pour l’application conteneur.",
  "loc.messages.DisabledIngressMessage": "L’entrée sera désactivée pour l’application conteneur.",
  "loc.messages.EnableContainerAppIngressFailed": "Désolé… Nous n’avons pas pu activer l’entrée pour l’application conteneur.",
  "loc.messages.ErrorCodeFormat": "Code d’erreur : [%s]",
  "loc.messages.ErrorMessageFormat": "Erreur : %s",
  "loc.messages.ExistingContainerAppEnvironmentMessage": "Découverte d’un environnement d’application conteneur existant, « %s », à utiliser avec l’application conteneur.",
  "loc.messages.FoundAppSourceDockerfileMessage": "Dockerfile existant trouvé dans la source d’application fournie dans le chemin d’accès '%s'; l’image sera générée à partir de ce Dockerfile.",
  "loc.messages.MissingAcrNameMessage": "L’argument acrName doit également être fourni si l’argument appSourcePath est fourni.",
  "loc.messages.MissingRequiredArgumentMessage": "L’un des arguments suivants doit être fourni : appSourcePath, imageToDeploy, yamlConfigPath",
  "loc.messages.PackCliInstallFailed": "Impossible d’installer l’interface CLI du pack.",
  "loc.messages.PushImageToAcrFailed": "Impossible d’envoyer (push) l’image '%s' à ACR.",
  "loc.messages.SetDefaultBuilderFailed": "Nous n’avons pas pu définir le générateur Oryx++ comme générateur par défaut.",
  "loc.messages.UpdateContainerAppFailed": "Désolé… Nous n’avons pas pu mettre à jour l’application conteneur Azure via la commande « az containerapp update ».",
  "loc.messages.UpdateContainerAppFromYamlFailed": "Désolé… Nous n’avons pas pu mettre à jour l’application conteneur Azure à partir du fichier de configuration YAML via la commande « az containerapp update ».",
  "loc.messages.UpdateContainerAppRegistryDetailsFailed": "Désolé… Nous n’avons pas pu mettre à jour les détails ACR de l’application conteneur Azure via la commande « az containerapp registry set »."
}