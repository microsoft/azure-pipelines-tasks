{
  "loc.friendlyName": "Extract files",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?LinkId=800269)",
  "loc.description": "Extract a variety of archive and compression files such as .7z, .rar, .tar.gz, and .zip",
  "loc.instanceNameFormat": "Extract files $(message)",
  "loc.input.label.archiveFilePatterns": "Archive file patterns",
  "loc.input.help.archiveFilePatterns": "File paths or patterns of the archive files to extract.  Supports multiple lines of minimatch patterns.  [More Information](https://go.microsoft.com/fwlink/?LinkId=800269)",
  "loc.input.label.destinationFolder": "Destination folder",
  "loc.input.help.destinationFolder": "Destination folder into which archive files should be extracted.  Use [variables](https://go.microsoft.com/fwlink/?LinkID=550988) if files are not in the repo. Example: $(agent.builddirectory)",
  "loc.input.label.cleanDestinationFolder": "Clean destination folder before extracting",
  "loc.input.help.cleanDestinationFolder": "Select this option to clean the destination directory before archive contents are extracted into it.",
  "loc.input.label.overwriteExistingFiles": "Overwrite existing files",
  "loc.input.help.overwriteExistingFiles": "Select this option to overwrite existing files in the destination directory.",
  "loc.input.label.pathToSevenZipTool": "Path to 7z utility",
  "loc.input.help.pathToSevenZipTool": "You can specify custom path to 7z utility. For example, \"C:\\7z\\7z.exe\" on Windows and \"/usr/local/bin/7z\" on MacOS/Ubuntu.",
  "loc.messages.ExtractDirFailedinFindFiles": "Specified archive: %s can not be extracted because it is a directory.",
  "loc.messages.ExtractNotFileFailed": "Specified archive: %s can not be extracted because it is not a file.",
  "loc.messages.ExtractNotAccessibleFile": "Specified archive: %s can not be extracted because it can not be accessed: %s",
  "loc.messages.SearchInDir": "Searching for: %s under directory: %s",
  "loc.messages.SearchNonExistDir": "Search failed because the specified search directory: %s does not exist.",
  "loc.messages.SearchNonDir": "Search failed because the specified search directory: %s is not a directory.",
  "loc.messages.NoSearchPatternPath": "No path specified for search pattern: %s defaulting to: %s",
  "loc.messages.ResolveRelativePath": "Relative file path: %s resolving to: %s",
  "loc.messages.UnzipExtractFile": "Extracting file: %s",
  "loc.messages.SevenZipExtractFile": "Extracting file: %s",
  "loc.messages.TarExtractFile": "Extracting file: %s",
  "loc.messages.ExtractFileFailedMsg": "Extraction failed for file: %s \ncode: %d \nstdout: %s \nstderr: %s \nerror: %s;",
  "loc.messages.ExtractNonExistFile": "Extraction failed for file: %s because it does not exist.",
  "loc.messages.ExtractDirFailed": "Extraction failed for file: %s because it is a directory.",
  "loc.messages.CreateTempDir": "Creating temp folder: %s to decompress: %s",
  "loc.messages.TempDir": "tempFolder = %s",
  "loc.messages.DecompressedTempTar": "Decompressed temporary tar from: %s to: %s",
  "loc.messages.RemoveTempDir": "Removing temp folder: %s",
  "loc.messages.ExtractFailedCannotCreate": "Extraction failed for file: %s because temporary location could not be created: %s",
  "loc.messages.NoFilesFound": "No archives were found using specified file patterns",
  "loc.messages.FoundFiles": "Found: %d files to extract:",
  "loc.messages.CleanDestDir": "Cleaning destination folder before extraction: %s",
  "loc.messages.CreateDestDir": "Creating destination folder: %s",
  "loc.messages.SucceedMsg": "Successfully extracted all files."
}