{
  "loc.friendlyName": "Copy files",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?LinkID=708389)",
  "loc.description": "Copy files from a source folder to a target folder using patterns matching file paths (not folder paths)",
  "loc.instanceNameFormat": "Copy Files to: $(TargetFolder)",
  "loc.releaseNotes": "Match pattern consistency.",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.SourceFolder": "Source Folder",
  "loc.input.help.SourceFolder": "The source folder that the copy pattern(s) will be run from.  Empty is the root of the repo.  Use [variables](https://go.microsoft.com/fwlink/?LinkID=550988) if files are not in the repo. Example: $(agent.builddirectory)",
  "loc.input.label.Contents": "Contents",
  "loc.input.help.Contents": "File paths to include as part of the copy. Supports multiple lines of match patterns. [More Information](https://go.microsoft.com/fwlink/?LinkID=708389)",
  "loc.input.label.TargetFolder": "Target Folder",
  "loc.input.help.TargetFolder": "Target folder or UNC path files will copy to. You can use [variables](http://go.microsoft.com/fwlink/?LinkID=550988). Example: $(build.artifactstagingdirectory)",
  "loc.input.label.CleanTargetFolder": "Clean Target Folder",
  "loc.input.help.CleanTargetFolder": "Delete all existing files in target folder before copy",
  "loc.input.label.OverWrite": "Overwrite",
  "loc.input.help.OverWrite": "Replace existing file in target folder",
  "loc.input.label.flattenFolders": "Flatten Folders",
  "loc.input.help.flattenFolders": "Flatten the folder structure and copy all files into the specified target folder.",
  "loc.input.label.preserveTimestamp": "Preserve Target Timestamp",
  "loc.input.help.preserveTimestamp": "Using the original source file, preserve the target file timestamp.",
  "loc.input.label.retryCount": "Retry count to copy the file",
  "loc.input.help.retryCount": "Specify the retry count to copy the file. It might help to resolve intermittent issues e.g. with UNC target paths on a remote host.",
  "loc.input.label.delayBetweenRetries": "Delay between two retries.",
  "loc.input.help.delayBetweenRetries": "Specify the delay between two retries. It might help to be more resilient to intermittent issues e.g. with UNC target paths on a remote host.",
  "loc.input.label.ignoreMakeDirErrors": "Ignore errors during creation of target folder.",
  "loc.input.help.ignoreMakeDirErrors": "Ignore errors which happen during creation of target folder. This could be useful to avoid issues with parallel execution of task by several agents with one target folder.",
  "loc.messages.FoundNFiles": "found %d files",
  "loc.messages.CleaningTargetFolder": "Cleaning target folder: %s",
  "loc.messages.FileAlreadyExistAt": "File %s already exist at %s",
  "loc.messages.CopyingTo": "Copying %s to %s",
  "loc.messages.TargetIsDir": "Unable to copy file %s to %s. The target path already exists as a directory."
}