{
  "loc.friendlyName": "Установщик средств Node.js",
  "loc.helpMarkDown": "[См. дополнительные сведения об этой задаче](https://docs.microsoft.com/azure/devops/pipelines/tasks/tool/node-js) или [документацию по Node](https://nodejs.org/docs/latest/api/documentation.html)",
  "loc.description": "Находит либо скачивает и кэширует указанную спецификацию версии Node.js и добавляет ее в PATH",
  "loc.instanceNameFormat": "Использовать Node $(versionSpec)",
  "loc.group.displayName.advanced": "Дополнительно",
  "loc.input.label.versionSource": "Источник версии",
  "loc.input.label.versionSpec": "Спецификатор версии",
  "loc.input.help.versionSpec": "Спецификатор для версии, которую необходимо получить. Примеры: 6.x, 4.x, 6.10.0, >=6.10.0",
  "loc.input.label.versionFilePath": "Путь к NVMRC-файлу",
  "loc.input.help.versionFilePath": "Путь к файлу для получения версии.  Пример: src/.nvmrc",
  "loc.input.label.checkLatest": "Проверить наличие последней версии",
  "loc.input.help.checkLatest": "Всегда проверяет наличие в Интернете актуальной версии, соответствующей спецификатору версии. Обычно задано значение \"false\", кроме случаев, когда имеется определенный сценарий всегда получать актуальную версию. Когда практическая необходимость в этом отсутствует, особенно в случае размещенного пула сборок, может взиматься дополнительная плата за загрузку.",
  "loc.input.label.force32bit": "Использовать 32-разрядную версию на 64-разрядных агентах",
  "loc.input.help.force32bit": "Устанавливает 32-разрядную версию Node независимо от архитектуры ЦП агента.",
  "loc.input.label.nodejsMirror": "Настроить источник для двоичных файлов Node.js",
  "loc.input.help.nodejsMirror": "Используйте альтернативное зеркало установки при использовании двоичных файлов Node.js в качестве источников.",
  "loc.input.label.retryCountOnDownloadFails": "Установите число повторных попыток при сбое скачивания узлов",
  "loc.input.help.retryCountOnDownloadFails": "Используйте этот параметр, если задаче не удалось скачать двоичные файлы узла с зеркала. Задача будет повторять попытку скачать двоичных файлов в течение указанного времени.",
  "loc.input.label.delayBetweenRetries": "Установите задержку между повторными попытками",
  "loc.input.help.delayBetweenRetries": "Используйте этот параметр, чтобы установить задержку между повторными попытками в миллисекундах. Значение по умолчанию — 1000 миллисекунд.",
  "loc.messages.ToolFailed": "Сбой установки инструмента: %s",
  "loc.messages.TryRosetta": "Не удалось найти Node для платформы %s и архитектуры %s. Попытка установки с помощью Rosetta2",
  "loc.messages.NodeVersionNotFound": "Не удалось найти версию Node %s для платформы %s и архитектуры %s.",
  "loc.messages.UnexpectedOS": "Непредвиденная ОС %s",
  "loc.messages.AgentTempDirNotSet": "Переменная Agent.TempDirectory должна быть задана."
}