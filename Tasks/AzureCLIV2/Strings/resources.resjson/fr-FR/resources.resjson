{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[Learn more about this task](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) or [see the Azure CLI documentation](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/Powershell Core/Batch script when running on Windows agent.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "What's new in Version 2.0:\n- Support for PowerShell and PowerShell Core script. \n- PowerShell Core works with cross-platform agents (Linux, macOS, or Windows), make sure the agent has PowerShell version 6 or more. \n- Powershell script works with only Windows agent, make sure the agent has PowerShell version 5 or below.",
  "loc.group.displayName.advanced": "Avancé",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager connection",
  "loc.input.help.connectedServiceNameARM": "Select an Azure Resource Manager service connection for the deployment",
  "loc.input.label.scriptType": "Type de script",
  "loc.input.help.scriptType": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
  "loc.input.label.scriptLocation": "Emplacement du script",
  "loc.input.help.scriptLocation": "Path to script: File path or Inline script",
  "loc.input.label.scriptPath": "Chemin d'accès du script",
  "loc.input.help.scriptPath": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory",
  "loc.input.label.inlineScript": "Script Inline",
  "loc.input.help.inlineScript": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
  "loc.input.label.scriptArguments": "Arguments de script",
  "loc.input.help.scriptArguments": "Arguments passés au script",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script.",
  "loc.input.label.addSpnToEnvironment": "Accéder aux détails du principal de service dans le script",
  "loc.input.help.addSpnToEnvironment": "Adds service principal id, service principal key and tenant id of the Azure endpoint you chose to the script's execution environment. You can use variables: `servicePrincipalId`, `servicePrincipalKey` and `tenantId` in your script.\n\nThis is honored only when the Azure endpoint has Service Principal authentication scheme.\n\nSyntax to access environment variables based on script type.\n\nPowershell script: $env:servicePrincipalId\n\nBatch script: %servicePrincipalId% \n\nShell script: $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "Utiliser la configuration Azure CLI globale",
  "loc.input.help.useGlobalConfig": "Si la valeur est false, cette tâche utilise son propre [répertoire de configuration Azure CLI](https://docs.microsoft.com/fr-fr/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file) distinct. Permet d'exécuter des tâches Azure CLI dans des mises en production *parallèles*",
  "loc.input.label.cwd": "Répertoire de travail",
  "loc.input.help.cwd": "Répertoire de travail actif dans lequel le script est exécuté. Une valeur vide représente la racine du dépôt (build) ou des artefacts (mise en production), à savoir $(System.DefaultWorkingDirectory)",
  "loc.input.label.failOnStandardError": "Échec sur une erreur standard",
  "loc.input.help.failOnStandardError": "Si la valeur est true, cette tâche se solde par un échec quand des erreurs sont écrites dans le flux de données StandardError. Décochez la case pour ignorer les erreurs standard et utiliser les codes de sortie afin de déterminer l'état",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "Si cette valeur est false, la ligne 'if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }' est ajoutée à la fin de votre script. Cela entraîne la propagation du dernier code de sortie d'une commande externe en tant que code de sortie de PowerShell. Sinon, la ligne n'est pas ajoutée à la fin de votre script.",
  "loc.messages.ScriptReturnCode": "Arrêt du script. Code de retour : %d",
  "loc.messages.ScriptFailed": "Échec du script. Erreur : %s",
  "loc.messages.ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
  "loc.messages.ScriptFailedWithExitCode": "Script failed with exit code: %d",
  "loc.messages.UnsupportedEndpointScheme": "Modèle d'autorisation de connexion de service non pris en charge : principal du service pour AzureRM",
  "loc.messages.AzureSDKNotFound": "Azure CLI 2.x n'est pas installé sur cette machine.",
  "loc.messages.FailedToLogout": "L'erreur suivante s'est produite durant la déconnexion : %s",
  "loc.messages.LoginFailed": "Échec de la connexion Azure",
  "loc.messages.MSILoginFailed": "Échec de la connexion Azure via Managed Service Identity",
  "loc.messages.AuthSchemeNotSupported": "Le schéma d'authentification %s n'est pas pris en charge",
  "loc.messages.ErrorInSettingUpSubscription": "Erreur durant la configuration de l'abonnement",
  "loc.messages.SettingAzureConfigDir": "Affectation de %s à la variable d'environnement AZURE_CONFIG_DIR",
  "loc.messages.SettingAzureCloud": "Affectation de %s au cloud actif",
  "loc.messages.JS_InvalidFilePath": "Script file could not be found at specified script location: '%s'. Please verify the script exists at the specified path. If you want to use inline script, specify input `Script Location` as `inlineScript`.",
  "loc.messages.JS_InvalidErrorActionPreference": "ErrorActionPreference '%s' non valide. La valeur doit correspondre à 'Stop', 'Continue' ou 'SilentlyContinue'",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "Pour une version d'agent < 2.115.0, seule la configuration Azure CLI globale peut être utilisée",
  "loc.messages.UnacceptedScriptLocationValue": "%s is not a valid value for task input 'Script Location' (scriptLocation in YAML). Value can either be'inlineScript' or 'scriptPath'"
}