{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[En savoir plus sur cette tâche](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) ou [consulter la documentation d'Azure CLI](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Exécutez des commandes Azure CLI sur un abonnement Azure via un script PowerShell Core/d'interpréteur de commandes sur un agent Linux, ou un script PowerShell/PowerShell Core/de commandes par lots sur un agent Windows.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "Nouveautés de la version 2.0 :\n- Prise en charge de script PowerShell et PowerShell Core. \n- PowerShell Core fonctionne avec les agents multiplateformes (Linux, macOS ou Windows). Vérifiez que l'agent dispose de PowerShell version 6 ou ultérieure. \n- Un script PowerShell fonctionne uniquement avec un agent Windows. Vérifiez que l'agent dispose de PowerShell version 5 ou antérieure.",
  "loc.group.displayName.advanced": "Avancé",
  "loc.input.label.connectedServiceNameARM": "Connexion Azure Resource Manager",
  "loc.input.help.connectedServiceNameARM": "Sélectionnez une connexion de service Azure Resource Manager pour le déploiement",
  "loc.input.label.scriptType": "Type de script",
  "loc.input.help.scriptType": "Type de script : PowerShell/PowerShell Core/commandes par lot/interpréteur de commandes. Sélectionnez un script d'interpréteur de commandes/PowerShell Core pour un agent Linux ou un script de commandes par lot/PowerShell/PowerShell Core pour un agent Windows. Un script PowerShell Core peut s'exécuter sur des agents multiplateformes (Linux, macOS ou Windows).",
  "loc.input.label.scriptLocation": "Emplacement du script",
  "loc.input.help.scriptLocation": "Chemin du script : chemin de fichier ou script inline",
  "loc.input.label.scriptPath": "Chemin d'accès du script",
  "loc.input.help.scriptPath": "Chemin complet du script (.ps1, .bat ou .cmd pour un agent Windows, et .ps1 ou .sh pour un agent Linux) ou chemin relatif au répertoire de travail par défaut",
  "loc.input.label.inlineScript": "Script Inline",
  "loc.input.help.inlineScript": "Vous pouvez écrire vos scripts inline ici. Pour les agents Windows, utilisez un script PowerShell, PowerShell Core ou de commandes par lot. Pour les agents Linux, utilisez un script PowerShell Core ou d'interpréteur de commandes. Pour les fichiers de commandes, utilisez le préfixe \"call\" avant chaque commande Azure. Vous pouvez également passer des variables prédéfinies et personnalisées à ce script à l'aide d'arguments \n\n exemple pour PowerShell/PowerShell Core/l'interpréteur de commandes : \naz --version \naz account show \n\n exemple pour les commandes par lot :\ncall az --version \ncall az account show",
  "loc.input.label.scriptArguments": "Arguments de script",
  "loc.input.help.scriptArguments": "Arguments passés au script",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Ajoute la ligne '$ErrorActionPreference = 'VALUE'' au début de votre script PowerShell/PowerShell Core.",
  "loc.input.label.addSpnToEnvironment": "Accéder aux détails du principal de service dans le script",
  "loc.input.help.addSpnToEnvironment": "Ajoute l'ID de principal de service, la clé de principal de service et l'ID de locataire du point de terminaison Azure choisi à l'environnement d'exécution du script. Vous pouvez utiliser les variables 'servicePrincipalId', 'servicePrincipalKey' et 'tenantId' dans votre script.\n\nCeci est valable uniquement quand le point de terminaison Azure a un schéma d'authentification du principal de service.\n\nSyntaxe permettant d'accéder aux variables d'environnement en fonction du type de script.\n\nScript PowerShell : $env:servicePrincipalId\n\nScript de commandes par lot : %servicePrincipalId% \n\nScript d'interpréteur de commandes : $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "Utiliser la configuration Azure CLI globale",
  "loc.input.help.useGlobalConfig": "Si la valeur est false, cette tâche utilise son propre [répertoire de configuration Azure CLI](https://docs.microsoft.com/fr-fr/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file) distinct. Permet d'exécuter des tâches Azure CLI dans des mises en production *parallèles*",
  "loc.input.label.cwd": "Répertoire de travail",
  "loc.input.help.cwd": "Répertoire de travail actif dans lequel le script est exécuté. Une valeur vide représente la racine du dépôt (build) ou des artefacts (mise en production), à savoir $(System.DefaultWorkingDirectory)",
  "loc.input.label.failOnStandardError": "Échec sur une erreur standard",
  "loc.input.help.failOnStandardError": "Si la valeur est true, cette tâche se solde par un échec quand des erreurs sont écrites dans le flux de données StandardError. Décochez la case pour ignorer les erreurs standard et utiliser les codes de sortie afin de déterminer l'état",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "Ignorer $LASTEXITCODE",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "Si cette valeur est false, la ligne 'if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }' est ajoutée à la fin de votre script. Cela entraîne la propagation du dernier code de sortie d'une commande externe en tant que code de sortie de PowerShell. Sinon, la ligne n'est pas ajoutée à la fin de votre script.",
  "loc.messages.ScriptReturnCode": "Arrêt du script. Code de retour : %d",
  "loc.messages.ScriptFailed": "Échec du script. Erreur : %s",
  "loc.messages.ScriptFailedStdErr": "Le script a une sortie vers stderr. Échec, car failOnStdErr a la valeur true.",
  "loc.messages.ScriptFailedWithExitCode": "Échec du script. Code de sortie : %d",
  "loc.messages.UnsupportedEndpointScheme": "Modèle d'autorisation de connexion de service non pris en charge : principal du service pour AzureRM",
  "loc.messages.AzureSDKNotFound": "Azure CLI 2.x n'est pas installé sur cette machine.",
  "loc.messages.FailedToLogout": "L'erreur suivante s'est produite durant la déconnexion : %s",
  "loc.messages.LoginFailed": "Échec de la connexion Azure",
  "loc.messages.MSILoginFailed": "Échec de la connexion Azure via Managed Service Identity",
  "loc.messages.AuthSchemeNotSupported": "Le schéma d'authentification %s n'est pas pris en charge",
  "loc.messages.ErrorInSettingUpSubscription": "Erreur durant la configuration de l'abonnement",
  "loc.messages.SettingAzureConfigDir": "Affectation de %s à la variable d'environnement AZURE_CONFIG_DIR",
  "loc.messages.SettingAzureCloud": "Affectation de %s au cloud actif",
  "loc.messages.JS_InvalidFilePath": "Le fichier de script est introuvable à l'emplacement de script spécifié : '%s'. Vérifiez que le script existe dans le chemin spécifié. Si vous souhaitez utiliser un script inline, indiquez 'inlineScript' pour 'Script Location'.",
  "loc.messages.JS_InvalidErrorActionPreference": "ErrorActionPreference '%s' non valide. La valeur doit correspondre à 'Stop', 'Continue' ou 'SilentlyContinue'",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "Pour une version d'agent < 2.115.0, seule la configuration Azure CLI globale peut être utilisée",
  "loc.messages.UnacceptedScriptLocationValue": "%s n'est pas une valeur valide pour l'entrée de tâche 'Script Location' (scriptLocation en YAML). La valeur peut être 'inlineScript' ou 'scriptPath'"
}