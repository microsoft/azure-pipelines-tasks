{
    "id": "8BA74703-E94F-4A35-814E-FC21F44578A2",
    "name": "AzurePolicyCheckGate",
    "friendlyName": "Check Azure Policy compliance",
    "description": "Security and compliance assessment for Azure Policy",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/deploy/azure-policy-check-gate",
    "helpMarkDown": "",
    "category": "Deploy",
    "visibility": [
        "Release"
    ],
    "runsOn": [
        "ServerGate"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 221,
        "Patch": 1
    },
    "groups": [
        {
            "name": "advancedOptions",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "ConnectedServiceName",
            "aliases": [
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "required": true,
            "helpMarkDown": "Select the Azure Resource Manager subscription to enforce the policies."
        },
        {
            "name": "ResourceGroupName",
            "type": "pickList",
            "label": "Resource group",
            "helpMarkDown": "Provide name of a resource group.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "Resources",
            "type": "pickList",
            "label": "Resource name",
            "helpMarkDown": "Select name of Azure resources for which you want to check the policy compliance.",
            "defaultValue": "",
            "properties": {
                "MultiSelectFlatList": "True",
                "DisableManageLink": "True",
                "EditableOptions": "False"
            }
        },
        {
            "name": "RetryDuration",
            "type": "string",
            "label": "Retry duration",
            "defaultValue": "00:02:00",
            "required": false,
            "helpMarkDown": "Defines period which task will wait until it retry to call Azure API in case that previous response code was \"Accepted\"â€‹. Minimal period is 2 minutes.",
            "groupName": "advancedOptions"
        }
    ],
    "dataSourceBindings": [
        {
            "target": "ResourceGroupName",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureResourceGroups"
        },
        {
            "target": "Resources",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMResourcesInRG",
            "parameters": {
                "ResourceGroupName": "$(ResourceGroupName)"
            },
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        }
    ],
    "instanceNameFormat": "Check Policy Compliance",
    "execution": {
        "HttpRequestChain": {
            "Execute": [
                {
                    "RequestInputs": {
                        "EndpointId": "$(connectedServiceName)",
                        "EndpointUrl": "{{#if ResourceGroupName}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation?api-version=2018-07-01-preview{{else}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation?api-version=2018-07-01-preview{{/if}}",
                        "Method": "POST"
                    },
                    "ExecutionOptions": {
                        "OutputVariables": {
                            "locationUrl": "response['headers']['location']"
                        },
                        "SkipSectionExpression": "isUrl(variables['locationUrl'])"
                    }
                },
                {
                    "RequestInputs": {
                        "EndpointId": "$(connectedServiceName)",
                        "EndpointUrl": "$(locationUrl)",
                        "Method": "GET",
                        "Expression": "and(eq(response['statuscode'], 'OK'), eq(response['content']['status'], 'Succeeded'))"
                    },
                    "ExecutionOptions": {
                        "ContinuePollingExpression": "eq(response['statuscode'], 'Accepted')",
                        "DurationBetweenRetries": "$(RetryDuration)"
                    }
                },
                {
                    "RequestInputs": {
                        "EndpointId": "$(connectedServiceName)",
                        "EndpointUrl": "{{#if ResourceGroupName}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.PolicyInsights/policyStates/latest/summarize?api-version=2018-04-04{{else}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/providers/Microsoft.PolicyInsights/policyStates/latest/summarize?api-version=2018-04-04{{/if}}",
                        "Method": "POST"
                    }
                },
                {
                    "RequestInputs": {
                        "EndpointId": "$(connectedServiceName)",
                        "EndpointUrl": "{{#if ResourceGroupName}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/resourceGroups/$(ResourceGroupName)/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2018-04-04&$filter=IsCompliant eq false{{else}}$(endpoint.url)subscriptions/$(endpoint.subscriptionId)/providers/Microsoft.PolicyInsights/policyStates/latest/queryResults?api-version=2018-04-04&$filter=IsCompliant eq false{{/if}}",
                        "Method": "POST",
                        "Expression": "or(and(eq(isNullOrEmpty(taskInputs['resources']), true), eq(count(jsonpath('value[*].resourceId')), 0)), and(eq(isNullOrEmpty(taskInputs['resources']), false), eq(count(intersect(split(taskInputs['resources'], ','), jsonpath('value[*].resourceId'))) ,0)))"
                    }
                }
            ]
        }
    }
}