{
  "loc.friendlyName": "Package and deploy Helm charts",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=851275) or [see the Helm documentation](https://helm.sh/docs/)",
  "loc.description": "Deploy, configure, update a Kubernetes cluster in Azure Container Service by running helm commands",
  "loc.instanceNameFormat": "helm $(command)",
  "loc.group.displayName.cluster": "Kubernetes Cluster",
  "loc.group.displayName.commands": "Commands",
  "loc.group.displayName.azureContainerRegistry": "Azure Container Registry",
  "loc.group.displayName.tls": "TLS",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.connectionType": "Connection Type",
  "loc.input.help.connectionType": "Select 'Azure Resource Manager' to connect to an Azure Kubernetes Service by using Azure Service Connection. Select 'Kubernetes Service Connection' to connect to any Kubernetes cluster by using kubeconfig or Service Account",
  "loc.input.label.azureSubscriptionEndpoint": "Azure subscription",
  "loc.input.help.azureSubscriptionEndpoint": "Select an Azure subscription, which has your Azure Container Registry.",
  "loc.input.label.azureResourceGroup": "Resource group",
  "loc.input.help.azureResourceGroup": "Select an Azure Resource Group.",
  "loc.input.label.kubernetesCluster": "Kubernetes cluster",
  "loc.input.help.kubernetesCluster": "Select an Azure Managed Cluster.",
  "loc.input.label.useClusterAdmin": "Use cluster admin credentials",
  "loc.input.help.useClusterAdmin": "Use cluster administrator credentials instead of default cluster user credentials.",
  "loc.input.label.kubernetesServiceEndpoint": "Kubernetes Service Connection",
  "loc.input.help.kubernetesServiceEndpoint": "Select a Kubernetes service connection.",
  "loc.input.label.namespace": "Namespace",
  "loc.input.help.namespace": "Specify K8 namespace to use. Use Tiller namespace can be specified in the advanced section of the task or by passing the --tiller-namespace option as argument.",
  "loc.input.label.azureSubscriptionEndpointForACR": "Azure subscription for Container Registry",
  "loc.input.help.azureSubscriptionEndpointForACR": "Select an Azure subscription, which has your Azure Container Registry.",
  "loc.input.label.azureResourceGroupForACR": "Resource group",
  "loc.input.help.azureResourceGroupForACR": "Select an Azure Resource Group, which has your Container Registry.",
  "loc.input.label.azureContainerRegistry": "Azure Container Registry",
  "loc.input.help.azureContainerRegistry": "Select an Azure Container Registry which will be used for pushing helm charts.",
  "loc.input.label.command": "Command",
  "loc.input.help.command": "Select a helm command.",
  "loc.input.label.chartType": "Chart Type",
  "loc.input.help.chartType": "Select how you want to enter chart info. You can either provide name of the chart or folder/file path to the chart.",
  "loc.input.label.chartName": "Chart Name",
  "loc.input.help.chartName": "Chart reference to install, this can be a url or a chart name. For example, if chart name is 'stable/mysql', the task will run 'helm install stable/mysql'.",
  "loc.input.label.chartPath": "Chart Path",
  "loc.input.help.chartPath": "Path to the chart to install. This can be a path to a packaged chart or a path to an unpacked chart directory. For example, if './redis' is specified the task will run 'helm install ./redis'.",
  "loc.input.label.version": "Version",
  "loc.input.help.version": "Specify the exact chart version to install. If this is not specified, the latest version is installed. Set the version on the chart to this semver version​",
  "loc.input.label.releaseName": "Release Name",
  "loc.input.help.releaseName": "Release name. If unspecified, it will autogenerate one for you.",
  "loc.input.label.overrideValues": "Set Values",
  "loc.input.help.overrideValues": "Set values on the command line (can specify multiple or separate values with commas or newlines: key1=val1,key2=val2 or <br>key1=val1<br>key2=val2<br>). The task will construct the helm command by using these set values. For example, helm install --set key1=val1 ./redis.",
  "loc.input.label.valueFile": "Value File",
  "loc.input.help.valueFile": "Specify values in a YAML file or a URL. For example, specifying myvalues.yaml will result in 'helm install --values=myvals.yaml'.",
  "loc.input.label.destination": "Destination",
  "loc.input.help.destination": "Specify values in a YAML file or a URL.",
  "loc.input.label.canaryimage": "Use canary image version.",
  "loc.input.help.canaryimage": "Use the canary Tiller image, the latest pre-release version of Tiller.",
  "loc.input.label.upgradetiller": "Upgrade Tiller",
  "loc.input.help.upgradetiller": "Upgrade if Tiller is already installed.",
  "loc.input.label.updatedependency": "Update Dependency",
  "loc.input.help.updatedependency": "Run helm dependency update before installing the chart. Update dependencies from 'requirements.yaml' to dir 'charts/' before packaging",
  "loc.input.label.save": "Save",
  "loc.input.help.save": "Save packaged chart to local chart repository (default true)​",
  "loc.input.label.install": "Install if release not present.",
  "loc.input.help.install": "If a release by this name doesn't already exist, run an install​.",
  "loc.input.label.recreate": "Recreate Pods.",
  "loc.input.help.recreate": "Performs pods restart for the resource if applicable.",
  "loc.input.label.resetValues": "Reset Values.",
  "loc.input.help.resetValues": "Reset the values to the ones built into the chart.",
  "loc.input.label.force": "Force",
  "loc.input.help.force": "Force resource update through delete/recreate if needed​",
  "loc.input.label.waitForExecution": "Wait",
  "loc.input.help.waitForExecution": "Block till command execution completes.",
  "loc.input.label.arguments": "Arguments",
  "loc.input.help.arguments": "Helm command options.",
  "loc.input.label.enableTls": "Enable TLS",
  "loc.input.help.enableTls": "Enables using SSL between Helm and Tiller.",
  "loc.input.label.caCert": "CA certificate",
  "loc.input.help.caCert": "CA cert used to issue certificate for tiller and helm client.",
  "loc.input.label.certificate": "Certificate",
  "loc.input.help.certificate": "Specify Tiller certificate or Helm client certificate",
  "loc.input.label.privatekey": "Key",
  "loc.input.help.privatekey": "Specify Tiller Key or Helm client key",
  "loc.input.label.tillernamespace": "Tiller namespace",
  "loc.input.help.tillernamespace": "Specify K8 namespace of tiller.",
  "loc.input.label.failOnStderr": "Fail on Standard Error",
  "loc.input.help.failOnStderr": "If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream. Otherwise the task will rely on the exit code to determine failure.",
  "loc.input.label.publishPipelineMetadata": "Publish pipeline metadata",
  "loc.input.help.publishPipelineMetadata": "If this is true, the task will collect and publish deployment metadata",
  "loc.input.label.chartNameForACR": "Chart Name For Azure Container Registry",
  "loc.input.help.chartNameForACR": "Chart name with which the chart will be stored in Azure Container Registry.",
  "loc.input.label.chartPathForACR": "Chart Path for Azure Container Registry",
  "loc.input.help.chartPathForACR": "Path to the chart directory.",
  "loc.messages.CantDownloadAccessProfile": "Cannot download access profile/kube config file for the cluster %s. Reason %s.",
  "loc.messages.KubeConfigFilePath": "Kubeconfig file path: %s",
  "loc.messages.KubernetesClusterInfo": "Kubernetes cluster Id : %s, kubernetes server version %s, kuberenettes provision state %s",
  "loc.messages.KubernetesClusterResourceGroup": "Kubernetes cluster %s, resource group %s.",
  "loc.messages.ClusterNotProvisioned": "Observed that the cluster %s is in %s state.",
  "loc.messages.ClusterNotFound": "%s cluster does not exists",
  "loc.messages.FailedToListClusters": "Failed to list managed clusters in the subscription. %s",
  "loc.messages.RetryingRequest": "Retrying request after %s seconds.",
  "loc.messages.PatternNotFoundInFilePath": "Pattern not found in file path %s.",
  "loc.messages.CantResolvePatternInPath": "Can not resolve pattern in file path %s.",
  "loc.messages.PatternFoundInPath": "Pattern found in file path %s.",
  "loc.messages.CouldNotFetchAccessTokenforAzureStatusCode": "Could not fetch access token for Azure. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
  "loc.messages.CouldNotFetchAccessTokenforMSIStatusCode": "Could not fetch access token for Managed Service Principal. Status code: %s, status message: %s",
  "loc.messages.SkipDeleteSecureFiles": "TLS not enabled in the Task. Skipping delete of certificates.",
  "loc.messages.SkipDownloadSecureFiles": "TLS not enabled in the Task. Skipping download of certificates.",
  "loc.messages.FileNotFound": "File not found at %s",
  "loc.messages.KubernetesServiceConnectionNotFound": "Kubernetes service connection details not found.",
  "loc.messages.ExpiredServicePrincipal": "Could not fetch access token for Azure. Verify if the Service Principal used is valid and not expired.",
  "loc.messages.SaveSupportedInHelmsV3Only": "Save chart to Azure Container Registry is only supported in Helms V3.",
  "loc.messages.OutputVariableDataSizeExceeded": "Output variable not set as Helm command output exceeded the maximum supported length. Output length: %s, Maximum supported length: %s"
}