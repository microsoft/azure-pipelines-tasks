{
  "loc.friendlyName": "Docker",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=848006)",
  "loc.description": "Build, tag, push, or run Docker images, or run a Docker command",
  "loc.instanceNameFormat": "$(command)",
  "loc.releaseNotes": "Simplified the task by:<br/>&nbsp;- Providing an option to simply select or type a command.<br/>&nbsp;- Retaining the useful input fields and providing an option to pass the rest as an argument to the command.",
  "loc.group.displayName.containerRegistry": "Container Registry",
  "loc.group.displayName.commands": "Commands",
  "loc.group.displayName.advanced": "Advanced Options",
  "loc.input.label.containerregistrytype": "Container registry type",
  "loc.input.help.containerregistrytype": "Select 'Azure Container Registry' to connect to it by using an Azure Service Connection. Select 'Container registry' to connect to Docker Hub or any other private container registry.",
  "loc.input.label.addBaseImageData": "Add base image metadata to image(s)",
  "loc.input.help.addBaseImageData": "By default base image data like base image name and digest are added which helps with traceability. You can opt out of this default behavior by using this input.",
  "loc.input.label.dockerRegistryEndpoint": "Docker registry service connection",
  "loc.input.help.dockerRegistryEndpoint": "Select a Docker registry service connection. Required for commands that need to authenticate with a registry.",
  "loc.input.label.azureSubscriptionEndpoint": "Azure subscription",
  "loc.input.help.azureSubscriptionEndpoint": "Select an Azure subscription",
  "loc.input.label.azureContainerRegistry": "Azure container registry",
  "loc.input.help.azureContainerRegistry": "Select an Azure Container Registry in the selected Azure Subscription. The container image will be built and pushed to this container registry.",
  "loc.input.label.command": "Command",
  "loc.input.help.command": "Select a Docker command.",
  "loc.input.label.dockerFile": "Dockerfile",
  "loc.input.help.dockerFile": "Path to the Dockerfile.",
  "loc.input.label.arguments": "Arguments",
  "loc.input.help.arguments": "Docker command options. In case of 'tag' command, you can specify additional tags for Docker image here.",
  "loc.input.label.pushMultipleImages": "Push multiple images",
  "loc.input.help.pushMultipleImages": "Push multiple images by using a text file that contains the names of the Docker images to push. Each image name is contained on its own line.<br>For example:<br>  Imagename1:tag1<br>  Imagename2:tag2<br>  Imagename3<br>In case only image name is provided,  all tags of the ImageName3 container image will be pushed.",
  "loc.input.label.tagMultipleImages": "Tag multiple images",
  "loc.input.help.tagMultipleImages": "Tag multiple images by using a text file that contains the names of the Docker images to tag. Each image name is contained on its own line.<br>For example:<br>  Imagename1:tag1<br>  Imagename2:tag2<br>  Imagename3<br>In case only image name is provided, that image will be tagged as 'latest'.",
  "loc.input.label.imageName": "Image name",
  "loc.input.help.imageName": "Name of the Docker image to build, push, or run.",
  "loc.input.label.imageNamesPath": "Image names path",
  "loc.input.help.imageNamesPath": "Path to a text file that contains the names of the Docker images to tag or push. Each image name is contained on its own line.",
  "loc.input.label.qualifyImageName": "Qualify image name",
  "loc.input.help.qualifyImageName": "Qualify the image name with the Docker registry service connection's hostname if not otherwise specified.",
  "loc.input.label.qualifySourceImageName": "Qualify source image name",
  "loc.input.help.qualifySourceImageName": "Qualify the source image name with the Docker registry service connection's hostname if not otherwise specified.",
  "loc.input.label.includeSourceTags": "Include source tags",
  "loc.input.help.includeSourceTags": "Include Git tags when building or pushing the Docker image.",
  "loc.input.label.includeLatestTag": "Include latest tag",
  "loc.input.help.includeLatestTag": "Include the 'latest' tag when building the Docker image.",
  "loc.input.label.addDefaultLabels": "Add default labels",
  "loc.input.help.addDefaultLabels": "Add CI/CD metadata like repository, commit, build and release information to the container image by using Docker labels.",
  "loc.input.label.useDefaultContext": "Use default build context",
  "loc.input.help.useDefaultContext": "Set the build context to the directory that contains the Dockerfile.",
  "loc.input.label.buildContext": "Build context",
  "loc.input.help.buildContext": "Path to the build context.",
  "loc.input.label.imageDigestFile": "Image digest file",
  "loc.input.help.imageDigestFile": "Path to a file that is created and populated with the full image repository digest of the Docker image that was pushed.",
  "loc.input.label.containerName": "Container name",
  "loc.input.help.containerName": "Name of the Docker container to run.",
  "loc.input.label.ports": "Ports",
  "loc.input.help.ports": "Ports in the Docker container to publish to the host. Specify each host-port:container-port binding on a new line.",
  "loc.input.label.volumes": "Volumes",
  "loc.input.help.volumes": "Volumes to mount from the host. Specify each host-dir:container-dir on a new line.",
  "loc.input.label.envVars": "Environment variables",
  "loc.input.help.envVars": "Environment variables for the Docker container. Specify each name=value pair on a new line.",
  "loc.input.label.workingDirectory": "Working directory",
  "loc.input.help.workingDirectory": "The working directory for the Docker container.",
  "loc.input.label.entrypointOverride": "Entry point override",
  "loc.input.help.entrypointOverride": "Override the default entry point for the Docker container.",
  "loc.input.label.containerCommand": "Container command",
  "loc.input.help.containerCommand": "The docker run command first creates a writeable container layer over the specified image, and then starts it by using the specified run command. For example, if the image contains a simple Python Flask web application you can specify 'python app.py' to launch the web application.",
  "loc.input.label.runInBackground": "Run in background",
  "loc.input.help.runInBackground": "Run the Docker container in the background.",
  "loc.input.label.restartPolicy": "Restart policy",
  "loc.input.help.restartPolicy": "Select a restart policy.",
  "loc.input.label.maxRestartRetries": "Maximum restart retries",
  "loc.input.help.maxRestartRetries": "The maximum number of restart retries the Docker daemon attempts.",
  "loc.input.label.dockerHostEndpoint": "Docker host service connection",
  "loc.input.help.dockerHostEndpoint": "Select a Docker host service connection. Defaults to the agent's host.",
  "loc.input.label.enforceDockerNamingConvention": "Force image name to follow Docker naming convention",
  "loc.input.help.enforceDockerNamingConvention": "If enabled Docker image name will be modified to follow Docker naming convention. Converts upper case character to lower case and removes spaces in image name.",
  "loc.input.label.memoryLimit": "Memory limit",
  "loc.input.help.memoryLimit": "The maximum amount of memory available to the container as a integer with optional suffixes like '2GB'.",
  "loc.messages.ConnectingToDockerHost": "DOCKER_HOST variable is set. Docker will try to connect to the Docker host: %s",
  "loc.messages.ContainerPatternFound": "Pattern found in Docker filepath parameter",
  "loc.messages.ContainerPatternNotFound": "No pattern found in Docker filepath parameter",
  "loc.messages.ContainerDockerFileNotFound": "No Dockerfile matching  %s  was found.",
  "loc.messages.DockerHostVariableWarning": "DOCKER_HOST variable is set. Please ensure that the Docker daemon is running on: %s",
  "loc.messages.NoImagesInImageNamesFile": "At least one image name is expected in file '%s'.",
  "loc.messages.CantWriteDataToFile": "Can not write data to the file %s. Error: %s",
  "loc.messages.NoDataWrittenOnFile": "No data was written into the file %s",
  "loc.messages.FileContentSynced": "Synced the file content to the disk. The content is %s.",
  "loc.messages.DockerRegistryNotFound": "Docker registry service connection not specified.",
  "loc.messages.OutputVariableDataSizeExceeded": "Output variable not set as Docker command output exceeded the maximum supported length. Output length: %s, Maximum supported length: %s",
  "loc.messages.WritingDockerConfigToTempFile": "Writing Docker config to temp file. File path: %s, Docker config: %s"
}