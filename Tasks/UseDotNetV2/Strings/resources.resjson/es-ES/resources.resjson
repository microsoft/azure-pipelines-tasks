{
  "loc.friendlyName": "Use .NET Core",
  "loc.helpMarkDown": "[Learn more about this task](https://aka.ms/AA4xgy0)",
  "loc.description": "Adquiere una versión específica del SDK de .NET Core de Internet o de la memoria caché local y la agrega a PATH. Use esta tarea para cambiar la versión de .NET Core que se usa en las tareas siguientes. También proporciona compatibilidad con el proxy.",
  "loc.instanceNameFormat": "Usar $(packageType) $(version) de .NET Core",
  "loc.releaseNotes": "<li>Support for installing multiple versions side by side.</li><li>Support for patterns in version to fetch latest in minor/major version.</li><li>Restrict Multi-level lookup</li><li>Installs NuGet and provides proxy support.</li><li>Installs sdk versions from `global.json` file(s)</li>",
  "loc.group.displayName.advanced": "Avanzado",
  "loc.input.label.packageType": "Paquete para instalar",
  "loc.input.help.packageType": "Seleccione si debe instalarse solo el entorno de ejecución o el SDK.",
  "loc.input.label.useGlobalJson": "Use global json",
  "loc.input.help.useGlobalJson": "Select this option to install all SDKs from global.json files. These files are searched from system.DefaultWorkingDirectory. You can change the search root path by setting working directory input.",
  "loc.input.label.workingDirectory": "Directorio de trabajo",
  "loc.input.help.workingDirectory": "Specify path from where global.json files should be searched when using `Use global json`. If empty, `system.DefaultWorkingDirectory` will be considered as the root path.",
  "loc.input.label.version": "Versión",
  "loc.input.help.version": "Specify version of .NET Core SDK or runtime to install.<br/>Versions can be given in the following formats<li>2.x   => Install latest in major version.</li><li>2.2.x => Install latest in major and minor version</li><li>2.2.104 => Install exact version</li><br/>Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.input.label.includePreviewVersions": "Incluir versiones preliminares",
  "loc.input.help.includePreviewVersions": "Seleccione si quiere que las versiones preliminares se incluyan en la búsqueda de las últimas versiones, por ejemplo, al buscar 2.2.x. Esta configuración se ignora si se especifica una versión exacta, como 3.0.100-preview3-010431",
  "loc.input.label.installationPath": "Ruta de acceso para instalar .Net Core",
  "loc.input.help.installationPath": "Especifique dónde debe instalarse el entorno de ejecución o el SDK de .Net Core. Las distintas rutas de acceso pueden tener el efecto siguiente en el comportamiento de .Net.<li>$(Agent.ToolsDirectory): con esta opción, la versión se almacena en la memoria caché del agente, ya que el directorio no se limpia entre canalizaciones. Todas las canalizaciones que se ejecutan en el agente tienen acceso a las versiones instaladas anteriormente con este.</li><li>$(Agent.TempDirectory): esta opción garantiza que una canalización no use ninguna versión de .Net Core almacenada en caché, ya que la carpeta se limpia después de cada canalización.</li><li>Cualquier otra ruta de acceso: puede configurar cualquier otra ruta de acceso siempre que el proceso del agente tenga acceso a la ruta. Esto cambiará el estado de la máquina y afectará a todos los procesos que se estén ejecutando en ella.<br/>Tenga en cuenta que también puede configurar la opción de búsqueda en varios niveles para establecer el sondeo del host de .Net a fin de obtener una versión adecuada.",
  "loc.input.label.performMultiLevelLookup": "Realizar búsqueda en varios niveles",
  "loc.input.help.performMultiLevelLookup": "Esta entrada solo es aplicable a los agentes basados en Windows. Configura el comportamiento del proceso de host de .Net para buscar un marco de trabajo compartido adecuado.<li>Sin seleccionar: el proceso de host solo busca las versiones presentes en la carpeta que se especifica en esta tarea.</li><li>Seleccionada: el host intentará buscar en ubicaciones globales predefinidas mediante la búsqueda en varios niveles.<br/>Las ubicaciones globales predeterminadas son: <br/><b>Para Windows:</b><br/>C:\\Program Files\\dotnet (procesos de 64 bits)<br/>C:\\Program Files (x86)\\dotnet (procesos de 32 bits)</li> Puede leer más al respecto [**AQUÍ**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md).<br/>",
  "loc.messages.ToolFailed": "No se pudo instalar la herramienta: %s",
  "loc.messages.ImplicitVersionNotSupported": "La versión debe ser válida y explícita: %s",
  "loc.messages.getMachinePlatformFailed": "Error al obtener los detalles de la plataforma de máquina. Error: %s.",
  "loc.messages.getDownloadUrlsFailed": "No se pudieron obtener direcciones URL de descarga. Error: %s.",
  "loc.messages.UsingCachedTool": "Existe una copia en caché de .NET Core. No es necesario instalarlo desde cero. Ubicación de la herramienta en caché: %s.",
  "loc.messages.CheckingToolCache": "Comprobando si existe una copia en caché de esta versión...",
  "loc.messages.InstallingAfresh": "La memoria caché no contiene la versión solicitada de .NET Core. Descargándola e instalándola ahora.",
  "loc.messages.GettingDownloadUrl": "Obteniendo direcciones URL para descargar el %s de .NET Core de la versión: %s.",
  "loc.messages.CouldNotDetectPlatform": "No se pudo detectar el sistema operativo de la máquina",
  "loc.messages.NullDownloadUrls": "No se pueden construir direcciones URL de descarga. Asegúrese de que la versión especificada %s es válida.",
  "loc.messages.DownloadingUrl": "Descargando el paquete de .NET Core de la dirección URL: %s",
  "loc.messages.ExtractingPackage": "Extrayendo el paquete %s descargado.",
  "loc.messages.CachingTool": "Almacenando en caché esta herramienta instalada.",
  "loc.messages.SuccessfullyInstalled": ".NET Core %s versión %s se ha instalado correctamente.",
  "loc.messages.ToolToInstall": "Herramienta para instalar: .NET Core %s versión %s.",
  "loc.messages.PrimaryPlatform": "Se ha detectado la plataforma (principal): %s",
  "loc.messages.LegacyPlatform": "Se ha detectado la plataforma (heredada): %s",
  "loc.messages.CouldNotDownload": "No se pudo descargar el paquete de instalación desde esta dirección URL: %s Error: %s",
  "loc.messages.FailedToDownloadPackage": "No se pudo descargar el paquete de instalación",
  "loc.messages.PrependGlobalToolPath": "Creando la ruta de acceso de herramientas global y anteponiéndola a PATH.",
  "loc.messages.VersionsFileMalformed": "Los vínculos de descarga de la versión especificada no tienen un formato correcto en el documento de versiones admitidas => %s/",
  "loc.messages.MatchingVersionNotFound": "No se encontró ninguna versión de %s coincidente para la versión %s especificada. Tenga en cuenta que las versiones preliminares solo se toman en consideración en las búsquedas de la última versión si la casilla Incluir versiones preliminares está seleccionada.",
  "loc.messages.UnableToAccessPath": "Unable to access path: %s. Error: %s. Please make sure that agent process has access to the path.",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "No se puede descargar la versión %s de la dirección URL %s. La dirección URL o la versión es incorrecta.",
  "loc.messages.CopyingFoldersIntoPath": "Copiando todas las carpetas raíz en la ruta de acceso de instalación: %s",
  "loc.messages.CopyingFilesIntoPath": "Copiando archivos raíz (como dotnet.exe) en la ruta de acceso de instalación: %s",
  "loc.messages.FailedToCopyTopLevelFiles": "No se pudieron copiar los archivos raíz en la ruta de acceso de la instalación: %s. Error: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "Error al instalar la versión %s en la ruta de acceso %s: %s",
  "loc.messages.ExplicitVersionRequired": "No se admite la versión %s. Las versiones que se van a instalar deben tener el formato principal.secundaria.revisión. Por ejemplo, 2.2.1",
  "loc.messages.VersionFoundInCache": "Se ha encontrado la versión %s en la memoria caché.",
  "loc.messages.VersionNotFoundInCache": "No se encontró la versión %s en la memoria caché.",
  "loc.messages.CreatingInstallationCompeleteFile": "Creating installation complete marker file for .Net core %s version %s",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "No se encuentra la versión del entorno de ejecución para el tipo de paquete %s con la versión %s",
  "loc.messages.PathNotFoundException": "No se encontró la ruta de acceso %s. Asegúrese de que existe.",
  "loc.messages.VersionIsLocalLatest": "La versión %s es la última de las versiones presentes en la ruta de acceso %s",
  "loc.messages.VersionIsNotLocalLatest": "La versión %s no es la última de las versiones presentes en %s",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "No se encontró la dirección URL de descarga de .Net Core %s versión %s para las plataformas de sistema operativo siguientes (RID): %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "Failed to download or parse releases-index.json with error: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "Se encontró la versión %s en el canal %s para la especificación de versión determinada por el usuario: %s",
  "loc.messages.UrlForReleaseChannelNotFound": "No se encontró la dirección URL para el archivo releases.json de la versión del canal: %s",
  "loc.messages.NoSuitableChannelWereFound": "No se encuentra el canal correspondiente a la versión %s.",
  "loc.messages.DetectingPlatform": "Detección de la plataforma del sistema operativo para encontrar un paquete de descarga correcto para dicho sistema.",
  "loc.messages.FailedInDetectingMachineArch": "Error al detectar la plataforma del sistema operativo de la máquina: %s",
  "loc.messages.runtimeVersionPropertyNotFound": "No se encontró la propiedad runtime-version para .Net Core %s versión %s.",
  "loc.messages.VersionNotFound": "Coincidencia de versión de %s: no se encontró %s",
  "loc.messages.VersionNotAllowed": "Version %s is not allowed. Allowed version types are: majorVersion.x, majorVersion.minorVersion.x, majorVersion.minorVersion.patchVersion. More details: %s",
  "loc.messages.VersionsCanNotBeCompared": "No se pueden comparar las versiones %s y %s. Ambas versiones deben ser explícitas.",
  "loc.messages.FileNameNotCorrectCompleteFileName": "File name %s is not a correct '.complete' file.",
  "loc.messages.ChannelVersionsNotComparable": "No se pueden comparar las versiones %s y %s del canal. Ambas deben tener versiones principales y secundarias numéricas.",
  "loc.messages.LookingForVersionInChannel": "Buscando la versión en canal %s",
  "loc.messages.FallingBackToAdjacentChannels": "No se encontró la versión %s en su canal y se va a buscar en los canales adyacentes.",
  "loc.messages.ErrorWhileSettingDotNetToolPath": "Error al anteponer la ruta de acceso de la herramienta de .Net Core a la variable de entorno PATH: %s",
  "loc.messages.RequiredChannelVersionForSpec": "Buscando el canal %s para la versión %s",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "Error al obtener la versión %s del canal %s: %s",
  "loc.messages.ComparingInstalledFolderVersions": "Comparando si la versión %s que se va a instalar es posterior a la versión ya instalada con el nombre de carpeta %s",
  "loc.messages.ComparingInstalledFileVersions": "Comparando si la versión %s que se va a instalar es posterior a la versión ya instalada con el nombre de archivo de versión completo %s",
  "loc.messages.InvalidChannelObject": "El objeto no se puede usar como canal porque faltan propiedades requeridas, como channel-version o releases.json.",
  "loc.messages.ReleasesIndexBodyIncorrect": "El cuerpo del índice de versiones analizadas no es correcto. Compruebe que la sección releases-index no está vacía en el archivo.",
  "loc.messages.InvalidVersionObject": "La versión del archivo releases.json tiene un objeto %s no válido: %s",
  "loc.messages.InvalidVersion": "Invalid version specified %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "En la versión %s (%s), los datos del archivo son incorrectos (puede que falten campos obligatorios, como el nombre, RID y dirección URL): %s",
  "loc.messages.VersionFilesDataIncorrect": "Faltan datos de los archivos de la versión o faltan campos obligatorios.",
  "loc.messages.VersionInformationNotComplete": "La información necesaria de la versión %s no está completa en el archivo releases.json. Error: %s",
  "loc.messages.FailedWhileExtractingPacakge": "No se pudo extraer el paquete descargado. Error: %s",
  "loc.messages.InstallingNuGetVersion": "Instalando la versión %s de NuGet",
  "loc.messages.FailureWhileInstallingNuGetVersion": "No se pudo instalar la versión de NuGet. Error: %s",
  "loc.messages.SettingUpNugetProxySettings": "Configurando el proxy para NuGet.",
  "loc.messages.GlobalJsonFound": "Found a global.json at path: %s",
  "loc.messages.GlobalJsonSdkVersion": "SDK version: %s is specified by global.json at path: %s",
  "loc.messages.GlobalJsonIsEmpty": "global.json at path: %s is empty. No version is specified.",
  "loc.messages.FailedToFindGlobalJson": "Failed to find global.json at and inside path: %s",
  "loc.messages.FailedToReadGlobalJson": "The global.json at path: '%s' has the wrong format. For information about global.json, visit here: https://docs.microsoft.com/en-us/dotnet/core/tools/global-json. Error while trying to read: %s",
  "loc.messages.VersionNumberHasTheWrongFormat": "The version number: %s doesn't have the correct format. Versions can be given in the following formats: 2.x   => Install latest in major version. 2.2.x => Install latest in major and minor version. 2.2.104 => Install exact version. Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.messages.OnlyExplicitVersionAllowed": "Only explicit versions and accepted, such as: 2.2.301. Version: %s is not valid.",
  "loc.messages.SupportPhaseNotPresentInChannel": "support-phase is not present in the channel with channel-version %s."
}