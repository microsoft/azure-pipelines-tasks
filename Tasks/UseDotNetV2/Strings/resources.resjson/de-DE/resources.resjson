{
  "loc.friendlyName": "Use .NET Core",
  "loc.helpMarkDown": "[Learn more about this task](https://aka.ms/AA4xgy0)",
  "loc.description": "Ruft eine bestimmte Version für das .NET Core SDK aus dem Internet oder dem lokalen Cache ab und fügt sie PATH hinzu. Verwenden Sie diese Aufgabe, um die in nachfolgenden Aufgaben verwendete .NET Core-Version zu ändern. Bietet zusätzlich Proxyunterstützung.",
  "loc.instanceNameFormat": "Verwenden Sie .NET Core $(packageType) $(version).",
  "loc.releaseNotes": "<li>Support for installing multiple versions side by side.</li><li>Support for patterns in version to fetch latest in minor/major version.</li><li>Restrict Multi-level lookup</li><li>Installs NuGet and provides proxy support.</li><li>Installs sdk versions from `global.json` file(s)</li>",
  "loc.group.displayName.advanced": "Erweitert",
  "loc.input.label.packageType": "Zu installierendes Paket",
  "loc.input.help.packageType": "Wählen Sie aus, ob nur die Runtime oder das SDK installiert werden soll.",
  "loc.input.label.useGlobalJson": "Use global json",
  "loc.input.help.useGlobalJson": "Select this option to install all SDKs from global.json files. These files are searched from system.DefaultWorkingDirectory. You can change the search root path by setting working directory input.",
  "loc.input.label.workingDirectory": "Arbeitsverzeichnis",
  "loc.input.help.workingDirectory": "Specify path from where global.json files should be searched when using `Use global json`. If empty, `system.DefaultWorkingDirectory` will be considered as the root path.",
  "loc.input.label.version": "Version",
  "loc.input.help.version": "Specify version of .NET Core SDK or runtime to install.<br/>Versions can be given in the following formats<li>2.x   => Install latest in major version.</li><li>2.2.x => Install latest in major and minor version</li><li>2.2.104 => Install exact version</li><br/>Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.input.label.includePreviewVersions": "Vorschauversionen einschließen",
  "loc.input.help.includePreviewVersions": "Wählen Sie aus, ob die Vorschauversionen bei der Suche nach aktuellen Versionen einbezogen werden sollen, etwa bei der Suche nach Version 2.2.x. Diese Einstellung wird ignoriert, wenn Sie eine genaue Version angeben, z. B. 3.0.100-preview3-010431.",
  "loc.input.label.installationPath": "Pfad zur Installation von .NET Core",
  "loc.input.help.installationPath": "Geben Sie an, wo das .NET Core SDK/die Runtime installiert werden soll. Verschiedene Pfade können sich folgendermaßen auf das .NET-Verhalten auswirken.<li>$(Agent.ToolsDirectory): Hiermit wird die Version auf dem Agent zwischengespeichert, weil dieses Verzeichnis nicht pipelineübergreifend bereinigt wird. Alle auf dem Agent ausgeführten Pipelines würden Zugriff auf die Versionen erhalten, die zuvor über den Agent installiert wurden.</li><li>$(Agent.TempDirectory): Auf diese Weise kann sichergestellt werden, dass eine Pipeline keine zwischengespeicherte Version von .NET Core verwendet, weil dieser Ordner nach jeder Pipeline bereinigt wird.</li><li>Jeder andere Pfad: Sie können einen beliebigen anderen Pfad konfigurieren, solange der Agentprozess Zugriff auf den Pfad besitzt. Dies ändert den Status des Computers und wirkt sich auf alle darauf ausgeführten Prozesse aus.<br/> Beachten Sie, dass Sie auch die Einstellung zur Suche auf mehreren Ebenen konfigurieren können, um die Suche des .NET-Hosts nach einer geeigneten Version zu konfigurieren.",
  "loc.input.label.performMultiLevelLookup": "Suche auf mehreren Ebenen ausführen",
  "loc.input.help.performMultiLevelLookup": "Diese Eingabe gilt nur für Windows-basierte Agents. Hiermit wird das Verhalten des .NET-Hostprozesses für die Suche nach einem geeigneten freigegebenen Framework konfiguriert.<li>Deaktiviert: Der Hostprozess sucht nur Versionen, die in dem in dieser Aufgabe angegebenen Ordner vorhanden sind.</li><li>Aktiviert: Der Host versucht, über eine Suche auf mehreren Ebenen in vordefinierten globalen Speicherorten zu suchen.<br/>Die globalen Standardspeicherorte lauten: <br/><b>Für Windows:</b><br/>C:\\Programme\\dotnet (64-Bit-Prozess)<br/>C:\\Programme (x86)\\dotnet (32-Bit-Prozess)</li> Weitere Informationen finden Sie [**HIER**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md).<br/>",
  "loc.messages.ToolFailed": "Fehler bei der Toolinstallation: %s",
  "loc.messages.ImplicitVersionNotSupported": "Die Version muss eine gültige und bestimmte Version sein: %s.",
  "loc.messages.getMachinePlatformFailed": "Fehler beim Abrufen der Details zur Computerplattform. Fehler: %s.",
  "loc.messages.getDownloadUrlsFailed": "Fehler beim Abrufen der Download-URLs. Fehler: %s.",
  "loc.messages.UsingCachedTool": "Es ist eine zwischengespeicherte Kopie von .NET Core vorhanden. Eine Neuinstallation ist nicht erforderlich. Speicherort des zwischengespeicherten Tools: %s.",
  "loc.messages.CheckingToolCache": "Es wird überprüft, ob eine zwischengespeicherte Kopie für diese Version vorhanden ist...",
  "loc.messages.InstallingAfresh": "Der Cache enthält nicht die angeforderte Version von .NET Core. Laden Sie die Version jetzt herunter, und installieren Sie sie.",
  "loc.messages.GettingDownloadUrl": "URL zum Herunterladen von .NET Core %s, Version %s wird abgerufen.",
  "loc.messages.CouldNotDetectPlatform": "Das Betriebssystem des Computers konnte nicht ermittelt werden.",
  "loc.messages.NullDownloadUrls": "Die Download-URL konnte nicht erstellt werden. Stellen Sie sicher, dass die angegebene Version %s gültig ist.",
  "loc.messages.DownloadingUrl": ".NET Core-Paket wird von URL %s heruntergeladen.",
  "loc.messages.ExtractingPackage": "Das heruntergeladene Paket %s wird extrahiert.",
  "loc.messages.CachingTool": "Dieses installierte Tool wird zwischengespeichert.",
  "loc.messages.SuccessfullyInstalled": ".NET Core %s Version %s wurde erfolgreich installiert.",
  "loc.messages.ToolToInstall": "Zu installierendes Tool: .NET Core %s Version %s.",
  "loc.messages.PrimaryPlatform": "Erkannte Plattform (primär): %s",
  "loc.messages.LegacyPlatform": "Erkannte Plattform (Legacy): %s",
  "loc.messages.CouldNotDownload": "Das Installationspaket konnte nicht von dieser URL heruntergeladen werden: %s. Fehler: %s",
  "loc.messages.FailedToDownloadPackage": "Fehler beim Herunterladen des Pakets für die Installation.",
  "loc.messages.PrependGlobalToolPath": "Der globale Toolpfad wird erstellt und PATH vorangestellt.",
  "loc.messages.VersionsFileMalformed": "Die Downloadlinks der angegebenen Version sind im Dokument mit unterstützten Versionen nicht ordnungsgemäß formatiert: => %s/",
  "loc.messages.MatchingVersionNotFound": "Für die angegebene Version wurde keine übereinstimmende %s-Version gefunden: %s. Beachten Sie, dass die Vorschauversionen nur in den letzten Versionssuchen berücksichtigt werden, wenn das Kontrollkästchen \"Vorschauversionen einschließen\" aktiviert ist.",
  "loc.messages.UnableToAccessPath": "Unable to access path: %s. Error: %s. Please make sure that agent process has access to the path.",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "Version %s kann nicht über die URL %s heruntergeladen werden. Entweder ist die URL oder die Version falsch.",
  "loc.messages.CopyingFoldersIntoPath": "Alle Stammordner werden in den Installationspfad kopiert: %s",
  "loc.messages.CopyingFilesIntoPath": "Stammdateien (z. B. \"dotnet.exe\") werden in den Installationspfad kopiert: %s",
  "loc.messages.FailedToCopyTopLevelFiles": "Fehler beim Kopieren der Stammdateien in den Installationspfad: %s. Fehler: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "Fehler beim Installieren der Version %s in Pfad \"%s\". Fehler: %s",
  "loc.messages.ExplicitVersionRequired": "Version %s ist nicht zulässig. Die zu installierenden Versionen müssen das folgende Format aufweisen: Hauptversion.Nebenversion.Patchversion. Beispiel: 2.2.1",
  "loc.messages.VersionFoundInCache": "Version %s wurde im Cache gefunden.",
  "loc.messages.VersionNotFoundInCache": "Die Version %s wurde nicht im Cache gefunden.",
  "loc.messages.CreatingInstallationCompeleteFile": "Creating installation complete marker file for .Net core %s version %s",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "Die Runtimeversion für den Pakettyp \"%s\" mit Version %s wurde nicht gefunden.",
  "loc.messages.PathNotFoundException": "Der Pfad \"%s\" wurde nicht gefunden. Stellen Sie sicher, dass der Pfad vorhanden ist.",
  "loc.messages.VersionIsLocalLatest": "Version %s ist die neueste Version, die im Pfad \"%s\" vorhanden ist.",
  "loc.messages.VersionIsNotLocalLatest": "Version %s ist nicht die neueste Version, die unter \"%s\" vorhanden ist.",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "Die Download-URL für .NET Core %s, Version %s wurde für die folgenden Betriebssystemplattformen (RID) nicht gefunden: %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "Failed to download or parse releases-index.json with error: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "Version %s in Kanal \"%s\" für benutzerseitig angegebene Versionsspezifikation gefunden: %s",
  "loc.messages.UrlForReleaseChannelNotFound": "Die URL für \"releases.json\" der Kanalversion %s wurde nicht gefunden.",
  "loc.messages.NoSuitableChannelWereFound": "Der zugehörige Kanal zu Version %s wurde nicht gefunden.",
  "loc.messages.DetectingPlatform": "Die Betriebssystemplattform wird ermittelt, um das richtige Downloadpaket für das Betriebssystem zu finden.",
  "loc.messages.FailedInDetectingMachineArch": "Fehler beim Ermitteln der Betriebssystemplattform für den Computer. Fehler: %s",
  "loc.messages.runtimeVersionPropertyNotFound": "Die runtime-version-Eigenschaft für .NET Core %s, Version %s wurde nicht gefunden.",
  "loc.messages.VersionNotFound": "%s-Versionsabgleich: \"%s\" wurde nicht gefunden.",
  "loc.messages.VersionNotAllowed": "Version %s is not allowed. Allowed version types are: majorVersion.x, majorVersion.minorVersion.x, majorVersion.minorVersion.patchVersion. More details: %s",
  "loc.messages.VersionsCanNotBeCompared": "Die Versionen %s und %s können nicht verglichen werden. Es muss sich in beiden Fällen um explizite Versionen handeln.",
  "loc.messages.FileNameNotCorrectCompleteFileName": "File name %s is not a correct '.complete' file.",
  "loc.messages.ChannelVersionsNotComparable": "Die Kanalversionen %s und %s können nicht verglichen werden. Beide müssen Haupt- und Nebenversionen enthalten.",
  "loc.messages.LookingForVersionInChannel": "Die Version wird im Kanal \"%s\" gesucht.",
  "loc.messages.FallingBackToAdjacentChannels": "Die Version %s wurde nicht im Kanal gefunden. Es wird in benachbarten Kanälen gesucht.",
  "loc.messages.ErrorWhileSettingDotNetToolPath": "Fehler beim Voranstellen der .NET Core-Toolpfads an die PATH-Umgebungsvariable. Fehler: %s",
  "loc.messages.RequiredChannelVersionForSpec": "Der Kanal \"%s\" für Version %s wird gesucht.",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "Fehler beim Abrufen der Version %s aus Kanal \"%s\". Fehler: %s",
  "loc.messages.ComparingInstalledFolderVersions": "Es wird verglichen, ob die zu installierende Version %s höher ist als die bereits installierte Version mit dem Ordnernamen \"%s\".",
  "loc.messages.ComparingInstalledFileVersions": "Es wird verglichen, ob die zu installierende Version %s höher ist als die bereits installierte Version mit version.complete-Datei \"%s\".",
  "loc.messages.InvalidChannelObject": "Das Objekt kann nicht als Kanal verwendet werden, erforderliche Eigenschaften wie z. B. die Kanalversion und \"releases.json\" fehlen.",
  "loc.messages.ReleasesIndexBodyIncorrect": "Der analysierte Indextext für das Release ist nicht korrekt. Stellen Sie sicher, dass der Abschnitt \"releases-index\" in der Datei nicht leer ist.",
  "loc.messages.InvalidVersionObject": "\"releases.json\" weist ein Release mit ungültigem %s-Objekt auf: %s",
  "loc.messages.InvalidVersion": "Invalid version specified %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "In Release %s für Version %s sind die Dateidaten falsch (möglicherweise fehlen erforderliche Felder wie Name, RID und URL): %s",
  "loc.messages.VersionFilesDataIncorrect": "Die Dateidaten der Version fehlen, oder es fehlen erforderliche Felder.",
  "loc.messages.VersionInformationNotComplete": "Für Version %s erforderliche Informationen sind in der Datei \"releases.json\" nicht vollständig. Fehler: %s",
  "loc.messages.FailedWhileExtractingPacakge": "Fehler beim Extrahieren des heruntergeladenen Pakets. Fehler: %s",
  "loc.messages.InstallingNuGetVersion": "NuGet-Version %s wird installiert.",
  "loc.messages.FailureWhileInstallingNuGetVersion": "Fehler beim Installieren der NuGet-Version. Fehler: %s",
  "loc.messages.SettingUpNugetProxySettings": "Die Proxykonfiguration für NuGet wird eingerichtet.",
  "loc.messages.GlobalJsonFound": "Found a global.json at path: %s",
  "loc.messages.GlobalJsonSdkVersion": "SDK version: %s is specified by global.json at path: %s",
  "loc.messages.GlobalJsonIsEmpty": "global.json at path: %s is empty. No version is specified.",
  "loc.messages.FailedToFindGlobalJson": "Failed to find global.json at and inside path: %s",
  "loc.messages.FailedToReadGlobalJson": "The global.json at path: '%s' has the wrong format. For information about global.json, visit here: https://docs.microsoft.com/en-us/dotnet/core/tools/global-json. Error while trying to read: %s",
  "loc.messages.VersionNumberHasTheWrongFormat": "The version number: %s doesn't have the correct format. Versions can be given in the following formats: 2.x   => Install latest in major version. 2.2.x => Install latest in major and minor version. 2.2.104 => Install exact version. Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.messages.OnlyExplicitVersionAllowed": "Only explicit versions and accepted, such as: 2.2.301. Version: %s is not valid.",
  "loc.messages.SupportPhaseNotPresentInChannel": "support-phase is not present in the channel with channel-version %s."
}