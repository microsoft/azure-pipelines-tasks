{
  "loc.friendlyName": "PowerShell",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?LinkID=613736)",
  "loc.description": "Run a PowerShell script on Linux, macOS, or Windows",
  "loc.instanceNameFormat": "PowerShell Script",
  "loc.releaseNotes": "Script task consistency. Added support for macOS and Linux.",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.targetType": "Type",
  "loc.input.help.targetType": "Target script type: File Path or Inline",
  "loc.input.label.filePath": "Script Path",
  "loc.input.help.filePath": "Path of the script to execute. Must be a fully qualified path or relative to $(System.DefaultWorkingDirectory).",
  "loc.input.label.arguments": "Arguments",
  "loc.input.help.arguments": "Arguments passed to the PowerShell script. Either ordinal parameters or named parameters.",
  "loc.input.label.script": "Script",
  "loc.input.label.errorActionPreference": "ErrorActionPreference",
  "loc.input.help.errorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your script.",
  "loc.input.label.failOnStderr": "Fail on Standard Error",
  "loc.input.help.failOnStderr": "If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream. Otherwise the task will rely on the exit code to determine failure.",
  "loc.input.label.showWarnings": "Show warnings as Azure DevOps warnings",
  "loc.input.help.showWarnings": "If this is true, and your script writes a warnings - they are shown as warnings also in pipeline logs",
  "loc.input.label.ignoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.ignoreLASTEXITCODE": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not appended to the end of your script.",
  "loc.input.label.pwsh": "Use PowerShell Core",
  "loc.input.help.pwsh": "If this is true, then on Windows the task will use pwsh.exe from your PATH instead of powershell.exe.",
  "loc.input.label.workingDirectory": "Working Directory",
  "loc.input.help.workingDirectory": "Working directory where the script is run.",
  "loc.input.label.runScriptInSeparateScope": "Run script in the separate scope",
  "loc.input.help.runScriptInSeparateScope": "This input allows executing PowerShell scripts using '&' operator instead of the default '.'. If this input set to the true script will be executed in separate scope and globally scoped PowerShell variables won't be updated",
  "loc.messages.GeneratingScript": "Generating script.",
  "loc.messages.JS_ExitCode": "PowerShell exited with code '%s'.",
  "loc.messages.JS_FormattedCommand": "Formatted command: %s",
  "loc.messages.JS_InvalidErrorActionPreference": "Invalid ErrorActionPreference '%s'. The value must be one of: 'Stop', 'Continue', or 'SilentlyContinue'",
  "loc.messages.JS_InvalidFilePath": "Invalid file path '%s'. A path to a .ps1 file is required.",
  "loc.messages.JS_Stderr": "PowerShell wrote one or more lines to the standard error stream.",
  "loc.messages.JS_InvalidTargetType": "Invalid target type '%s'. The value must be one of: 'filepath' or 'inline'",
  "loc.messages.PS_ExitCode": "PowerShell exited with code '{0}'.",
  "loc.messages.PS_FormattedCommand": "Formatted command: {0}",
  "loc.messages.PS_InvalidErrorActionPreference": "Invalid ErrorActionPreference '{0}'. The value must be one of: 'Stop', 'Continue', or 'SilentlyContinue'",
  "loc.messages.PS_InvalidFilePath": "Invalid file path '{0}'. A path to a .ps1 file is required.",
  "loc.messages.PS_UnableToDetermineExitCode": "Unexpected exception. Unable to determine the exit code from powershell.",
  "loc.messages.PS_InvalidTargetType": "Invalid target type '{0}'. The value must be one of: 'filepath' or 'inline'"
}