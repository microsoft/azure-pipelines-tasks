{
  "loc.friendlyName": "ファイル変換",
  "loc.helpMarkDown": "File transformation and variable substitution task: Update tokens in your XML based configuration files and then replaces those tokens with variable values. <br/>Currently only XML, JSON file formats are supported for variable substitution. </br> [Learn more about this task](https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/file-transform)",
  "loc.description": "XML または JSON 構成ファイル内の変数の値でトークンを置換します",
  "loc.instanceNameFormat": "ファイル変換: $(Package)",
  "loc.group.displayName.VariableSubstitution": "変数の置換",
  "loc.input.label.folderPath": "パッケージまたはフォルダー",
  "loc.input.help.folderPath": "パッケージまたはフォルダーへのファイル パス。<br />変数 ( [ビルド](https://docs.microsoft.com/vsts/pipelines/build/variables) | [リリース](https://docs.microsoft.com/vsts/pipelines/release/variables#default-variables))、ワイルドカードを使用できます。<br/>たとえば、$(System.DefaultWorkingDirectory)/\\*\\*/\\*.zip。",
  "loc.input.label.enableXmlTransform": "XML 変換",
  "loc.input.help.enableXmlTransform": "構成変換は変数の置換の前に実行されます。<br/>XML 変換は Windows プラットフォームでのみサポートされています。",
  "loc.input.label.xmlTransformationRules": "変換ルール",
  "loc.input.help.xmlTransformationRules": "次の構文を使用して、変換ファイル ルールの改行区切りリストを指定します: <br/>-transform <pathToTransformFile>  -xml <pathToSourceConfigurationFile>",
  "loc.input.label.fileType": "ファイル形式",
  "loc.input.help.fileType": "置換を実行する必要があるファイル形式を指定します<br/>XML の場合、ビルド パイプラインまたはリリース パイプラインで定義された変数は、構成ファイルおよび parameters.xml の appSettings、applicationSettings、および connectionStrings セクションの 'key' エントリまたは 'name' エントリと照合されます。変数置換は構成変換の後に実行されます。<br/>ネストされた、または階層的な JSON 変数を置き換えるには、JSONPath 式を使用してそれらの変数を指定します。<br/> <br/> たとえば、以下のサンプルで ‘ConnectionString’ の値を置き換えるには、ビルドまたはリリース パイプライン (またはリリース パイプラインの環境) で変数を ‘Data.DefaultConnection.ConnectionString’ として定義する必要があります。<br/> {<br/>&nbsp;&nbsp;\"Data\": {<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"DefaultConnection\": {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ConnectionString\": \"Server=(localdb)\\SQLEXPRESS;Database=MyDB;Trusted_Connection=True\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;}<br/> }<br/> 変数置換は構成変換後に実行されます。<br/><br/>メモ: ビルド/リリース パイプラインで定義されたカスタム変数のみが置換として使用されます。既定/システム定義のパイプライン変数は除外されます。<br/>注意: リリース パイプラインとステージで同じ変数が定義されている場合、ステージ変数がリリース パイプライン変数より優先されます。",
  "loc.input.label.targetFiles": "ターゲット ファイル",
  "loc.input.help.targetFiles": "変数の値を置き換えるファイルの改行区切りリストを指定します。ルート フォルダーへの相対ファイル名が指定されます。",
  "loc.messages.JSONvariablesubstitutionappliedsuccessfully": "JSON 変数置換が正常に適用されました。",
  "loc.messages.XMLvariablesubstitutionappliedsuccessfully": "XML 変数の置換が正常に適用されました。",
  "loc.messages.XDTTransformationsappliedsuccessfully": "XML 変換が正常に適用されました",
  "loc.messages.CannotPerformXdtTransformationOnNonWindowsPlatform": "非 Windows プラットフォームでは XML 変換を実行できません。",
  "loc.messages.XdtTransformationErrorWhileTransforming": "%s の %s による変換中に XML 変換エラーが発生しました。",
  "loc.messages.JSONParseError": "JSON ファイルを解析できません: %s。エラー: %s",
  "loc.messages.NOJSONfilematchedwithspecificpattern": "指定のパターンと一致する JSON ファイルはありません: %s。",
  "loc.messages.FailedToApplyTransformation": "指定されたパッケージの変換を適用できません。",
  "loc.messages.MissingArgumentsforXMLTransformation": "引数が不完全であるか、見つかりません。-transform <transform file> -xml <source file> -result <destinamtion file> の形式である必要があります。変換ファイルとソース ファイルは必須の入力です。",
  "loc.messages.SubstitutingValueonKey": "Substituting value on key: %s",
  "loc.messages.SubstitutingValueonKeyWithNumber": "Substituting value on key %s with (number) value: %s",
  "loc.messages.SubstitutingValueonKeyWithBoolean": "Substituting value on key %s with (boolean) value: %s",
  "loc.messages.SubstitutingValueonKeyWithObject": "Substituting value on key %s with (object) value: %s",
  "loc.messages.SubstitutingValueonKeyWithString": "Substituting value on key %s with (string) value: %s",
  "loc.messages.JSONvariableSubstitution": "Applying JSON variable substitution for %s",
  "loc.messages.ApplyingXDTtransformation": "Applying XDT Transformation from transformation file %s -> source file %s ",
  "loc.messages.SubstitutionForXmlNode": "xml ノードの置換を処理しています: %s",
  "loc.messages.UpdatingKeyWithTokenValue": "Updating value for key= %s with token value: %s",
  "loc.messages.SubstitutingConnectionStringValue": "Substituting connectionString value for connectionString = %s with token value: %s ",
  "loc.messages.VariableSubstitutionInitiated": "構成ファイルでの変数の置換を開始しました: %s",
  "loc.messages.ConfigFileUpdated": "Config file : %s updated.",
  "loc.messages.SkippedUpdatingFile": "Skipped Updating file: %s"
}