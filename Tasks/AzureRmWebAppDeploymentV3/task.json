{
    "id": "497D490F-EEA7-4F2B-AB94-48D9C1ACDCB1",
    "name": "AzureRmWebAppDeployment",
    "friendlyName": "Azure App Service deploy",
    "description": "Deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby",
    "helpUrl": "https://aka.ms/azureappservicetroubleshooting",
    "helpMarkDown": "[Learn more about this task](https://aka.ms/azurermwebdeployreadme)",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 3,
        "Minor": 217,
        "Patch": 1
    },
    "releaseNotes": "What's new in Version 3.0: <br/>&nbsp;&nbsp;Supports File Transformations (XDT) <br/>&nbsp;&nbsp;Supports Variable Substitutions(XML, JSON) <br/>Click [here](https://aka.ms/azurermwebdeployreadme) for more information.",
    "minimumAgentVersion": "2.104.1",
    "groups": [
        {
            "name": "FileTransformsAndVariableSubstitution",
            "displayName": "File Transforms & Variable Substitution Options",
            "isExpanded": false,
            "visibleRule": "WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\" && Package NotEndsWith .war"
        },
        {
            "name": "AdditionalDeploymentOptions",
            "displayName": "Additional Deployment Options",
            "isExpanded": false,
            "visibleRule": "WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\""
        },
        {
            "name": "PostDeploymentAction",
            "displayName": "Post Deployment Action",
            "isExpanded": false,
            "visibleRule": "WebAppKind != \"\""
        },
        {
            "name": "ApplicationAndConfigurationSettings",
            "displayName": "Application and Configuration Settings",
            "isExpanded": false
        },
        {
            "name": "output",
            "displayName": "Output",
            "isExpanded": true,
            "visibleRule": "WebAppKind != \"\""
        }
    ],
    "inputs": [
        {
            "name": "ConnectedServiceName",
            "aliases": [
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment."
        },
        {
            "name": "WebAppKind",
            "aliases": [
                "appType"
            ],
            "type": "pickList",
            "label": "App type",
            "defaultValue": "app",
            "required": true,
            "options": {
                "app": "Web App",
                "applinux": "Linux Web App",
                "functionapp": "Function App (Not Recommended, Use Azure Functions Task)",
                "api": "API App",
                "mobileapp": "Mobile App"
            },
            "properties": {
                "EditableOptions": "true"
            },
            "helpMarkDown": "Select type of web app to deploy. <br/> Note: Select Linux Web App for built-in platform images or custom container image deployments."
        },
        {
            "name": "WebAppName",
            "type": "pickList",
            "label": "App Service name",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Enter or Select the name of an existing Azure App Service. App services based on selected app type will only be listed."
        },
        {
            "name": "DeployToSlotFlag",
            "type": "boolean",
            "label": "Deploy to slot",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Select the option to deploy to an existing slot other than the Production slot. If this option is not selected, then the Azure App Service will be deployed to the Production slot.",
            "visibleRule": "WebAppKind != \"\""
        },
        {
            "name": "ResourceGroupName",
            "type": "pickList",
            "label": "Resource group",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Enter or Select the Azure Resource group that contains the Azure App Service specified above.",
            "visibleRule": "DeployToSlotFlag = true"
        },
        {
            "name": "SlotName",
            "type": "pickList",
            "label": "Slot",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Enter or Select an existing Slot other than the Production slot.",
            "visibleRule": "DeployToSlotFlag = true"
        },
        {
            "name": "ImageSource",
            "type": "pickList",
            "label": "Image Source",
            "defaultValue": "Registry",
            "options": {
                "Registry": "Container Registry",
                "Builtin": "Built-in Image"
            },
            "required": false,
            "properties": {
                "EditableOptions": "false",
                "PopulateDefaultValue": "true"
            },
            "helpMarkDown": "App Service on Linux offers two different options to publish your application <br/> Custom image deployment or App deployment with a built-in platform image. [Learn More](https://go.microsoft.com/fwlink/?linkid=862490)",
            "visibleRule": "WebAppKind = applinux || WebAppKind = linux"
        },
        {
            "name": "AzureContainerRegistry",
            "type": "pickList",
            "label": "Registry",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "A globally unique top-level domain name for your specific registry.<br/> Note: Fully qualified image name will be of the format: '<b>`<registry`></b>/`<repository`>:`<tag`>'. For example, '<b>myregistry.azurecr.io</b>/nginx:latest'.",
            "visibleRule": "ImageSource = AzureContainerRegistry"
        },
        {
            "name": "AzureContainerRegistryLoginServer",
            "type": "pickList",
            "label": "Registry Login Server Name",
            "defaultValue": "",
            "required": false,
            "properties": {
                "EditableOptions": "False",
                "PopulateDefaultValue": "True"
            },
            "helpMarkDown": "Enter or Select an Azure container registry login server name.",
            "visibleRule": "ImageSource = invalidimagesource"
        },
        {
            "name": "AzureContainerRegistryImage",
            "type": "pickList",
            "label": "Image",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Name of the repository where the container images are stored.<br/> Note: Fully qualified image name will be of the format: '`<registry`>/<b>`<repository`></b>:`<tag`>'. For example, 'myregistry.azurecr.io/<b>nginx</b>:latest'.",
            "visibleRule": "ImageSource = AzureContainerRegistry"
        },
        {
            "name": "AzureContainerRegistryTag",
            "type": "pickList",
            "label": "Tag",
            "defaultValue": "",
            "required": false,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Tags are optional, it is the mechanism that registries use to give Docker images a version.<br/> Note: Fully qualified image name will be of the format: '`<registry`>/`<repository`>:<b>`<tag`></b>'. For example, 'myregistry.azurecr.io/nginx:<b>latest</b>'.",
            "visibleRule": "ImageSource = AzureContainerRegistry"
        },
        {
            "name": "DockerRepositoryAccess",
            "type": "radio",
            "label": "Repository Access",
            "required": true,
            "options": {
                "private": "Private",
                "public": "Public"
            },
            "defaultValue": "public",
            "helpMarkDown": "Select the Docker repository access.",
            "visibleRule": "ImageSource = invalidImage"
        },
        {
            "name": "RegistryConnectedServiceName",
            "aliases": [
                "dockerRegistryConnection"
            ],
            "type": "connectedService:dockerregistry",
            "label": "Registry Connection",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "Select the registry connection.",
            "visibleRule": "DockerRepositoryAccess = private || ImageSource = PrivateRegistry"
        },
        {
            "name": "PrivateRegistryImage",
            "type": "pickList",
            "label": "Image",
            "defaultValue": "",
            "required": true,
            "visibleRule": "ImageSource = PrivateRegistry",
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Name of the repository where the container images are stored.<br/> Note: Fully qualified image name will be of the format: '`<registry`>/<b>`<repository`></b>:`<tag`>'. For example, 'myregistry.azurecr.io/<b>nginx</b>:latest'."
        },
        {
            "name": "PrivateRegistryTag",
            "type": "pickList",
            "label": "Tag",
            "defaultValue": "",
            "required": false,
            "visibleRule": "ImageSource = PrivateRegistry",
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Tags are optional, it is the mechanism that registries use to give Docker images a version.<br/> Note: Fully qualified image name will be of the format: '`<registry`>/`<repository`>:<b>`<tag`></b>'. For example, 'myregistry.azurecr.io/nginx:<b>latest</b>'."
        },
        {
            "name": "DockerNamespace",
            "type": "string",
            "label": "Registry or Namespace",
            "defaultValue": "",
            "required": true,
            "visibleRule": "WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry",
            "helpMarkDown": "A globally unique top-level domain name for your specific registry or namespace.<br/> Note: Fully qualified image name will be of the format: '<b>`<registry or namespace`></b>/`<repository`>:`<tag`>'. For example, '<b>myregistry.azurecr.io</b>/nginx:latest'."
        },
        {
            "name": "DockerRepository",
            "type": "string",
            "label": "Image",
            "defaultValue": "",
            "required": true,
            "visibleRule": "WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry",
            "helpMarkDown": "Name of the repository where the container images are stored.<br/> Note: Fully qualified image name will be of the format: '`<registry or namespace`>/<b>`<repository`></b>:`<tag`>'. For example, 'myregistry.azurecr.io/<b>nginx</b>:latest'."
        },
        {
            "name": "DockerImageTag",
            "type": "string",
            "label": "Tag",
            "defaultValue": "",
            "required": false,
            "visibleRule": "WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry",
            "helpMarkDown": "Tags are optional, it is the mechanism that registries use to give Docker images a version.<br/> Note: Fully qualified image name will be of the format: '`<registry or namespace`>/`<repository`>:<b>`<tag`></b>'. For example, 'myregistry.azurecr.io/nginx:<b>latest</b>'."
        },
        {
            "name": "VirtualApplication",
            "type": "string",
            "label": "Virtual application",
            "defaultValue": "",
            "required": false,
            "visibleRule": "WebAppKind != linux && WebAppKind != applinux && WebAppKind != \"\"",
            "helpMarkDown": "Specify the name of the Virtual application that has been configured in the Azure portal. The option is not required for deployments to the App Service root."
        },
        {
            "name": "Package",
            "type": "filePath",
            "label": "Package or folder",
            "defaultValue": "$(System.DefaultWorkingDirectory)/**/*.zip",
            "required": true,
            "visibleRule": "WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != \"\"",
            "helpMarkDown": "File path to the package or a folder containing app service contents generated by MSBuild or a compressed zip or war file.<br />Variables ( [Build](https://www.visualstudio.com/docs/build/define/variables) | [Release](https://www.visualstudio.com/docs/release/author-release-definition/understanding-tasks#predefvariables)), wild cards are supported. <br/> For example, $(System.DefaultWorkingDirectory)/\\*\\*/\\*.zip or $(System.DefaultWorkingDirectory)/\\*\\*/\\*.war."
        },
        {
            "name": "BuiltinLinuxPackage",
            "aliases": [
                "packageForLinux"
            ],
            "type": "filePath",
            "label": "Package or folder",
            "defaultValue": "$(System.DefaultWorkingDirectory)/**/*.zip",
            "required": true,
            "visibleRule": "WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin",
            "helpMarkDown": "File path to the package or a folder containing app service contents generated by MSBuild or a compressed zip or war file.<br />Variables ( [Build](https://www.visualstudio.com/docs/build/define/variables) | [Release](https://www.visualstudio.com/docs/release/author-release-definition/understanding-tasks#predefvariables)), wild cards are supported. <br/> For example, $(System.DefaultWorkingDirectory)/\\*\\*/\\*.zip or $(System.DefaultWorkingDirectory)/\\*\\*/\\*.war."
        },
        {
            "name": "RuntimeStack",
            "type": "pickList",
            "label": "Runtime Stack",
            "defaultValue": "",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "helpMarkDown": "Select the framework and version.",
            "visibleRule": "WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin"
        },
        {
            "name": "StartupCommand",
            "type": "string",
            "label": "Startup command ",
            "defaultValue": "",
            "required": false,
            "visibleRule": "WebAppKind = applinux || WebAppKind = linux",
            "helpMarkDown": "Enter the start up command."
        },
        {
            "name": "WebAppUri",
            "type": "string",
            "label": "App Service URL",
            "required": false,
            "defaultValue": "",
            "groupName": "output",
            "helpMarkDown": "Specify a name for the output variable that is generated for the URL of the Azure App Service. The variable can be consumed in subsequent tasks."
        },
        {
            "name": "ScriptType",
            "type": "pickList",
            "label": "Deployment script type",
            "defaultValue": "",
            "options": {
                "": "Select deployment script type (inline or file)",
                "Inline Script": "Inline Script",
                "File Path": "Script File Path"
            },
            "groupName": "PostDeploymentAction",
            "helpMarkDown": "Customize the deployment by providing a script that will run on the Azure App service once the task has completed the deployment successfully . For example restore packages for Node, PHP, Python applications. [Learn more](https://go.microsoft.com/fwlink/?linkid=843471)."
        },
        {
            "name": "InlineScript",
            "type": "multiLine",
            "label": "Inline Script",
            "defaultValue": ":: You can provide your deployment commands here. One command per line.",
            "groupName": "PostDeploymentAction",
            "required": true,
            "visibleRule": "ScriptType == Inline Script",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "500"
            }
        },
        {
            "name": "ScriptPath",
            "type": "filePath",
            "label": "Deployment script path",
            "required": true,
            "groupName": "PostDeploymentAction",
            "visibleRule": "ScriptType == File Path"
        },
        {
            "name": "GenerateWebConfig",
            "type": "boolean",
            "label": "Generate Web.config",
            "defaultValue": "false",
            "required": false,
            "groupName": "FileTransformsAndVariableSubstitution",
            "helpMarkDown": "A standard Web.config will be generated and deployed to Azure App Service if the application does not have one. The values in web.config can be edited and vary based on the application framework. For example for node.js application, web.config will have startup file and iis_node module values. [Learn more](https://go.microsoft.com/fwlink/?linkid=843469)."
        },
        {
            "name": "WebConfigParameters",
            "type": "multiLine",
            "label": "Web.config parameters",
            "required": true,
            "defaultValue": "",
            "visibleRule": "GenerateWebConfig == true",
            "groupName": "FileTransformsAndVariableSubstitution",
            "helpMarkDown": "Edit values like startup file in the generated web.config file. This edit feature is only for the generated web.config. [Learn more](https://go.microsoft.com/fwlink/?linkid=843469).",
            "properties": {
                "editorExtension": "ms.vss-services-azure.webconfig-parameters-grid"
            }
        },
        {
            "name": "AppSettings",
            "type": "multiLine",
            "label": "App settings",
            "defaultValue": "",
            "required": false,
            "groupName": "ApplicationAndConfigurationSettings",
            "helpMarkDown": "Edit web app application settings following the syntax -key value . Value containing spaces should be enclosed in double quotes.<br /> <b>Example</b> : -Port 5000 -RequestTimeout 5000 <br /> -WEBSITE_TIME_ZONE \"Eastern Standard Time\"",
            "properties": {
                "editorExtension": "ms.vss-services-azure.parameters-grid"
            }
        },
        {
            "name": "ConfigurationSettings",
            "type": "multiLine",
            "label": "Configuration settings",
            "defaultValue": "",
            "required": false,
            "groupName": "ApplicationAndConfigurationSettings",
            "helpMarkDown": "Edit web app configuration settings following the syntax -key value. Value containing spaces should be enclosed in double quotes.<br /> Example : -phpVersion 5.6 -linuxFxVersion: node|6.11",
            "properties": {
                "editorExtension": "ms.vss-services-azure.parameters-grid"
            }
        },
        {
            "name": "TakeAppOfflineFlag",
            "type": "boolean",
            "label": "Take App Offline",
            "defaultValue": "false",
            "required": false,
            "groupName": "AdditionalDeploymentOptions",
            "helpMarkDown": "Select the option to take the Azure App Service offline by placing an app_offline.htm file in the root directory of the App Service before the sync operation begins. The file will be removed after the sync operation completes successfully."
        },
        {
            "name": "UseWebDeploy",
            "type": "boolean",
            "label": "Publish using Web Deploy",
            "required": false,
            "defaultValue": "false",
            "groupName": "AdditionalDeploymentOptions",
            "helpMarkDown": "Publish using Web Deploy options are supported only when using Windows agent. On other platforms, the task relies on [Kudu REST APIs](https://github.com/projectkudu/kudu/wiki/REST-API) to deploy the Azure App Service, and following options are not supported"
        },
        {
            "name": "SetParametersFile",
            "type": "filePath",
            "label": "SetParameters file",
            "defaultValue": "",
            "required": false,
            "groupName": "AdditionalDeploymentOptions",
            "visibleRule": "UseWebDeploy == true",
            "helpMarkDown": "Optional: location of the SetParameters.xml file to use."
        },
        {
            "name": "RemoveAdditionalFilesFlag",
            "type": "boolean",
            "label": "Remove additional files at destination",
            "defaultValue": "false",
            "required": false,
            "groupName": "AdditionalDeploymentOptions",
            "visibleRule": "UseWebDeploy == true",
            "helpMarkDown": "Select the option to delete files on the Azure App Service that have no matching files in the App Service package or folder.<br /><br />Note: This will also remove all files related to any extension installed on this Azure App Service. To prevent this, select 'Exclude files from App_Data folder' checkbox. "
        },
        {
            "name": "ExcludeFilesFromAppDataFlag",
            "type": "boolean",
            "label": "Exclude files from the App_Data folder",
            "defaultValue": "false",
            "required": false,
            "groupName": "AdditionalDeploymentOptions",
            "visibleRule": "UseWebDeploy == true",
            "helpMarkDown": "Select the option to prevent files in the App_Data folder from being deployed to/ deleted from the Azure App Service."
        },
        {
            "name": "AdditionalArguments",
            "type": "string",
            "label": "Additional arguments",
            "required": false,
            "defaultValue": "",
            "groupName": "AdditionalDeploymentOptions",
            "visibleRule": "UseWebDeploy == true",
            "helpMarkDown": "Additional Web Deploy arguments following the syntax -key:value .<br />These will be applied when deploying the Azure App Service. Example: -disableLink:AppPoolExtension -disableLink:ContentExtension.<br />For more examples of Web Deploy operation settings, refer to  [this](https://go.microsoft.com/fwlink/?linkid=838471)."
        },
        {
            "name": "RenameFilesFlag",
            "type": "boolean",
            "label": "Rename locked files",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "UseWebDeploy == true",
            "groupName": "AdditionalDeploymentOptions",
            "helpMarkDown": "Select the option to enable msdeploy flag MSDEPLOY_RENAME_LOCKED_FILES=1 in Azure App Service application settings. The option if set enables msdeploy to rename locked files that are locked during app deployment"
        },
        {
            "name": "XmlTransformation",
            "aliases": [
                "enableXmlTransform"
            ],
            "type": "boolean",
            "label": "XML transformation",
            "required": false,
            "defaultValue": false,
            "groupName": "FileTransformsAndVariableSubstitution",
            "helpMarkDown": "The config transforms will be run for `*.Release.config` and `*.<EnvironmentName>.config` on the `*.config file`.<br/> Config transforms will be run prior to the Variable Substitution.<br/>XML transformations are supported only for Windows platform."
        },
        {
            "name": "XmlVariableSubstitution",
            "aliases": [
                "enableXmlVariableSubstitution"
            ],
            "type": "boolean",
            "label": "XML variable substitution",
            "required": false,
            "defaultValue": false,
            "groupName": "FileTransformsAndVariableSubstitution",
            "helpMarkDown": "Variables defined in the build or release pipeline will be matched against the 'key' or 'name' entries in the appSettings, applicationSettings, and connectionStrings sections of any config file and parameters.xml. Variable Substitution is run after config transforms. <br/><br/> Note: If same variables are defined in the release pipeline and in the Environment, then the Environment variables will supersede the release pipeline variables.<br/>"
        },
        {
            "name": "JSONFiles",
            "type": "multiLine",
            "label": "JSON variable substitution",
            "required": false,
            "defaultValue": "",
            "groupName": "FileTransformsAndVariableSubstitution",
            "helpMarkDown": "Provide new line separated list of JSON files to substitute the variable values. Files names are to be provided relative to the root folder. <br/> To substitute JSON variables that are nested or hierarchical, specify them using JSONPath expressions. <br/> <br/> For example, to replace the value of ‘ConnectionString’ in the sample below, you need to define a variable as ‘Data.DefaultConnection.ConnectionString’ in the build/release pipeline (or release pipeline’s environment). <br/> {<br/>&nbsp;&nbsp;\"Data\": {<br/>&nbsp;&nbsp;&nbsp;&nbsp;\"DefaultConnection\": {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"ConnectionString\": \"Server=(localdb)\\SQLEXPRESS;Database=MyDB;Trusted_Connection=True\"<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;}<br/> }<br/> Variable Substitution is run after configuration transforms. <br/><br/> Note: pipeline variables are excluded in substitution."
        }
    ],
    "dataSourceBindings": [
        {
            "target": "WebAppName",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMWebAppNamesByType",
            "parameters": {
                "WebAppKind": "$(WebAppKind)"
            }
        },
        {
            "target": "ResourceGroupName",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMWebAppResourceGroup",
            "parameters": {
                "WebAppName": "$(WebAppName)"
            }
        },
        {
            "target": "SlotName",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMWebAppSlotsId",
            "parameters": {
                "WebAppName": "$(WebAppName)",
                "ResourceGroupName": "$(ResourceGroupName)"
            },
            "resultTemplate": "{\"Value\":\"{{{ #extractResource slots}}}\",\"DisplayValue\":\"{{{ #extractResource slots}}}\"}"
        },
        {
            "target": "AzureContainerRegistry",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMContainerRegistries",
            "resultTemplate": "{\"Value\":\"{{{ name }}}\",\"DisplayValue\":\"{{{ name }}}\"}"
        },
        {
            "target": "AzureContainerRegistryLoginServer",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureContainerRegistryLoginServer",
            "parameters": {
                "AzureContainerRegistry": "$(AzureContainerRegistry)"
            },
            "resultTemplate": "{\"Value\":\"{{{ #stringReplace '.azurecr.io' '' loginServer }}}\",\"DisplayValue\":\"{{{ #stringReplace '.azurecr.io' '' loginServer }}}\"}"
        },
        {
            "target": "AzureContainerRegistryImage",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureContainerRegistryImages",
            "parameters": {
                "AzureContainerRegistryLoginServer": "$(AzureContainerRegistryLoginServer)"
            }
        },
        {
            "target": "AzureContainerRegistryTag",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureContainerRegistryTags",
            "parameters": {
                "AzureContainerRegistryLoginServer": "$(AzureContainerRegistryLoginServer)",
                "AzureContainerRegistryImage": "$(AzureContainerRegistryImage)"
            }
        },
        {
            "target": "DockerNamespace",
            "endpointId": "$(RegistryConnectedServiceName)",
            "dataSourceName": "Namespaces"
        },
        {
            "target": "DockerRepository",
            "endpointId": "$(RegistryConnectedServiceName)",
            "dataSourceName": "Repos",
            "parameters": {
                "namespaces": "$(DockerNamespace)"
            }
        },
        {
            "target": "DockerImageTag",
            "endpointId": "$(RegistryConnectedServiceName)",
            "dataSourceName": "Tags",
            "parameters": {
                "DockerNamespace": "$(DockerNamespace)",
                "DockerRepository": "$(DockerRepository)"
            }
        },
        {
            "target": "PrivateRegistryImage",
            "endpointId": "$(RegistryConnectedServiceName)",
            "endpointUrl": "{{endpoint.url}}v2/_catalog",
            "resultSelector": "jsonpath:$.repositories[*]",
            "authorizationHeader": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
        },
        {
            "target": "PrivateRegistryTag",
            "endpointId": "$(RegistryConnectedServiceName)",
            "endpointUrl": "{{endpoint.url}}v2/$(PrivateRegistryImage)/tags/list",
            "resultSelector": "jsonpath:$.tags[*]",
            "authorizationHeader": "Basic {{ #base64 endpoint.username \":\" endpoint.password }}"
        },
        {
            "target": "RuntimeStack",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureRMWebAppRuntimeStacksByOsType",
            "parameters": {
                "osTypeSelected": "Linux"
            },
            "resultTemplate": "{\"Value\":\"{{{ runtimeVersion }}}\",\"DisplayValue\":\"{{{ displayVersion }}}\"}"
        }
    ],
    "instanceNameFormat": "Azure App Service Deploy: $(WebAppName)",
    "execution": {
        "Node10": {
            "target": "azurermwebappdeployment.js"
        }
    },
    "messages": {
        "Invalidwebapppackageorfolderpathprovided": "Invalid App Service package or folder path provided: %s",
        "SetParamFilenotfound0": "Set parameters file not found: %s",
        "XDTTransformationsappliedsuccessfully": "XML Transformations applied successfully",
        "GotconnectiondetailsforazureRMWebApp0": "Got connection details for Azure App Service:'%s'",
        "ErrorNoSuchDeployingMethodExists": "Error : No such deploying method exists",
        "UnabletoretrieveconnectiondetailsforazureRMWebApp": "Unable to retrieve connection details for Azure App Service : %s. Status Code: %s (%s)",
        "UnabletoretrieveResourceID": "Unable to retrieve connection details for Azure Resource:'%s'. Status Code: %s",
        "CouldnotfetchaccesstokenforAzureStatusCode": "Could not fetch access token for Azure. Status Code: %s (%s)",
        "Successfullyupdateddeploymenthistory": "Successfully updated deployment History at %s",
        "Failedtoupdatedeploymenthistory": "Failed to update deployment history. Error: %s",
        "WARNINGCannotupdatedeploymentstatusSCMendpointisnotenabledforthiswebsite": "WARNING : Cannot update deployment status : SCM endpoint is not enabled for this website",
        "Unabletoretrievewebconfigdetails": "Unable to retrieve App Service configuration details. Status Code: '%s'",
        "Unabletoretrievewebappsettings": "Unable to retrieve App Service application settings. [Status Code: '%s', Error Message: '%s']",
        "Unabletoupdatewebappsettings": "Unable to update App service application settings. Status Code: '%s'",
        "CannotupdatedeploymentstatusuniquedeploymentIdCannotBeRetrieved": "Cannot update deployment status : Unique Deployment ID cannot be retrieved",
        "PackageDeploymentSuccess": "Successfully deployed web package to App Service.",
        "PackageDeploymentFailed": "Failed to deploy web package to App Service.",
        "Runningcommand": "Running command: %s",
        "Deployingwebapplicationatvirtualpathandphysicalpath": "Deploying web package : %s at virtual path (physical path) : %s (%s)",
        "Successfullydeployedpackageusingkuduserviceat": "Successfully deployed package %s using kudu service at %s",
        "Failedtodeploywebapppackageusingkuduservice": "Failed to deploy App Service package using kudu service : %s",
        "Unabletodeploywebappresponsecode": "Unable to deploy App Service due to error code : %s",
        "MSDeploygeneratedpackageareonlysupportedforWindowsplatform": "MSDeploy generated packages are only supported for Windows platform.",
        "UnsupportedinstalledversionfoundforMSDeployversionshouldbeatleast3orabove": "Unsupported installed version: %s found for MSDeploy. version should be at least 3 or above",
        "UnabletofindthelocationofMSDeployfromregistryonmachineError": "Unable to find the location of MS Deploy from registry on machine (Error : %s)",
        "Nopackagefoundwithspecifiedpattern": "No package found with specified pattern: %s<br/>Check if the package mentioned in the task is published as an artifact in the build or a previous stage and downloaded in the current job.",
        "MorethanonepackagematchedwithspecifiedpatternPleaserestrainthesearchpattern": "More than one package matched with specified pattern: %s. Please restrain the search pattern.",
        "Trytodeploywebappagainwithappofflineoptionselected": "Try to deploy app service again with Take application offline option selected.",
        "Trytodeploywebappagainwithrenamefileoptionselected": "Try to deploy app service again with Rename locked files option selected.",
        "NOJSONfilematchedwithspecificpattern": "NO JSON file matched with specific pattern: %s.",
        "Configfiledoesntexists": "Configuration file %s doesn't exist.",
        "Failedtowritetoconfigfilewitherror": "Failed to write to config file %s with error : %s",
        "AppOfflineModeenabled": "App offline mode enabled.",
        "Failedtoenableappofflinemode": "Failed to enable app offline mode. Status Code: %s (%s)",
        "AppOflineModedisabled": "App offline mode disabled.",
        "FailedtodisableAppOfflineMode": "Failed to disable App offline mode. Status Code: %s (%s)",
        "CannotPerformXdtTransformationOnNonWindowsPlatform": "Cannot perform XML transformations on a non-Windows platform.",
        "XdtTransformationErrorWhileTransforming": "XML transformation error while transforming %s using %s.",
        "PublishusingwebdeployoptionsaresupportedonlywhenusingWindowsagent": "Publish using webdeploy options are supported only when using Windows agent",
        "ResourceDoesntExist": "Resource '%s' doesn't exist. Resource should exist before deployment.",
        "EncodeNotSupported": "Detected file encoding of the file %s as %s. Variable substitution is not supported with file encoding %s. Supported encodings are UTF-8 and UTF-16 LE.",
        "UnknownFileEncodeError": "Unable to detect encoding of the file %s (typeCode: %s). Supported encodings are UTF-8 and UTF-16 LE.",
        "ShortFileBufferError": "File buffer is too short to detect encoding type : %s",
        "FailedToUpdateAzureRMWebAppConfigDetails": "Failed to update App Service configuration details. Error: %s",
        "SuccessfullyUpdatedAzureRMWebAppConfigDetails": "Successfully updated App Service configuration details",
        "RequestedURLforkuduphysicalpath": "Requested URL for kudu physical path : %s",
        "Physicalpathalreadyexists": "Physical path '%s' already exists",
        "KuduPhysicalpathCreatedSuccessfully": "Kudu physical path created successfully : %s",
        "FailedtocreateKuduPhysicalPath": "Failed to create kudu physical path. Error : %s",
        "FailedtocheckphysicalPath": "Failed to check kudu physical path. Error Code: %s",
        "VirtualApplicationDoesNotExist": "Virtual application doesn't exists : %s",
        "JSONParseError": "Unable to parse JSON file: %s. Error: %s",
        "JSONvariablesubstitutionappliedsuccessfully": "JSON variable substitution applied successfully.",
        "XMLvariablesubstitutionappliedsuccessfully": "XML variable substitution applied successfully.",
        "failedtoUploadFileToKudu": "Unable to upload file: %s to Kudu (%s). Status Code: %s",
        "failedtoUploadFileToKuduError": "Unable to upload file: %s to Kudu (%s). Error: %s",
        "ExecuteScriptOnKudu": "Executing given script on Kudu service.",
        "FailedToRunScriptOnKuduError": "Unable to run the script on Kudu Service. Error: %s",
        "FailedToRunScriptOnKudu": "Unable to run the script on Kudu: %s. Status Code: %s",
        "ScriptExecutionOnKuduSuccess": "Successfully executed script on Kudu.",
        "ScriptExecutionOnKuduFailed": "Executed script returned '%s' as return code. Error: %s",
        "FailedtoDeleteFileFromKudu": "Unable to delete file: %s from Kudu (%s). Status Code: %s",
        "FailedtoDeleteFileFromKuduError": "Unable to delete file: %s from Kudu (%s). Error: %s",
        "ScriptFileNotFound": "Script file '%s' not found.",
        "InvalidScriptFile": "Invalid script file '%s' provided. Valid extensions are .bat and .cmd for windows and .sh for linux",
        "RetryForTimeoutIssue": "Script execution failed with timeout issue. Retrying once again.",
        "stdoutFromScript": "Standard output from script: ",
        "stderrFromScript": "Standard error from script: ",
        "WebConfigAlreadyExists": "web.config file already exists. Not generating.",
        "SuccessfullyGeneratedWebConfig": "Successfully generated web.config file",
        "FailedToGenerateWebConfig": "Failed to generate web.config. %s",
        "FailedToGetKuduFileContent": "Unable to get file content: %s . Status code: %s (%s)",
        "FailedToGetKuduFileContentError": "Unable to get file content: %s. Error: %s",
        "ScriptStatusTimeout": "Unable to fetch script status due to timeout.",
        "PollingForFileTimeOut": "Unable to fetch script status due to timeout. You can increase the timeout limit by setting 'appservicedeploy.retrytimeout' variable to number of minutes required.",
        "InvalidPollOption": "Invalid polling option provided: %s.",
        "MissingAppTypeWebConfigParameters": "Attribute '-appType' is missing in the Web.config parameters. Valid values for '-appType' are: 'python_Bottle', 'python_Django', 'python_Flask', 'node' and 'Go'.<br />For example, '-appType python_Bottle' (sans-quotes) in case of Python Bottle framework..",
        "AutoDetectDjangoSettingsFailed": "Unable to detect DJANGO_SETTINGS_MODULE 'settings.py' file path. Ensure that the 'settings.py' file exists or provide the correct path in Web.config parameter input in the following format '-DJANGO_SETTINGS_MODULE <folder_name>.settings'",
        "FailedToApplyTransformation": "Unable to apply transformation for the given package. Verify the following.",
        "FailedToApplyTransformationReason1": "1. Whether the Transformation is already applied for the MSBuild generated package during build. If yes, remove the <DependentUpon> tag for each config in the csproj file and rebuild. ",
        "FailedToApplyTransformationReason2": "2. Ensure that the config file and transformation files are present in the same folder inside the package.",
        "AutoParameterizationMessage": "ConnectionString attributes in Web.config is parameterized by default. Note that the transformation has no effect on connectionString attributes as the value is overridden during deployment by 'Parameters.xml or 'SetParameters.xml' files. You can disable the auto-parameterization by setting /p:AutoParameterizationWebConfigConnectionStrings=False during MSBuild package generation.",
        "UnsupportedAppType": "App type '%s' not supported in Web.config generation. Valid values for '-appType' are: 'python_Bottle', 'python_Django', 'python_Flask' and 'node'",
        "UnableToFetchAuthorityURL": "Unable to fetch authority url.",
        "UnableToFetchActiveDirectory": "Unable to fetch active directory resource id.",
        "SuccessfullyUpdatedRuntimeStackAndStartupCommand": "Successfully updated the Runtime Stack and Startup Command.",
        "FailedToUpdateRuntimeStackAndStartupCommand": "Failed to update the Runtime Stack and Startup Command. Error: %s.",
        "SuccessfullyUpdatedWebAppSettings": "Successfully updated the App settings.",
        "FailedToUpdateAppSettingsInConfigDetails": "Failed to update the App settings. Error: %s.",
        "UnableToGetAzureRMWebAppMetadata": "Failed to fetch AzureRM WebApp metadata. ErrorCode: %s",
        "UnableToUpdateAzureRMWebAppMetadata": "Unable to update AzureRM WebApp metadata. Error Code: %s",
        "Unabletoretrieveazureregistrycredentials": "Unable to retrieve Azure Container Registry credentails.[Status Code: '%s']",
        "UnableToReadResponseBody": "Unable to read response body. Error: %s",
        "UnableToUpdateWebAppConfigDetails": "Unable to update WebApp config details. StatusCode: '%s'",
        "AddingReleaseAnnotation": "Adding release annotation for the Application Insights resource '%s'",
        "SuccessfullyAddedReleaseAnnotation": "Successfully added release annotation to the Application Insight : %s",
        "FailedAddingReleaseAnnotation": "Failed to add release annotation. %s",
        "RenameLockedFilesEnabled": "Rename locked files enabled for App Service.",
        "FailedToEnableRenameLockedFiles": "Failed to enable rename locked files. Error: %s",
        "WebJobsInProgressIssue": "Few WebJobs in running state prevents the deployment from removing the files. You can disable 'Remove additional files at destinaton' option or Stop continuous Jobs before deployment.",
        "FailedToFetchKuduAppSettings": "Failed to fetch Kudu App Settings. Error: %s",
        "FailedToCreatePath": "Failed to create path '%s' from Kudu. Error: %s",
        "FailedToDeleteFile": "Failed to delete file '%s/%s' from Kudu. Error: %s",
        "FailedToUploadFile": "Failed to upload file '%s/%s' from Kudu. Error: %s",
        "FailedToGetFileContent": "Failed to get file content '%s/%s' from Kudu. Error: %s",
        "FailedToListPath": "Failed to list path '%s' from Kudu. Error: %s",
        "RetryToDeploy": "Retrying to deploy the package.",
        "FailedToGetAppServiceDetails": "Failed to fetch App Service '%s' details. Error: %s",
        "FailedToGetAppServicePublishingProfile": "Failed to fetch App Service '%s' publishing profile. Error: %s",
        "FailedToUpdateAppServiceMetadata": "Failed to update App service '%s' Meta data. Error: %s",
        "FailedToGetAppServiceMetadata": "Failed to get App service '%s' Meta data. Error: %s",
        "FailedToPatchAppServiceConfiguration": "Failed to patch App Service '%s' configuration. Error: %s",
        "FailedToUpdateAppServiceConfiguration": "Failed to update App service '%s' configuration. Error: %s",
        "FailedToGetAppServiceConfiguration": "Failed to get App service '%s' configuration. Error: %s",
        "FailedToGetAppServicePublishingCredentials": "Failed to fetch App Service '%s' publishing credentials. Error: %s",
        "FailedToGetAppServiceApplicationSettings": "Failed to get App service '%s' application settings. Error: %s",
        "FailedToUpdateAppServiceApplicationSettings": "Failed to update App service '%s' application settings. Error: %s",
        "UpdatingAppServiceConfigurationSettings": "Updating App Service Configuration settings. Data: %s",
        "UpdatedAppServiceConfigurationSettings": "Updated App Service Configuration settings.",
        "UpdatingAppServiceApplicationSettings": "Updating App Service Application settings. Data: %s",
        "UpdatedAppServiceApplicationSettings": "Updated App Service Application settings and Kudu Application settings.",
        "MultipleResourceGroupFoundForAppService": "Multiple resource group found for App Service '%s'.",
        "PackageDeploymentUsingZipDeployFailed": "Package deployment using ZIP Deploy failed. Refer logs for more details.",
        "PackageDeploymentInitiated": "Package deployment using ZIP Deploy initiated.",
        "FailedToGetDeploymentLogs": "Failed to get deployment logs. Error: %s",
        "GoExeNameNotPresent": "Go exe name is not present",
        "WarDeploymentRetry": "Retrying war file deployment as it did not expand successfully earlier.",
        "Updatemachinetoenablesecuretlsprotocol": "Make sure the machine is using TLS 1.2 protocol or higher. Check https://aka.ms/enableTlsv2 for more information on how to enable TLS in your machine.",
        "FailedToGetResourceID": "Failed to get resource ID for resource type '%s' and resource name '%s'. Error: %s",
        "CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
        "ASE_SSLIssueRecommendation": "To use a certificate in App Service, the certificate must be signed by a trusted certificate authority. If your web app gives you certificate validation errors, you're probably using a self-signed certificate and to resolve them you need to set a variable named VSTS_ARM_REST_IGNORE_SSL_ERRORS to the value true in the build or release pipeline",
        "ASE_WebDeploySSLIssueRecommendation": "To use a certificate in App Service, the certificate must be signed by a trusted certificate authority. If your web app gives you certificate validation errors, you're probably using a self-signed certificate and to resolve them you need to pass -allowUntrusted in additional arguments of web deploy option.",
        "FailedToUpdateApplicationInsightsResource": "Failed to update Application Insights '%s' Resource. Error: %s",
        "JarNotSupported": "Jar deployment is not supported in this version. Change the task version to '4.*' which is in preview mode",
        "CorrelationIdForARM": "Correlation ID from ARM api call response : %s"
    }
}