{
    "id": "d8b84976-e99a-4b86-b885-4849694435b0",
    "name": "ArchiveFiles",
    "friendlyName": "Archive files",
    "description": "Compress files into .7z, .tar.gz, or .zip",
    "author": "Microsoft Corporation",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/archive-files",
    "helpMarkDown": "[Learn more about this task](http://go.microsoft.com/fwlink/?LinkId=809083)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "demands": [],
    "minimumAgentVersion": "2.182.1",
    "version": {
        "Major": 2,
        "Minor": 189,
        "Patch": 0
    },
    "groups": [
        {
            "name": "archive",
            "displayName": "Archive",
            "isExpanded": true
        }
    ],
    "instanceNameFormat": "Archive $(rootFolderOrFile)",
    "inputs": [
        {
            "name": "rootFolderOrFile",
            "type": "filePath",
            "label": "Root folder or file to archive",
            "defaultValue": "$(Build.BinariesDirectory)",
            "required": true,
            "helpMarkDown": "Enter the root folder or file path to add to the archive. If a folder, everything under the folder will be added to the resulting archive."
        },
        {
            "name": "includeRootFolder",
            "type": "boolean",
            "label": "Prepend root folder name to archive paths",
            "defaultValue": true,
            "required": true,
            "helpMarkDown": "If selected, the root folder name will be prepended to file paths within the archive. Otherwise, all file paths will start one level lower.<p>For example, suppose the selected root folder is: <b>`/home/user/output/classes/`</b>, and contains: <b>`com/acme/Main.class`</b>. <ul><li>If selected, the resulting archive would contain: <b>`classes/com/acme/Main.class`</b>.</li><li>Otherwise, the resulting archive would contain: <b>`com/acme/Main.class`</b>.</li></ul>"
        },
        {
            "name": "archiveType",
            "type": "pickList",
            "label": "Archive type",
            "required": true,
            "defaultValue": "zip",
            "helpMarkDown": "Specify the compression scheme used.  To create <b>`foo.jar`</b>, for example, choose <b>`zip`</b> for the compression, and specify <b>`foo.jar`</b> as the archive file to create.  For all tar files (including compressed ones), choose <b>`tar`</b>.",
            "groupName": "archive",
            "options": {
                "zip": "zip",
                "7z": "7z",
                "tar": "tar",
                "wim": "wim"
            }
        },
        {
            "name": "sevenZipCompression",
            "type": "pickList",
            "label": "7z compression",
            "required": false,
            "defaultValue": "normal",
            "helpMarkDown": "Optionally choose a compression level, or choose <b>`None`</b> to create an uncompressed 7z file.",
            "groupName": "archive",
            "visibleRule": "archiveType = 7z",
            "options": {
                "ultra": "Ultra",
                "maximum": "Maximum",
                "normal": "Normal",
                "fast": "Fast",
                "fastest": "Fastest",
                "none": "None"
            }
        },
        {
            "name": "tarCompression",
            "type": "pickList",
            "label": "Tar compression",
            "required": false,
            "defaultValue": "gz",
            "helpMarkDown": "Optionally choose a compression scheme, or choose <b>`None`</b> to create an uncompressed tar file.",
            "groupName": "archive",
            "visibleRule": "archiveType = tar",
            "options": {
                "gz": "gz",
                "bz2": "bz2",
                "xz": "xz",
                "none": "None"
            }
        },
        {
            "name": "archiveFile",
            "type": "filePath",
            "label": "Archive file to create",
            "defaultValue": "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip",
            "required": true,
            "helpMarkDown": "Specify the name of the archive file to create.  For example, to create <b>`foo.tgz`</b>, select the <b>`tar`</b> archive type and <b>`gz`</b> for tar compression.",
            "groupName": "archive"
        },
        {
            "name": "replaceExistingArchive",
            "type": "boolean",
            "label": "Replace existing archive",
            "required": true,
            "defaultValue": "true",
            "helpMarkDown": "If an existing archive exists, specify whether to overwrite it.  Otherwise, files will be added to it.",
            "groupName": "archive"
        },
        {
            "name": "verbose",
            "type": "boolean",
            "label": "Force verbose output",
            "required": false,
            "defaultValue": false,
            "helpMarkDown": "If set to true, forces tools to use verbose output. Overrides 'quiet'",
            "groupName": "archive"
        },
        {
            "name": "quiet",
            "type": "boolean",
            "label": "Force quiet output",
            "required": false,
            "defaultValue": false,
            "helpMarkDown": "If set to true, forces tools to use quiet output. Can be overridden by 'verbose'",
            "groupName": "archive"
        }
    ],
    "execution": {
        "Node10": {
            "target": "archivefiles.js",
            "argumentFormat": ""
        }
    },
    "restrictions": {
        "commands": {
            "mode": "restricted"
        },
        "settableVariables": {
            "allowed": []
        }
    },
    "messages": {
        "Filename": "files=%s",
        "TarExists": "Intermediate tar: %s already exists.  Attempting to add files to it.",
        "RemoveBeforeCreation": "Removing existing archive file before creation: %s",
        "AlreadyExists": "Archive file: %s already exists.  Attempting to add files to it.",
        "ArchiveCreationFailedWithError": "Archive creation failed for archive file: %s \ncode: %d \nstdout: %s \nstderr: %s \nerror: %s;",
        "ArchiveFileExistsButNotAFile": "Specified archive file: %s already exists and is not a file.",
        "FailedArchiveFile": "Specified archive file: %s cannot be created because it cannot be accessed: %s",
        "FoundNFiles": "Found %d files",
        "ArchivingFile": "Archiving file: %s",
        "MoreFiles": "... %d more ..."
    }
}
