{
  "loc.friendlyName": "Maven",
  "loc.helpMarkDown": "[深入了解此工作](https://go.microsoft.com/fwlink/?LinkID=613723)或[參閱 Maven 文件](http://maven.apache.org/guides/index.html)",
  "loc.description": "透過 Apache Maven 進行建置、測試和部署",
  "loc.instanceNameFormat": "Maven $(mavenPOMFile)",
  "loc.releaseNotes": "SonarQube 分析的設定已移至 [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) 或 [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) 延伸模組，位於 `Prepare Analysis Configuration` 工作中",
  "loc.group.displayName.junitTestResults": "JUnit 測試結果",
  "loc.group.displayName.codeCoverage": "程式碼涵蓋範圍",
  "loc.group.displayName.advanced": "進階",
  "loc.group.displayName.CodeAnalysis": "程式碼分析",
  "loc.input.label.mavenPOMFile": "Maven POM 檔案",
  "loc.input.help.mavenPOMFile": "從存放庫根路徑到 Maven POM 檔案的相對路徑。",
  "loc.input.label.goals": "目標",
  "loc.input.label.options": "選項",
  "loc.input.label.publishJUnitResults": "發佈至 Azure Pipelines",
  "loc.input.help.publishJUnitResults": "選取此選項會將 Maven 組建所產生的 JUnit 測試結果發佈至 Azure Pipelines。每個與「測試結果檔案」相符的測試結果檔案都將在 Azure Pipelines 中以測試回合發佈。",
  "loc.input.label.testResultsFiles": "測試結果檔案",
  "loc.input.help.testResultsFiles": "指定要發佈之測試結果檔案的路徑與模式。可使用萬用字元 ([詳細資訊](https://go.microsoft.com/fwlink/?linkid=856077))。例如 `**/TEST-*.xml` 表示名稱開頭為 'TEST-' 的所有 XML 檔案。若未指定任何根路徑，會比對預設工作目錄下的檔案，預設工作目錄的值由下列變數提供: $(System.DefaultWorkingDirectory)。例如，若值為 '**/TEST-*.xml'，實際比對時，會從 '$(System.DefaultWorkingDirectory)/**/TEST-*.xml' 比對檔案。",
  "loc.input.label.testRunTitle": "測試回合標題",
  "loc.input.help.testRunTitle": "提供測試回合的名稱。",
  "loc.input.label.allowBrokenSymbolicLinks": "允許中斷的符號連結",
  "loc.input.help.allowBrokenSymbolicLinks": "設定為 false，當工作在發佈測試結果期間發現中斷的符號連結時，將使組建失敗",
  "loc.input.label.codeCoverageTool": "程式碼涵蓋範圍工具",
  "loc.input.help.codeCoverageTool": "選取程式碼涵蓋範圍工具。",
  "loc.input.label.classFilter": "類別包含/排除篩選",
  "loc.input.help.classFilter": "以逗號分隔的清單，內含可從收集程式碼涵蓋範圍將類別加以包含或排除的篩選條件。例如: +:com.*,+:org.*,-:my.app*.*。",
  "loc.input.label.classFilesDirectories": "類別檔案目錄",
  "loc.input.help.classFilesDirectories": "多模組專案需要此欄位。請指定以逗號分隔的清單，內含從 Maven POM 檔案到包含類別檔案和封存檔案 (JAR、WAR 等) 的相對目錄。回報的程式碼涵蓋範圍為這些目錄中的類別檔案。例如: target/classes,target/testClasses。",
  "loc.input.label.srcDirectories": "原始程式檔目錄",
  "loc.input.help.srcDirectories": "多模組專案需要此欄位。請指定以逗號分隔的清單，內含從 Maven POM 檔案到原始程式碼目錄的相對路徑。程式碼涵蓋範圍報表會加以使用，以強調顯示原始程式碼。例如: src/java,src/Test。",
  "loc.input.label.failIfCoverageEmpty": "遺漏程式碼涵蓋範圍結果時失敗",
  "loc.input.help.failIfCoverageEmpty": "如果程式碼涵蓋範圍未產生任何可發行的結果，則建置失敗。",
  "loc.input.label.restoreOriginalPomXml": "執行工作後即還原原始的 pom.xml",
  "loc.input.help.restoreOriginalPomXml": "程式碼涵蓋範圍會修改 pom.xml 以產生結果。如果需要保留原始的 pom.xml，請使用此選項。",
  "loc.input.label.javaHomeSelection": "設定 JAVA_HOME 由",
  "loc.input.help.javaHomeSelection": "選取一個能在組建期間探索到的 JDK 版本，或者手動輸入 JDK 路徑，均能為 JAVA_HOME 進行設定。",
  "loc.input.label.jdkVersion": "JDK 版本",
  "loc.input.help.jdkVersion": "將嘗試探索所選取 JDK 版本的路徑並據此設定 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK 路徑",
  "loc.input.help.jdkUserInputPath": "將 JAVA_HOME 設定為指定路徑。",
  "loc.input.label.jdkArchitecture": "JDK 架構",
  "loc.input.help.jdkArchitecture": "選擇性地提供 JDK 的架構 (x86、x64)。",
  "loc.input.label.mavenVersionSelection": "Maven 版本",
  "loc.input.help.mavenVersionSelection": "使用預設的 Maven 版本，或使用指定自訂路徑中的版本。",
  "loc.input.label.mavenPath": "Maven 路徑",
  "loc.input.help.mavenPath": "提供 Maven 安裝的自訂路徑 (例如 /usr/share/maven)。",
  "loc.input.label.mavenSetM2Home": "設定 M2_HOME 變數",
  "loc.input.help.mavenSetM2Home": "將 M2_HOME 變數設為自訂 Maven 安裝路徑。",
  "loc.input.label.mavenOpts": "將 MAVEN_OPTS 設為",
  "loc.input.help.mavenOpts": "設定 MAVEN_OPTS 環境變數，用以傳送命令列引數以啟動 JVM。-Xmx 旗標會指定 JVM 可用的記憶體上限。",
  "loc.input.label.mavenFeedAuthenticate": "驗證內建 Maven 摘要",
  "loc.input.help.mavenFeedAuthenticate": "從 Azure Artifacts 自動驗證內建 Maven 摘要。如果內建 Maven 摘要不在使用中，請取消選取此選項以加快建置速度。",
  "loc.input.label.skipEffectivePom": "跳過在驗證內建摘要時產生有效 POM 的作業",
  "loc.input.help.skipEffectivePom": "僅使用 POM 驗證內建的 Maven 摘要，允許 Azure Artifacts/Azure DevOps Server [套件管理] 摘要中有父 POM。",
  "loc.input.label.sqAnalysisEnabled": "執行 SonarQube 或 SonarCloud 分析",
  "loc.input.help.sqAnalysisEnabled": "此選項已從版本 1 的 **Maven** 工作變更為使用 [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) 和 [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) 市集延伸模組。啟用此選項可在於 [目標]**** 欄位中執行目標後，執行 [SonarQube 或 SonarCloud 分析](http://redirect.sonarsource.com/doc/install-configure-scanner-tfs-ts.html)。[安裝]**** 或 [套件]**** 目標應先執行。您也必須在此 Maven 工作前，將其中一個延伸模組中的 [準備分析組態]**** 工作新增至建置管線。",
  "loc.input.label.isJacocoCoverageReportXML": "使用 XML Jacoco 報表處理 SonarQube 分析",
  "loc.input.help.isJacocoCoverageReportXML": "使用 XML Jacoco 報表處理 SonarQube 分析。[詳細資訊](https://docs.sonarqube.org/latest/analysis/coverage/)",
  "loc.input.label.sqMavenPluginVersionChoice": "適用於 Maven 的 SonarQube 掃描器版本",
  "loc.input.help.sqMavenPluginVersionChoice": "要使用的 SonarQube Maven 外掛程式版本。您可以使用最新版本，或依賴 pom.xml 中的版本。",
  "loc.input.label.checkstyleAnalysisEnabled": "執行 Checkstyle",
  "loc.input.help.checkstyleAnalysisEnabled": "請以預設 Sun 檢查執行 Checkstyle 工具。結果會上傳成組建成品。",
  "loc.input.label.pmdAnalysisEnabled": "執行 PMD",
  "loc.input.help.pmdAnalysisEnabled": "使用 PMD 靜態分析工具來尋找程式碼中的 Bug。結果會上傳成組建成品。",
  "loc.input.label.findbugsAnalysisEnabled": "執行 FindBugs",
  "loc.input.help.findbugsAnalysisEnabled": "使用 FindBugs 靜態分析工具尋找程式碼中的 Bug。結果會作為組建成品上傳。",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "無法建立 TaskReport 物件。遺漏欄位: %s",
  "loc.messages.sqCommon_WaitingForAnalysis": "正在等候 SonarQube 伺服器分析組建。",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "組建未設定為等待 SonarQube 分析。將無法使用詳細的品質閘門狀態。",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "無法偵測品質閘門狀態或是已引進新狀態。",
  "loc.messages.sqCommon_InvalidResponseFromServer": "伺服器以無效或未預期的回應格式回應。",
  "loc.messages.codeAnalysis_ToolIsEnabled": "已啟用 %s 分析。",
  "loc.messages.codeAnalysis_ToolFailed": "%s 分析失敗。",
  "loc.messages.sqAnalysis_IncrementalMode": "偵測到 PR 組建 - 正在以累加模式執行 SonarQube 分析",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 分析報表",
  "loc.messages.sqAnalysis_TaskReportInvalid": "任務報表無效或遺漏。檢查 SonarQube 已順利完成。",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "詳細 SonarQube 報表",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "無法向 SonarQube 伺服器驗證。請檢查所儲存的服務連線詳細資料及伺服器的狀態。",
  "loc.messages.sqAnalysis_AnalysisTimeout": "分析未在分配的時間 %d 秒內完成。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildSummary": "提取要求組建: 將無法取得詳細的 SonarQube 組建摘要。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildBreaker": "提取要求組建: 如果品質閘道失敗，組建並不會中斷。",
  "loc.messages.sqAnalysis_BuildBrokenDueToQualityGateFailure": "與此組建建立關聯的 SonarQube 品質閘道已失敗。",
  "loc.messages.sqAnalysis_QualityGatePassed": "與此組建建立關聯的 SonarQube 品質閘道已通過 (狀態 %s)",
  "loc.messages.sqAnalysis_UnknownComparatorString": "SonarQube 組建摘要發生問題: 不明的比較子 '%s'",
  "loc.messages.sqAnalysis_NoUnitsFound": "無法從伺服器擷取 SonarQube 度量單位清單。",
  "loc.messages.sqAnalysis_NoReportTask": "找不到 report-task.txt。可能的原因: SonarQube 分析未成功完成。",
  "loc.messages.sqAnalysis_MultipleReportTasks": "找到多個 report-task.txt 檔案。請選擇第一個。組建摘要及組建分隔可能不準確。可能的原因: 相同組建期間有多個 SonarQube分析，此情況不受支援。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s 發現 %d 個違規 (在 %d 個檔案中)。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s 在 1 個檔案中發現 %d 個違規。",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s 在 1 個檔案中發現 1 個違規。",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s 找不到任何違規。",
  "loc.messages.codeAnalysisBuildSummaryTitle": "程式碼分析報告",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "程式碼分析結果",
  "loc.messages.codeAnalysisDisabled": "已停用於組建環境外進行程式碼分析。找不到 %s 的值",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "為 Java %s %s 找出 JAVA_HOME 的位置",
  "loc.messages.UnsupportedJdkWarning": "JDK 9 與 JDK 10 已失去支援。請在您的專案和管線中切換至較新版本。正在嘗試以 JDK 11 進行建置...",
  "loc.messages.FailedToLocateSpecifiedJVM": "找不到指定的 JDK 版本。請確認指定的 JDK 版本已安裝在代理程式上，且環境變數 '%s' 存在並已設定為對應 JDK 的位置，或者使用 [Java 工具安裝程式](https://go.microsoft.com/fwlink/?linkid=875287) 工作安裝所需的 JDK。",
  "loc.messages.NoCodeCoverage": "找不到要發行的程式碼涵蓋範圍結果。",
  "loc.messages.EntryAlreadyExists": "XML 檔中已有摘要或存放庫的設定。",
  "loc.messages.EffectivePomInvalid": "無法剖析有效的 POM。",
  "loc.messages.AuthenticationNotNecessary": "找不到需要驗證的內建 Maven 摘要。請停用 [驗證內建 Maven 摘要] 以加快建置速度。",
  "loc.messages.UsingAuthFeed": "使用內建摘要: ",
  "loc.messages.NoTestResults": "找不到任何符合 %s 的測試結果，因此跳過發行 JUnit 測試結果。"
}