{
    "id": "46E4BE58-730B-4389-8A2F-EA10B3E5E815",
    "name": "AzureCLI",
    "friendlyName": "Azure CLI",
    "description": "Run Azure CLI commands against an Azure subscription in a Shell script when running on Linux agent or Batch script when running on Windows agent.",
    "author": "Microsoft Corporation",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/deploy/azure-cli",
    "helpMarkDown": "[Learn more about this task](http://go.microsoft.com/fwlink/?LinkID=827160) or [see the Azure CLI documentation](https://docs.microsoft.com/cli/azure/)",
    "releaseNotes": "What's new in Version 1.0:\n- Supports the new Azure CLI 2.0 which is Python based\n- Works with cross-platform agents (Linux, macOS, or Windows)\n- For working with Azure CLI 1.0 (node.js-based), switch to task version 0.0\n- Limitations:\n - No support for Azure Classic subscriptions. Azure CLI 2.0 supports only Azure Resource Manager (ARM) subscriptions.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "demands": [],
    "version": {
        "Major": 1,
        "Minor": 216,
        "Patch": 0
    },
    "minimumAgentVersion": "2.0.0",
    "instanceNameFormat": "Azure CLI $(scriptPath)",
    "showEnvironmentVariables": true,
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "connectedServiceNameARM",
            "aliases": [
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "required": true,
            "helpMarkDown": "Select an Azure resource manager subscription for the deployment",
            "properties": {
                "EndpointFilterRule": "ScopeLevel != ManagementGroup"
            }
        },
        {
            "name": "scriptLocation",
            "type": "pickList",
            "label": "Script Location",
            "defaultValue": "scriptPath",
            "required": true,
            "helpMarkDown": "Type of script: File path or Inline script",
            "options": {
                "inlineScript": "Inline script",
                "scriptPath": "Script path"
            }
        },
        {
            "name": "scriptPath",
            "type": "filePath",
            "label": "Script Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "scriptLocation = scriptPath",
            "helpMarkDown": "Fully qualified path of the script(.bat or .cmd when using Windows based agent and .sh when using linux based agent) or a path relative to the the default working directory"
        },
        {
            "name": "inlineScript",
            "type": "multiLine",
            "label": "Inline Script",
            "defaultValue": "",
            "required": true,
            "visibleRule": "scriptLocation = inlineScript",
            "helpMarkDown": "You can write your scripts inline here. When using Windows agent, use batch scripting whereas use shell scripting when using Linux based agents. For batch script use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "5000"
            }
        },
        {
            "name": "args",
            "aliases": [
                "arguments"
            ],
            "type": "string",
            "label": "Arguments",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Arguments passed to the script",
            "properties": {
                "editorExtension": "ms.vss-services-azure.parameters-grid"
            }
        },
        {
            "name": "addSpnToEnvironment",
            "type": "boolean",
            "label": "Access service principal details in script",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Adds service principal id and key of the Azure endpoint you chose to the script's execution environment. You can use these variables: `$servicePrincipalId`, `$servicePrincipalKey` and `$tenantId` in your script.\n\nThis is honored only when the Azure endpoint has Service Principal authentication scheme.",
            "groupName": "advanced"
        },
        {
            "name": "useGlobalConfig",
            "type": "boolean",
            "label": "Use global Azure CLI configuration",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If this is false, this task will use its own separate [Azure CLI configuration directory](https://docs.microsoft.com/en-us/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file). This can be used to run Azure CLI tasks in *parallel* releases",
            "groupName": "advanced"
        },
        {
            "name": "cwd",
            "aliases": [
                "workingDirectory"
            ],
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Current working directory where the script is run.  Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory)",
            "groupName": "advanced"
        },
        {
            "name": "failOnStandardError",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If this is true, this task will fail when any errors are written to the StandardError stream. Unselect the checkbox to ignore standard errors and rely on exit codes to determine the status",
            "groupName": "advanced"
        }
    ],
    "execution": {
        "Node10": {
            "target": "azureclitask.js",
            "argumentFormat": ""
        },
        "Node16": {
            "target": "azureclitask.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "ScriptReturnCode": "Script exited with return code: %d",
        "ScriptFailed": "Script failed with error: %s",
        "UnsupportedEndpointScheme": "Unsupported service connection authorization scheme: Service Principal for AzureRM",
        "AzureSDKNotFound": "Azure CLI 2.x is not installed on this machine.",
        "FailedToLogout": "The following error occurred while logging out: %s",
        "LoginFailed": "Azure login failed",
        "MSILoginFailed": "Azure login failed using Managed Service Identity",
        "AuthSchemeNotSupported": "Auth Scheme %s is not supported",
        "ErrorInSettingUpSubscription": "Error in setting up subscription",
        "SettingAzureConfigDir": "Setting AZURE_CONFIG_DIR env variable to: %s",
        "SettingAzureCloud": "Setting active cloud to: %s",
        "GlobalCliConfigAgentVersionWarning": "For agent version < 2.115.0, only global Azure CLI configuration can be used"
    }
}