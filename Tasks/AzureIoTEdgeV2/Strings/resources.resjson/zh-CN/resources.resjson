{
  "loc.friendlyName": "Azure IoT Edge",
  "loc.helpMarkDown": "访问 [文档](https://docs.microsoft.com/en-us/azure/iot-edge/how-to-continuous-integration-continuous-deployment)以获取帮助",
  "loc.description": "生成并部署 Azure IoT Edge 映像",
  "loc.instanceNameFormat": "Azure IoT Edge - $(action)",
  "loc.group.displayName.advanced_push": "高级",
  "loc.group.displayName.advanced_deploy": "高级",
  "loc.input.label.action": "操作",
  "loc.input.help.action": "选择 Azure IoT Edge 操作。\n **生成模块映像**将仅生成模块(可使用它检查编译错误)。\n **推送模块映像**会将模块推送到容器注册表。\n **部署到 IoT Edge 设备**会将生成的部署文件部署到 IoT 中心。(建议将**部署**任务置于发布管道)。",
  "loc.input.label.deploymentFilePath": "部署文件",
  "loc.input.help.deploymentFilePath": "选择部署 json 文件。\n 如果此任务位于**发布管道**，则需要在项目中设置部署文件的位置。(默认值适用于大多数情况)。\n 如果此任务位于**生成管道**，则需要将其设置到**输出部署文件的路径**路径。",
  "loc.input.label.connectedServiceNameARM": "Azure 订阅包含 IoT 中心",
  "loc.input.help.connectedServiceNameARM": "选择包含 IoT 中心的 **Azure 订阅**",
  "loc.input.label.iothubname": "IoT 中心名称",
  "loc.input.help.iothubname": "选择 **IoT 中心**",
  "loc.input.label.deploymentid": "IoT Edge 部署 ID",
  "loc.input.help.deploymentid": "输入 **IoT Edge 部署 ID**，如果存在 ID，则将重写此 ID。\n 最多允许 128 个小写字母、数字和以下字符[ -:+%_#*?!(),=@;' ]。\n 查看有关 [Azure IoT Edge 部署](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)的详细信息",
  "loc.input.label.priority": "IoT Edge 部署优先级",
  "loc.input.help.priority": "将**优先级**设置为正整数以解决部署冲突: 当作为多个部署的目标时，设备将使用具有最高优先级或(如果两个部署具有相同优先级)最新创建时间的部署。\n 查看有关 [Azure IoT Edge 部署]的详细信息(https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)",
  "loc.input.label.deviceOption": "选择单个/多个设备",
  "loc.input.help.deviceOption": "选择部署到单个或多个(按标记)设备",
  "loc.input.label.deviceId": "IoT Edge 设备 ID",
  "loc.input.help.deviceId": "输入 IoT Edge **设备 ID**",
  "loc.input.label.targetcondition": "IoT Edge 设备目标条件",
  "loc.input.help.targetcondition": "输入要部署的设备的**目标条件**。不要使用双引号。示例: **tags.building=9 and tags.environment='test'**。\n 查看有关 [Azure IoT Edge 部署]的详细信息(https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)",
  "loc.input.label.containerregistrytype": "容器注册表类型",
  "loc.input.help.containerregistrytype": "选择**容器注册表类型**。\n **Azure 容器注册表**表示 ACR，**泛型容器注册表**表示包括 Docker Hub 在内的泛型注册表。",
  "loc.input.label.dockerRegistryEndpoint": "Docker 注册表连接",
  "loc.input.help.dockerRegistryEndpoint": "选择泛型 **Docker 注册表连接**。对于**生成并推送**是必需的。",
  "loc.input.label.azureSubscriptionEndpoint": "Azure 订阅",
  "loc.input.help.azureSubscriptionEndpoint": "选择 Azure 订阅",
  "loc.input.label.azureContainerRegistry": "Azure 容器注册表",
  "loc.input.help.azureContainerRegistry": "选择 **Azure 容器注册表**",
  "loc.input.label.templateFilePath": ".template.json 文件",
  "loc.input.help.templateFilePath": "Azure IoT Edge 解决方案 **.template.json** 的路径。此文件定义 Azure IoT Edge 解决方案中的模块和路由，文件名必须以 **.template.json** 结尾",
  "loc.input.label.defaultPlatform": "默认平台",
  "loc.input.help.defaultPlatform": "在 **.template.json** 中，可将模块平台保留为未指定。对于这些模块，将使用**默认平台**。",
  "loc.input.label.fillRegistryCredential": "向部署清单添加注册表凭据",
  "loc.input.help.fillRegistryCredential": "添加用于将 Docker 映像推送到部署清单的注册表凭据",
  "loc.input.label.deploymentManifestOutputPath": "输出路径",
  "loc.input.help.deploymentManifestOutputPath": "生成的部署清单的输出路径",
  "loc.input.label.validateGeneratedDeploymentManifest": "验证生成的部署清单的架构",
  "loc.input.help.validateGeneratedDeploymentManifest": "如果生成的部署清单未通过架构验证，则此步骤将失败。可以在[JSON Schema Store](http://schemastore.org/json/) 中搜索 `Azure IoT Edge deployment` 以查找最新架构。",
  "loc.input.label.bypassModules": "绕过模块",
  "loc.input.help.bypassModules": "选择**无**需在 .template.json 中生成(或推送)的模块，指定模块名称并以逗号分隔。\n 示例: 如果你的 .template.json 中有 2 个模块 **SampleModule1,SampleModule2**，你只想生成或推送 **SampleModule1**，则将绕过模块设置为 **SampleModule2**。如果想在 .template.json 中生成所有模块，则留空。",
  "loc.messages.BuildingModules": "正在生成模块映像...",
  "loc.messages.BuildingModulesFinished": "已完成生成模块映像",
  "loc.messages.PushingModules": "正在推送模块映像...",
  "loc.messages.PushingModulesFinished": "已完成推送模块映像",
  "loc.messages.StartDeploy": "开始部署...",
  "loc.messages.FinishDeploy": "已完成部署",
  "loc.messages.DeploymentFilePath": "生成的部署文件位于路径: %s",
  "loc.messages.ExpandingRegistryCredentials": "正在扩展部署文件中的注册表凭据...",
  "loc.messages.ReplaceCredential": "替换凭据: %s",
  "loc.messages.DeployTaskRunningInBuild": "部署任务正在生成管道中运行? %s",
  "loc.messages.CheckValidJson": "检查以下文件是否为有效的 json: %s",
  "loc.messages.Invalid": "无效",
  "loc.messages.Valid": "有效",
  "loc.messages.NomralizedDeployementId": "规范化的部署 ID 为: %s",
  "loc.messages.DependencyAlreadyInstalled": "已使用以下版本安装 %s: %s",
  "loc.messages.DependencyInstallSuccess": "已使用以下版本安装 %s: %s",
  "loc.messages.DependencyInstallFail": "%s 安装失败，请参阅调试模式下的详细错误",
  "loc.messages.TemplateFileInvalid": "模板文件的路径无效: %s",
  "loc.messages.InvalidContainerRegistry": "未能提取容器注册表身份验证令牌，请检查生成任务中的容器注册表设置。容器注册表的用户名为 %s",
  "loc.messages.DeploymentFileNotFound": "找不到部署文件。请确保在任务中正确设置了部署文件的路径。",
  "loc.messages.ValidDeploymentFileNotFound": "找不到有效的部署文件。请确保在任务中正确设置了部署文件的路径。",
  "loc.messages.AzureSdkNotFound": "未找到 Azure SDK",
  "loc.messages.RootPathNotExist": "根路径 %s 不存在",
  "loc.messages.SkipModuleImageValidation": "SKIP_MODULE_IMAGE_VALIDATION 设置为 true，将跳过模块映像验证。",
  "loc.messages.InvalidRegistryCredentialWarning": "未能使用给定凭据登录 %s。%s",
  "loc.messages.CheckModuleImageExistenceError": "%s 不存在，或者未正确设置凭据。错误: %s",
  "loc.messages.StartGenerateDeploymentManifest": "开始生成部署清单...",
  "loc.messages.FinishGenerateDeploymentManifest": "已完成生成部署清单。",
  "loc.messages.LoginRegistrySucess": "已成功登录到注册表 %s",
  "loc.messages.SkipSettingEnvironmentVariableForSecret": "环境变量 %s 已存在。跳过为机密设置环境变量: %s。"
}