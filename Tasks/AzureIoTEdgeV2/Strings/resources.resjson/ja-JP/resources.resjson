{
  "loc.friendlyName": "Azure IoT Edge",
  "loc.helpMarkDown": "ヘルプについては、[ドキュメント](https://aka.ms/azure-iot-edge-ci-cd-docs)を参照してください",
  "loc.description": "Azure IoT Edge イメージのビルドとデプロイ",
  "loc.instanceNameFormat": "Azure IoT Edge - $(action)",
  "loc.group.displayName.advanced_push": "詳細設定",
  "loc.group.displayName.advanced_deploy": "詳細設定",
  "loc.input.label.action": "アクション",
  "loc.input.help.action": "Azure IoT Edge アクションを選択します。\n **[モジュール イメージのビルド]** を選択すると、モジュールのみがビルドされます (これは、コンパイル エラーのチェックに使用できます)。\n **[モジュール イメージのプッシュ]** を選択すると、モジュールがコンテナー レジストリにプッシュされます。\n **[IoT Edge デバイスにデプロイする]** を選択すると、生成されたデプロイ ファイルが IoT Hub にデプロイされます (**デプロイ** タスクをリリース パイプラインに入れることをお勧めします)。",
  "loc.input.label.deploymentFilePath": "配置ファイル",
  "loc.input.help.deploymentFilePath": "配置 json ファイルを選択します。\n このタスクが **リリース パイプライン** にある場合、成果物の配置ファイルの場所を設定する必要があります。(既定値はほとんどの条件で機能します)。\n このタスクが **ビルド パイプライン** にある場合は、**出力配置ファイルのパス** のパスに設定する必要があります。",
  "loc.input.label.connectedServiceNameARM": "Azure サブスクリプションに IoT Hub が含まれています",
  "loc.input.help.connectedServiceNameARM": "IoT Hub を含む **Azure サブスクリプション** を選択します",
  "loc.input.label.iothubname": "IoT ハブ名",
  "loc.input.help.iothubname": "**IoT Hub** を選択します",
  "loc.input.label.deploymentid": "IoT Edge デプロイ ID",
  "loc.input.help.deploymentid": "**IoT Edge デプロイ ID** を入力してください。ID が存在する場合はオーバーライドされます。\n最大 128 の小文字、数字、および次の文字を使用できます [ -:+%_#*?!(),=@;' ]。\n詳細については、[Azure IoT Edge のデプロイ](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)に関するページをご確認ください。",
  "loc.input.label.priority": "IoT Edge デプロイの優先順位",
  "loc.input.help.priority": "デプロイの競合を解決するには、**優先度** を正の整数に設定します。複数のデプロイをターゲットにしている場合、デバイスは最も優先度の高いもの、または (同じ優先度を持つ 2 つのデプロイの場合は) 作成時間が最も新しいものを使用します。\n詳しくは、[Azure IoT Edge のデプロイ](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)に関するページをご確認ください",
  "loc.input.label.deviceOption": "1 つまたは複数のデバイスを選択する",
  "loc.input.help.deviceOption": "1 つまたは複数 (タグ別) のデバイスへの配置を選択する",
  "loc.input.label.deviceId": "IoT Edge デバイス ID",
  "loc.input.help.deviceId": "IoT Edge **デバイス ID** の入力",
  "loc.input.label.targetcondition": "IoT Edge デバイス ターゲットの条件",
  "loc.input.help.targetcondition": "デプロイするデバイスの **ターゲット条件** を入力します。二重引用符は使用しないでください。例: **tags.building=9 および tags.environment='test'**。\n詳細については、[Azure IoT Edge のデプロイ](https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment)に関するページをご確認ください。",
  "loc.input.label.containerregistrytype": "コンテナー レジストリの種類",
  "loc.input.help.containerregistrytype": "**コンテナー レジストリの種類** を選択します。\n ACR の場合は **[Azure Container Registry]**、Docker Hub を含むジェネリック レジストリの場合は **[ジェネリック コンテナー レジストリ]**。",
  "loc.input.label.dockerRegistryEndpoint": "Docker レジストリ接続",
  "loc.input.help.dockerRegistryEndpoint": "汎用の **Docker レジストリ接続** を選択します。**ビルドおよびプッシュ** するのに必要です。",
  "loc.input.label.azureSubscriptionEndpoint": "Azure サブスクリプション",
  "loc.input.help.azureSubscriptionEndpoint": "Azure サブスクリプションを選択します",
  "loc.input.label.azureContainerRegistry": "Azure Container Registry",
  "loc.input.help.azureContainerRegistry": "**[Azure Container Registry]** を選択します",
  "loc.input.label.templateFilePath": ".template.json ファイル",
  "loc.input.help.templateFilePath": "Azure IoT Edge ソリューション **.template.json** のパス。このファイルは Azure IoT Edge ソリューションのモジュールとルートを定義します。このファイル名は **.template.json** で終わる必要があります。",
  "loc.input.label.defaultPlatform": "既定のプラットフォーム",
  "loc.input.help.defaultPlatform": "**.template.json** では、モジュール プラットフォームを未指定のままにすることができます。これらのモジュールでは、**既定のプラットフォーム** が使用されます。",
  "loc.input.label.fillRegistryCredential": "レジストリ資格情報を配置マニフェストに追加します",
  "loc.input.help.fillRegistryCredential": "配置マニフェストに Docker イメージをプッシュするためのレジストリ資格情報を追加します",
  "loc.input.label.deploymentManifestOutputPath": "Output path",
  "loc.input.help.deploymentManifestOutputPath": "The output path of generated deployment manifest",
  "loc.input.label.validateGeneratedDeploymentManifest": "Validate the schema of generated deployment manifest",
  "loc.input.help.validateGeneratedDeploymentManifest": "Fail this step if the generated deployment manifest does not pass schema validation. You can search `Azure IoT Edge deployment` in [JSON Schema Store](http://schemastore.org/json/) to find latest schema.",
  "loc.input.label.bypassModules": "バイパス モジュール",
  "loc.input.help.bypassModules": ".template.json でビルド (またはプッシュ) する必要が **ない** モジュールを選択し、モジュール名を指定して、コンマで区切ります。\n 例: .template.json に 2 つのモジュール **SampleModule1,SampleModule2** があり、**SampleModule1** のみをビルドまたはプッシュする場合、バイパス モジュールを **SampleModule2** として設定します。すべてのモジュールを .template.json にビルドする場合は、空のままにします。",
  "loc.messages.BuildingModules": "モジュール イメージをビルドしています...",
  "loc.messages.BuildingModulesFinished": "モジュール イメージの構築が完了しました",
  "loc.messages.PushingModules": "モジュール イメージをプッシュしています...",
  "loc.messages.PushingModulesFinished": "モジュール イメージのプッシュが完了しました",
  "loc.messages.StartDeploy": "配置を開始します...",
  "loc.messages.FinishDeploy": "配置が完了しました",
  "loc.messages.DeploymentFilePath": "生成された配置ファイルは次のパスにあります: %s",
  "loc.messages.ExpandingRegistryCredentials": "配置ファイルのレジストリ資格情報を展開しています...",
  "loc.messages.ReplaceCredential": "資格情報の置換: %s",
  "loc.messages.DeployTaskRunningInBuild": "ビルド パイプラインで配置タスクが実行されていますか? %s",
  "loc.messages.CheckValidJson": "次のファイルが有効な json であるかどうかを確認しています: %s",
  "loc.messages.Invalid": "無効",
  "loc.messages.Valid": "有効",
  "loc.messages.NomralizedDeployementId": "正規化された配置 ID: %s",
  "loc.messages.DependencyAlreadyInstalled": "%s は既に次のバージョンでインストールされています: %s ",
  "loc.messages.DependencyInstallSuccess": "%s は次のバージョンでインストールされました: %s",
  "loc.messages.DependencyInstallFail": "%s のインストールに失敗しました。デバッグ モードでエラーの詳細を確認してください",
  "loc.messages.TemplateFileInvalid": "テンプレート ファイルのパスが無効です: %s",
  "loc.messages.InvalidContainerRegistry": "Failed to fetch container registry authentication token, please check you container registry setting in build task. The username for container registry is %s",
  "loc.messages.DeploymentFileNotFound": "配置ファイルが見つかりません。タスクで配置ファイルのパスが正しく設定されていることを確認してください。",
  "loc.messages.ValidDeploymentFileNotFound": "有効な配置ファイルが見つかりません。タスクで配置ファイルのパスが正しく設定されていることを確認してください。",
  "loc.messages.AzureSdkNotFound": "Azure SDK が見つかりません",
  "loc.messages.RootPathNotExist": "ルート パス %s が存在しません",
  "loc.messages.SkipModuleImageValidation": "SKIP_MODULE_IMAGE_VALIDATION が true に設定されています。モジュール イメージの検証をスキップしています。",
  "loc.messages.InvalidRegistryCredentialWarning": "指定された資格情報で %s にログインできませんでした。%s",
  "loc.messages.CheckModuleImageExistenceError": "%s が存在しないか、資格情報が正しく設定されていません。エラー: %s",
  "loc.messages.StartGenerateDeploymentManifest": "配置マニフェストの生成を開始します...",
  "loc.messages.FinishGenerateDeploymentManifest": "配置マニフェストの生成が完了しました。",
  "loc.messages.LoginRegistrySucess": "Successfully logged in to registry %s",
  "loc.messages.SkipSettingEnvironmentVariableForSecret": "Environment variable %s already exist. Skip setting environment varialbe for secret: %s."
}