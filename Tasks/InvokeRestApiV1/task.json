{
    "id": "9C3E8943-130D-4C78-AC63-8AF81DF62DFB",
    "name": "InvokeRESTAPI",
    "friendlyName": "Invoke REST API",
    "description": "Invoke a REST API as a part of your pipeline.",
    "author": "Microsoft Corporation",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/http-rest-api",
    "helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=870236)",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "runsOn": [
        "Server",
        "ServerGate"
    ],
    "version": {
        "Major": 1,
        "Minor": 217,
        "Patch": 0
    },
    "instanceNameFormat": "Invoke REST API: $(method)",
    "groups": [
        {
            "name": "completionOptions",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "connectedServiceNameSelector",
            "aliases": [
                "connectionType"
            ],
            "type": "pickList",
            "label": "Connection type",
            "required": true,
            "helpMarkDown": "Select the service connection type to use to invoke the REST API.",
            "defaultValue": "connectedServiceName",
            "options": {
                "connectedServiceName": "Generic",
                "connectedServiceNameARM": "Azure Resource Manager"
            }
        },
        {
            "name": "connectedServiceName",
            "aliases": [
                "serviceConnection",
                "genericService"
            ],
            "type": "connectedService:Generic",
            "label": "Generic service connection",
            "defaultValue": "",
            "required": "true",
            "helpMarkDown": "Select a generic service connection that should be used to pick the URL and construct authorization header for the http request.",
            "visibleRule": "connectedServiceNameSelector = connectedServiceName"
        },
        {
            "name": "connectedServiceNameARM",
            "aliases": [
                "azureServiceConnection",
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select an Azure Resource Manager subscription to use for invoking a management API. 'ManagementPortalUrl' of the cloud is used as the baseURL",
            "visibleRule": "connectedServiceNameSelector = connectedServiceNameARM"
        },
        {
            "name": "method",
            "type": "pickList",
            "label": "Method",
            "required": "true",
            "defaultValue": "POST",
            "options": {
                "OPTIONS": "OPTIONS",
                "GET": "GET",
                "HEAD": "HEAD",
                "POST": "POST",
                "PUT": "PUT",
                "DELETE": "DELETE",
                "TRACE": "TRACE",
                "PATCH": "PATCH"
            },
            "helpMarkDown": "Select the HTTP method with which the API should be invoked."
        },
        {
            "name": "headers",
            "type": "multiLine",
            "label": "Headers",
            "required": "false",
            "defaultValue": "{\n\"Content-Type\":\"application/json\", \n\"PlanUrl\": \"$(system.CollectionUri)\", \n\"ProjectId\": \"$(system.TeamProjectId)\", \n\"HubName\": \"$(system.HostType)\", \n\"PlanId\": \"$(system.PlanId)\", \n\"JobId\": \"$(system.JobId)\", \n\"TimelineId\": \"$(system.TimelineId)\", \n\"TaskInstanceId\": \"$(system.TaskInstanceId)\", \n\"AuthToken\": \"$(system.AccessToken)\"\n}",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "2000"
            },
            "helpMarkDown": "Define header in JSON format. The header shall be attached with request to be sent."
        },
        {
            "name": "body",
            "type": "multiLine",
            "label": "Body",
            "required": "false",
            "defaultValue": "",
            "properties": {
                "resizable": "true",
                "rows": "3",
                "maxLength": "2000"
            },
            "visibleRule": "method != GET && method != HEAD"
        },
        {
            "name": "urlSuffix",
            "type": "string",
            "label": "URL suffix and parameters",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Given string append to the URL. Example: If the service connection URL is https:...TestProj/_apis/Release/releases and the URL suffix is /2/environments/1, the service connection URL becomes https:.../TestProj/_apis/Release/releases/2/environments/1. If the URL suffix is ?definitionId=1&releaseCount=1 then the service connection URL becomes https//...TestProj/_apis/Release/releases?definitionId=1&releaseCount=1."
        },
        {
            "name": "waitForCompletion",
            "type": "pickList",
            "label": "Completion event",
            "defaultValue": "true",
            "required": true,
            "helpMarkDown": "Default value \"Callback\". Available values :  \"ApiResponse\", \"Callback\" call where the REST API calls back to update the timeline record​.",
            "groupName": "completionOptions",
            "options": {
                "true": "Callback",
                "false": "ApiResponse"
            }
        },
        {
            "name": "successCriteria",
            "type": "string",
            "label": "Success criteria",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Criteria which defines when to pass the task. No criteria means response content does not influence the result. Example:- For response {\"status\" : \"successful\"}, the expression can be eq(root['status'], 'successful'). [More information](https://go.microsoft.com/fwlink/?linkid=842996)​",
            "groupName": "completionOptions",
            "visibleRule": "waitForCompletion = false"
        }
    ],
    "execution": {
        "HttpRequest": {
            "Execute": {
                "EndpointId": "TaskInputs[TaskInputs['connectedServiceNameSelector']]",
                "EndpointUrl": "$(endpoint.url)$(urlSuffix)",
                "Method": "$(method)",
                "Body": "$(body)",
                "Headers": "$(headers)",
                "WaitForCompletion": "$(waitForCompletion)",
                "Expression": "$(successCriteria)"
            }
        }
    }
}