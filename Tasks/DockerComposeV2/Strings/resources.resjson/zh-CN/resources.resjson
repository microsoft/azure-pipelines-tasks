{
  "loc.friendlyName": "Docker Compose",
  "loc.helpMarkDown": "[详细了解此任务](https://go.microsoft.com/fwlink/?linkid=848006)或[参阅 Docker Compose 文档](https://docs.docker.com/)",
  "loc.description": "生成、推送或运行多容器 Docker 应用程序。任务可与 Docker 或 Azure 容器注册表一起使用。",
  "loc.instanceNameFormat": "$(action)",
  "loc.group.displayName.advanced": "高级选项",
  "loc.input.label.containerregistrytype": "容器注册表类型",
  "loc.input.help.containerregistrytype": "选择容器注册表类型。",
  "loc.input.label.dockerRegistryEndpoint": "Docker 注册表服务连接",
  "loc.input.help.dockerRegistryEndpoint": "选择 Docker 注册表服务连接。这对于需要执行注册表身份验证的命令是必需的。",
  "loc.input.label.azureSubscriptionEndpoint": "Azure 订阅",
  "loc.input.help.azureSubscriptionEndpoint": "选择 Azure 订阅",
  "loc.input.label.azureContainerRegistry": "Azure 容器注册表",
  "loc.input.help.azureContainerRegistry": "选择 Azure 容器注册表",
  "loc.input.label.dockerComposeFile": "Docker Compose 文件",
  "loc.input.help.dockerComposeFile": "要使用的主 Docker Compose 文件的路径。",
  "loc.input.label.additionalDockerComposeFiles": "其他 Docker Compose 文件",
  "loc.input.help.additionalDockerComposeFiles": "要与主 Docker Compose 文件合并的其他 Docker Compose 文件。相对包含主 Docker Compose 文件的目录解析相对路径。如果找不到指定的文件，则忽略。在新的一行指定每个文件路径。",
  "loc.input.label.dockerComposeFileArgs": "环境变量",
  "loc.input.help.dockerComposeFileArgs": "执行命令期间要设置的环境变量。在新的一行指定每个名称=值对。",
  "loc.input.label.projectName": "项目名",
  "loc.input.help.projectName": "默认用于命名映像和容器的项目名称。",
  "loc.input.label.qualifyImageNames": "指定映像名",
  "loc.input.help.qualifyImageNames": "如果没有另外指定，将生成服务的映像名限定为 Docker 注册表服务连接的主机名。",
  "loc.input.label.action": "操作",
  "loc.input.help.action": "选择 Docker Compose 操作。",
  "loc.input.label.additionalImageTags": "其他映像标记",
  "loc.input.help.additionalImageTags": "正在生成或推送的 Docker 映像的其他标记。",
  "loc.input.label.includeSourceTags": "包括源标记",
  "loc.input.help.includeSourceTags": "生成或推送 Docker 映像时包括 Git 标记。",
  "loc.input.label.includeLatestTag": "包括最近标记",
  "loc.input.help.includeLatestTag": "生成或推送 Docker 映像时包括 \"latest\" 标记。",
  "loc.input.label.buildImages": "生成映像",
  "loc.input.help.buildImages": "在启动服务容器之前生成映像。",
  "loc.input.label.serviceName": "服务名称",
  "loc.input.help.serviceName": "要运行的特定服务的名称。",
  "loc.input.label.containerName": "容器名",
  "loc.input.help.containerName": "要运行的特定服务容器的名称。",
  "loc.input.label.ports": "端口",
  "loc.input.help.ports": "特定服务容器中要发布到主机的端口。在新的一行指定每个 host-port:container-port 绑定。",
  "loc.input.label.workDir": "工作目录",
  "loc.input.help.workDir": "特定服务容器的工作目录。",
  "loc.input.label.entrypoint": "入口点替代",
  "loc.input.help.entrypoint": "替代特定服务容器的默认入口点。",
  "loc.input.label.containerCommand": "命令",
  "loc.input.help.containerCommand": "要在特定服务容器中运行的命令。例如，如果映像包含一个简单的 Python Flask Web 应用程序，则可以将 \"python app.py\" 指定为启动 Web 应用程序。",
  "loc.input.label.detached": "后台运行",
  "loc.input.help.detached": "后台运行服务容器。",
  "loc.input.label.abortOnContainerExit": "容器退出时中止",
  "loc.input.help.abortOnContainerExit": "存在任何容器时停止所有容器。",
  "loc.input.label.imageDigestComposeFile": "映像摘要 Compose 文件",
  "loc.input.help.imageDigestComposeFile": "使用每个服务的 Docker 映像的完全映像存储库摘要创建和填充的 Docker Compose 文件的路径。",
  "loc.input.label.removeBuildOptions": "删除生成选项",
  "loc.input.help.removeBuildOptions": "从输出 Docker Compose 文件中删除生成选项。",
  "loc.input.label.baseResolveDirectory": "基础映像解析目录",
  "loc.input.help.baseResolveDirectory": "解析输出 Docker Compose 文件的相对路径应该针对的基目录。",
  "loc.input.label.outputDockerComposeFile": "输出 Docker Compose 文件",
  "loc.input.help.outputDockerComposeFile": "输出 Docker Compose 文件的路径。",
  "loc.input.label.dockerComposeCommand": "命令",
  "loc.input.help.dockerComposeCommand": "要执行的带参数的 Docker Compose 命令。例如，可以使用 \"rm --all\" 删除所有已停止的服务容器。",
  "loc.input.label.arguments": "参数",
  "loc.input.help.arguments": "Docker Compose 命令选项。例如:<br> 对于生成命令，选项有 <br>--pull --compress --parallel",
  "loc.input.label.dockerHostEndpoint": "Docker 主机服务连接",
  "loc.input.help.dockerHostEndpoint": "选择 Docker 主机服务连接。默认为代理的主机。",
  "loc.input.label.nopIfNoDockerComposeFile": "如果没有 Docker Compose 文件，则无操作",
  "loc.input.help.nopIfNoDockerComposeFile": "如果 Docker Compose 文件不存在，则跳过此任务。当任务根据存储库中是否存在 Docker Compose 文件来提供可选行为时，这会非常有用。",
  "loc.input.label.requireAdditionalDockerComposeFiles": "需要其他 Docker Compose 文件",
  "loc.input.help.requireAdditionalDockerComposeFiles": "不存在其他 Docker Compose 文件时发生错误。这会替代如果文件不存在则忽略该文件的默认行为。",
  "loc.input.label.cwd": "工作目录",
  "loc.input.help.cwd": "Docker Compose 命令的工作目录。",
  "loc.messages.ConnectingToDockerHost": "已设置 DOCKER_HOST 变量。Docker 将尝试连接到 Docker 主机: %s",
  "loc.messages.ContainerPatternFound": "Docker Compose 文件路径参数中找到的模式",
  "loc.messages.ContainerPatternNotFound": "Docker Compose 文件路径参数中未找到任何模式",
  "loc.messages.ContainerDockerFileNotFound": "找不到匹配 %s 的任何 Docker 文件。",
  "loc.messages.AdditionalDockerComposeFileDoesNotExists": "不存在其他 Docker Compose 文件 %s。",
  "loc.messages.CantWriteDataToFile": "无法将数据写入文件 %s。错误: %s",
  "loc.messages.DockerHostVariableWarning": "已设置 DOCKER_HOST 变量。请确保 Docker 守护程序正在 %s 上运行",
  "loc.messages.NoDataWrittenOnFile": "没有任何数据写入到文件 %s",
  "loc.messages.FileContentSynced": "文件内容已同步到磁盘。内容为 %s。",
  "loc.messages.ImageNameWithoutTag": "未使用标记指定映像名，推送指定映像的所有标记。",
  "loc.messages.WritingDockerConfigToTempFile": "正在将 Docker 配置写入临时文件。文件路径: %s，Docker 配置: %s"
}