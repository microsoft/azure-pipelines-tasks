trigger:
- master
- releases/*
- node6hotfixes/*

resources:
  repositories:
  - repository: AzureDevOps
    type: git
    endpoint: AzureDevOps
    name: AzureDevOps/AzureDevOps

parameters:
- name: build_single_task
  displayName: Build Single Task
  type: boolean
  default: false
- name: task_name
  displayName: Task Name
  type: string
  default: TaskNameVN
- name: push_to_feed
  displayName: Push to Feed
  type: boolean
  default: false

jobs:

- ${{ if parameters.build_single_task }}:

  # Build Single Task
  - job: build_single_task
    displayName: Build Single Task
    pool:
      vmImage: windows-2022
    steps:
    - template: ci/build-single-steps.yml
      parameters:
        task: ${{ parameters.task_name }}
        push: ${{ parameters.push_to_feed }}

- ${{ if not(parameters.build_single_task) }}:

  # All tasks on Windows
  - job: build_all_windows
    displayName: Build all tasks (Windows)
    condition: eq(variables.os, 'Windows_NT')
    timeoutInMinutes: 180
    pool:
      vmImage: windows-2022
    steps:
    - template: ci/build-all-steps.yml
      parameters:
        os: Windows_NT

  # Publish
  - job: publish
    displayName: Publish
    dependsOn:
    - build_all_windows
    condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
    pool:
      vmImage: windows-2022
    steps:
    - template: ci/publish-steps.yml
    - powershell: |
        $number = (Invoke-WebRequest https://whatsprintis.it -Headers @{"Accept"="application/json"} | ConvertFrom-Json).week
        Write-Host "##vso[task.setvariable variable=number;isOutput=true]$number"
      displayName: Week Number
      name: week

  # Courtesy Push
  - job: courtesy_push
    displayName: Courtesy Push
    dependsOn:
    - publish
    condition: |
      and(succeeded(), eq(variables['COURTESY_PUSH'], 'true'), or(
        and(eq(variables['build.reason'], 'Schedule'), eq(dependencies.publish.outputs['week.number'], '3')),
        and(eq(variables['build.reason'], 'Manual'), eq(variables['FORCE_COURTESY_PUSH'], 'true'))
      ))
    pool:
      vmImage: windows-2022
    steps:
    - checkout: AzureDevOps
      fetchDepth: 1
      persistCredentials: true
    - checkout: self
    - template: ci/courtesy-push.yml

  # All tasks on Linux
  - job: build_all_linux
    displayName: Build all tasks (Linux)
    condition: eq(variables.os, 'Linux')
    timeoutInMinutes: 180
    pool:
      vmImage: ubuntu-20.04
    steps:
    - template: ci/build-all-steps.yml
      parameters:
        os: Linux

  # All tasks on macOS
  - job: build_all_darwin
    displayName: Build all tasks (macOS)
    condition: eq(variables.os, 'Darwin')
    timeoutInMinutes: 180
    pool:
      vmImage: macos-11
    steps:
    - template: ci/build-all-steps.yml
      parameters:
        os: Darwin

  - job: buildSharedNpm_win
    displayName: Build shared npm packages (Win)
    condition: eq(variables.os, 'Windows_NT')
    pool:
      vmImage: windows-2022
    steps:
    - template: ci/build-common-npm.yml

  - job: buildSharedNpm_linux
    displayName: Build shared npm packages (Linux)
    condition: eq(variables.os, 'Linux')
    pool:
      vmImage: ubuntu-20.04
    steps:
    - template: ci/build-common-npm.yml

  - job: buildSharedNpm_darwin
    displayName: Build shared npm packages (macOS)
    condition: eq(variables.os, 'Darwin')
    pool:
      vmImage: macos-11
    steps:
    - template: ci/build-common-npm.yml
