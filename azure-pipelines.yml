# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# This pipeline will be extended to the OneESPT template

trigger:
- master
- releases/*

resources:
  repositories:
  - repository: AzureDevOps
    type: git
    name: AzureDevOps/AzureDevOps

  - repository: ConfigChange
    type: git
    name: AzureDevOps/AzureDevOps.ConfigChange

  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

parameters:
- name: build_single_task
  displayName: Build Single Task
  type: boolean
  default: false
- name: task_name
  displayName: Task Name (List of tasks to build (e.g. BashV3 [, AzureCLIV1]))
  type: string
  default: TaskNameVN
- name: push_to_feed
  displayName: Push to Feed
  type: boolean
  default: false
- name: generate_prs
  displayName: Create hotfix PRs and Release
  type: boolean
  default: false
- name: deploy_all_tasks
  displayName: Build all tasks for deployment
  type: boolean
  default: false
- name: enableCodeQL
  displayName: Enable CodeQL for run
  type: boolean
  default: false

variables:
  currentDate: $[ format('{0:yyyy}{0:MM}{0:dd}', pipeline.startTime) ]
  taskName: ${{ parameters.task_name }}
  taskNameIsSet: ${{ not(eq(parameters.task_name, 'TaskNameVN')) }}
  isHotfix: ${{ and(eq(parameters.push_to_feed, true), eq(variables.taskNameIsSet, true)) }}
  runCodeQl: ${{ eq(parameters.enableCodeQL, true) }}

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    settings:
      skipBuildTagsForGitHubPullRequests: true
    featureFlags:
      autoBaseline: false
    sdl:
      sbom:
        enabled: false
      baseline:
        baselineSet: default
        baselineFile: $(Build.SourcesDirectory)/.gdn/.gdnbaselines
      sourceAnalysisPool:
        name: 1ES-ABTT-Shared-Pool
        image: abtt-windows-2022
        os: windows
      sourceRepositoriesToScan: 
        exclude: 
          - repository: AzureDevOps
          - repository: ConfigChange
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: main
      jobs:

      - ${{ if parameters.build_single_task }}:

        - template: /ci/build-single-jobs.yml@self
          parameters:
            task_name: ${{ parameters.task_name }}
            push_to_feed: ${{ parameters.push_to_feed }}
            generate_prs: ${{ parameters.generate_prs }}
            enableCodeQL: ${{ parameters.enableCodeQL }}

      - ${{ if not(parameters.build_single_task) }}:

        # All tasks on Windows
        - job: build_all_windows
          displayName: Build all tasks (Windows)
          condition: eq(variables.os, 'Windows_NT')
          timeoutInMinutes: 360
          pool:
            name: 1ES-ABTT-Shared-Pool
            image: abtt-windows-2022
            os: windows
          templateContext:
            outputs:
              - output: buildArtifacts
                displayName: 'Publish package artifact'
                condition: >
                  and(
                    succeeded(),
                    ne(variables['build.reason'], 'PullRequest'),
                    ne(variables['numTasks'], 0)
                  )
                PathtoPublish: _package/tasks.zip
                ArtifactName: package
          steps:
          - template: /ci/build-all-steps.yml@self
            parameters:
              os: Windows_NT

        # Publish
        - job: publish
          displayName: Publish
          dependsOn:
          - build_all_windows
          condition: and(succeeded(), ne(variables['build.reason'], 'PullRequest'))
          pool:
            name: 1ES-ABTT-Shared-Pool
            image: abtt-windows-2022
            os: windows
          templateContext:
            outputs:
            - output: buildArtifacts
              displayName: 'Publish per task NuGet package artifact'
              PathtoPublish: _package/nuget-packages
              ArtifactName: IndividualNuGetPackages
          steps:
          - template: /ci/publish-steps.yml@self

        # Courtesy Push
        - job: courtesy_push
          displayName: Courtesy Push
          pool:
            name: 1ES-ABTT-Shared-Pool
            image: abtt-windows-2022
            os: windows
          dependsOn:
          - publish
          condition: |
            and(
              succeeded(),
              eq(variables['COURTESY_PUSH'], 'true'),
              or(
                eq(variables['build.reason'], 'Schedule'),
                and(
                  eq(variables['build.reason'], 'Manual'),
                  eq(variables['FORCE_COURTESY_PUSH'], 'true')
                )
              )
            )
          templateContext:
            outputs:
            - output: nuget
              packagesToPush:  '$(Build.SourcesDirectory)/IndividualNugetPackagesDownloaded/IndividualNugetPackages/*/*.nupkg'
              packageParentPath: '$(Build.SourcesDirectory)'
              publishVstsFeed: 'c86767d8-af79-4303-a7e6-21da0ba435e2/e10d0795-57cd-4d7f-904e-5f39703cb096'
              nuGetFeedType: internal
              displayName: Push Nuget package
              allowPackageConflicts: $(COURTESY_PUSH)
          steps:
          - checkout: AzureDevOps
            fetchDepth: 1
            persistCredentials: true
          - checkout: self
          - template: /ci/courtesy-push.yml@self

        - job: build_all_tasks_for_deployments
          displayName: Build all tasks for deployments (Windows)
          dependsOn:
          - courtesy_push
          - build_all_windows
          condition: succeeded()
          timeoutInMinutes: 360
          pool:
            name: 1ES-ABTT-Shared-Pool
            image: abtt-windows-2022
            os: windows
          variables:
            task_pattern: $[dependencies.build_all_windows.outputs['getTaskPattern.task_pattern']]
          templateContext:
            outputs:
            - output: buildArtifacts
              displayName: 'Publish package artifact'
              PathtoPublish: _package/tasks.zip
              ArtifactName: allTasks
          steps:
          - template: /ci/build-all-tasks.yml@self
            parameters:
              deploy_all_tasks: ${{ parameters.deploy_all_tasks }}

        # All tasks on Linux
        - job: build_all_linux
          displayName: Build all tasks (Linux)
          condition: eq(variables.os, 'Linux')
          timeoutInMinutes: 360
          pool:
            name: 1ES-ABTT-Shared-Pool
            image: abtt-ubuntu-2204
            os: linux
          steps:
          - template: /ci/build-all-steps.yml@self
            parameters:
              os: Linux

        # All tasks on macOS
        - job: build_all_darwin
          displayName: Build all tasks (macOS)
          condition: eq(variables.os, 'Darwin')
          timeoutInMinutes: 360
          pool:
            name: Azure Pipelines
            image: macos-14
            os: macOS
          steps:
          - template: /ci/build-all-steps.yml@self
            parameters:
              os: Darwin
