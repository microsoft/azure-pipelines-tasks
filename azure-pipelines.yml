parameters:
- name: build_single_task
  displayName: Build Single Task
  type: boolean
  default: true
- name: task_names
  displayName: Task Name
  type: string
  default: MavenV3, UseNodeV1
- name: push_to_feed
  displayName: Push to Feed
  type: boolean
  default: false

variables:
  - name: task_names
    value: MavenV3,UseNodeV1

jobs:

- ${{ if parameters.build_single_task }}:
  - job: get_task_names
    # we only test tasks on a PR and ignore forks since for security reasosns PAT tokens pipeline variable will not be available for fork's PRs.
    #condition: and(eq(variables['build.reason'], 'PullRequest'), eq(variables['System.PullRequest.IsFork'], 'False')) TODO: uncomment the line after testing
    steps:
    - script: npm install @octokit/core
      displayName: 'npm install @octokit/core'
    - script: echo "##vso[task.setvariable variable=tasks;isOutput=true]$(node ./ci/testing/extractTaskNames.js $(PAT_Github))"
      displayName: 'Extract task names'
      
    - script: |
        echo "$(tasks)"
        node ./ci/testing/useTaskNames.js $(tasks)
      displayName: 'Use "tasks" variable in next steps'
      
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $results = "$(tasks)".split(",")
          foreach ($task in $results) {
            Write-Host "The selected task Name is - $($task)"
          }
      continueOnError: true
    
    - script: |
        echo ${{ variables.task_names }} // echo MavenV3,UseNodeV1
      continueOnError: true

    - script: |
        echo $(variables.task_names) // line 1: variables.task_names: command not found
      continueOnError: true        

    - script: |
        echo $(variables.tasks) // line 1: variables.tasks: command not found
      continueOnError: true

    - script: |
        echo ${{ variables.tasks }}  // echo 
      continueOnError: true

  # - ${{ each var in split(variables.task_names, ',') }}:
  #   - job: ${{ var }}_build_single_task
  #     displayName: Build Task (${{ var }})
  #     dependsOn: get_task_names
  #     pool:
  #       vmImage: windows-2022
  #     steps:
  #     - template: ci/build-single-steps.yml
  #       parameters:
  #         task: ${{ var }}
  #         push: ${{ parameters.push_to_feed }}
  #         publishArtifact: true
  #         patchVersion: true
  #         version: '0.9999.9999'
    # - job: ${{ var }}_upload_test_task
    #   displayName: Upload (${{ var }})
      # dependsOn: ${{ var }}_build_single_task
    #   pool:
    #     vmImage: windows-2022
    #   steps:
    #   - template: ci/publish-and-test.yml
    #     parameters:
    #       task: ${{ var }}

    # - job: validate_uploaded_task
    #   displayName: Validate uploaded task
    #   pool:
    #     vmImage: windows-2022
    #   steps:
    #     template: ci/validate-task.yml

  # - ${{ if not(parameters.build_single_task) }}:
  #   - job: build_all_windows
  #     displayName: Build all tasks (Windows)
  #   #  condition: eq(variables.os, 'Windows_NT')
  #     timeoutInMinutes: 180
  #     pool:
  #       vmImage: windows-2022
  #     steps:
  #     - template: ci/build-all-steps.yml
  #       parameters:
  #         os: Windows_NT


      
# - job: validate_uploaded_task
#    displayName: Validate uploaded task
#    pool:
#      vmImage: windows-2022
#    steps:
#      template: ci/validate-task.yml

# - job: remove_task_from_organization
#    displayName: remove
#    pool:
#   vmImage: windows-2022
# steps:
#   template: ci/remove-task.yml
