parameters:
- name: build_single_task
  displayName: Build Single Task
  type: boolean
  default: true
- name: skip_job
  displayName: Skip this job for faster testing
  type: boolean
  default: false
- name: push_to_feed
  displayName: Push to Feed
  type: boolean
  default: false

variables:
  - name: tasksnames
    value: task1, task2

jobs:

- ${{ if parameters.build_single_task }}:
  - job: get_task_names
    pool:
      vmImage: ubuntu-20.04
    # we only test tasks on a PR and ignore forks since for security reasosns PAT tokens pipeline variable will not be available for fork's PRs.
    #condition: and(eq(variables['build.reason'], 'PullRequest'), eq(variables['System.PullRequest.IsFork'], 'False')) TODO: uncomment the line after testing
    steps:
    - script: npm install @octokit/core
      displayName: 'npm install @octokit/core'
    - bash: |
        TASKS=`node ./ci/testing/extractTaskNames.js $(PAT_Github)`
        echo $TASKS
        TOKEN="$(ADOToken)"
        OUTPUT=`curl --user "":"$(ADOToken)" -H "Content-Type: application/json" -H "Accept:application/json" "https://dev.azure.com/canary2-poc/tasks-canary/_apis/pipelines/5/runs?api-version=7" -X POST -d "{\"templateParameters\": { \"tasks\": \"$TASKS\"}}"`
        echo $OUTPUT
      displayName: 'Extract task names'

    # - script: |
    # - bash: tasks=MavenV2
      
    # - script: |
    #     echo "$(variables.tasks)"
    #     node ./ci/testing/useTaskNames.js $(variables.tasks)
    #   displayName: 'Use "tasks" variable in next steps'
    
    # - ${{ each var in split(variables.tasks_names, ',') }}:
    #   script: |
    #     echo "Test"
    #   continueOnError: true

  # - ${{ each var in split(variables.tasksnames, ', ') }}:
  #   - job: ${{ var }}_build_single_task
  #     displayName: Build Task (${{ var }})
  #     dependsOn: get_task_names
  #     pool:
  #       vmImage: windows-2022
  #     steps:
  #       - script: echo ${{ var }}
      # - template: ci/build-single-steps.yml
      #   parameters:
      #     task: ${{ var }}
      #     push: ${{ parameters.push_to_feed }}
      #     publishArtifact: true
      #     patchVersion: true
      #     version: '0.9999.9999'
    # - job: ${{ var }}_upload_test_task
    #   displayName: Upload (${{ var }})
      # dependsOn: ${{ var }}_build_single_task
    #   pool:
    #     vmImage: windows-2022
    #   steps:
    #   - template: ci/publish-and-test.yml
    #     parameters:
    #       task: ${{ var }}

    # - job: validate_uploaded_task
    #   displayName: Validate uploaded task
    #   pool:
    #     vmImage: windows-2022
    #   steps:
    #     template: ci/validate-task.yml

  # - ${{ if not(parameters.build_single_task) }}:
  #   - job: build_all_windows
  #     displayName: Build all tasks (Windows)
  #   #  condition: eq(variables.os, 'Windows_NT')
  #     timeoutInMinutes: 180
  #     pool:
  #       vmImage: windows-2022
  #     steps:
  #     - template: ci/build-all-steps.yml
  #       parameters:
  #         os: Windows_NT


      
# - job: validate_uploaded_task
#    displayName: Validate uploaded task
#    pool:
#      vmImage: windows-2022
#    steps:
#      template: ci/validate-task.yml

# - job: remove_task_from_organization
#    displayName: remove
#    pool:
#   vmImage: windows-2022
# steps:
#   template: ci/remove-task.yml
