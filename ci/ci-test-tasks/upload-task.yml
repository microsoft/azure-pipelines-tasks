parameters:
  - name: task
    type: string

steps:
- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: '${{ parameters.task }}'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(System.ArtifactsDirectory)/${{parameters.task}}/tasks.zip'
    destinationFolder: 'task-${{ parameters.task }}'
    cleanDestinationFolder: true
    overwriteExistingFiles: true

- script: |
    npm install -g tfx-cli@0.14
  displayName: 'npm install -g tfx-cli' 

- script: |
    tfx login --auth-type pat --service-url $(ADOUrl) --token $(ADOToken)
  displayName: 'tfx login' 

- bash: echo "##vso[task.setvariable variable=one]secondValue"
  displayName: Set new variable value

- script: |
    echo $(one)
  displayName: Print variable

- bash: |
    echo "##vso[task.setvariable variable=one]secondValue"
    echo "##vso[task.setvariable variable=TASKS]$(node ./ci/ci-test-tasks/script.js)"
    echo "##vso[task.setvariable variable=TASKID]$(node ./ci/ci-test-tasks/get-task-guid.js ./task-${{ parameters.task }}/${{parameters.task}}/task.json)"
    echo script output: $(node ./ci/ci-test-tasks/script.js)
    echo ID: $(node ./ci/ci-test-tasks/get-task-guid.js ./task-${{ parameters.task }}/${{parameters.task}}/task.json)
  displayName: Set new variable value

- bash: |
    echo $(one)
    echo $(TASKS)
    echo $(TASKID)
  displayName: Print variable

- bash: |
    echo $(one)
    echo $(TASKID)
    echo $TASKID
    echo "Deleting task $(TASKID)"
    tfx build tasks delete --task-id $(TASKID)
  displayName: 'Delete task' 
  
- script: |
    npm install -g tfx-cli
    tfx login --auth-type pat --service-url $(ADOUrl) --token $(ADOToken) --no-prompt
    TASKID=`node ./ci/ci-test-tasks/get-task-guid.js ./task-${{ parameters.task }}/${{parameters.task}}/task.json`
    echo $TASKID
    echo "##vso[task.setvariable variable=TASKID;]$TASKID"
    echo "Deleting task $TASKID"
    tfx build tasks delete --task-id $TASKID --no-prompt
    echo "Uploading task $TASKID"
    tfx build tasks upload --task-path ./task-${{ parameters.task }}/${{parameters.task}} --no-prompt
  displayName: 'Upload task'
