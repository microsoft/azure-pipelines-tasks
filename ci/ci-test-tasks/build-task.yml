parameters:
- name: task
  type: string
- name: patchVersion
  type: boolean
- name: version
  type: string
- name: BuildSourceVersion
  type: string

steps:

- bash: |
    git init
    git remote add origin https://github.com/microsoft/azure-pipelines-tasks
    git fetch --force --tags --prune --prune-tags --progress --no-recurse-submodules origin --depth=1 +${{ parameters.BuildSourceVersion }}:refs/remotes/origin/${{ parameters.BuildSourceVersion }}
    git checkout --progress --force refs/remotes/origin/${{ parameters.BuildSourceVersion }}
  displayName: Checkout ${{ parameters.BuildSourceVersion }}

# Start collect diagnostics
- powershell: ./ci/start-collect-diagnostics.ps1
  displayName: Start collect diagnostics

# Use node 8, npm 5
- task: NodeTool@0
  displayName: Use node 8
  inputs:
    versionSpec: 8.x

# npm install
- script: npm install
  displayName: Npm install

- ${{ if parameters.patchVersion }}:
  - script: node ci/patch-task-version.js --task=${{ parameters.task }} --version=${{ parameters.version }}
    displayName: Patch task version

# Verify min agent demands
- script: |
    cd ci/verifyMinAgentDemands
    npm install
  displayName: Npm install min agent demands

- script: node ./ci/verifyMinAgentDemands/index.js
  displayName: Verify min agent demands

# Build
- script: node make.js build --task "${{ parameters.task }}"
  displayName: Build

# Check diff for task sources
#- script: node ./ci/verify-source-changes.js "${{ parameters.task }}"
#  displayName: Verify task source changes

# Test
- script: node make.js test --task "${{ parameters.task }}"
  displayName: Run tests
- script: node make.js testLegacy --task "${{ parameters.task }}"
  displayName: Legacy tests with node 6

# Publish test results
- task: PublishTestResults@2
  displayName: Publish Test Results test-*.xml
  inputs:
    testResultsFiles: test-*.xml
    testRunTitle: Node 6 Test Results
    searchFolder: $(System.DefaultWorkingDirectory)/testresults

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\_package\tasks-layout\${{ parameters.task }}\task.zip'
    ArtifactName: '${{ parameters.task }}'
    publishLocation: 'Container'

# Stop collect diagnostics
- powershell: ./ci/stop-collect-diagnostics.ps1
  displayName: Stop collect diagnostics
  condition: always()