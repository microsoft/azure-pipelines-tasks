parameters:
- name: task
  type: string
- name: patchVersion
  type: boolean
- name: version
  type: string

steps:

- ${{ if parameters.patchVersion }}:
  - script: node ci/patch-task-version.js --task=${{ parameters.task }} --version=${{ parameters.version }}
    displayName: Patch ${{ parameters.task }} task version

# Build
- script: node make.js build --task "${{ parameters.task }}"
  displayName: Build ${{ parameters.task }}

# Check diff for task sources
#- script: node ./ci/verify-source-changes.js "${{ parameters.task }}"
#  displayName: Verify task source changes

# Test
- script: node make.js test --task "${{ parameters.task }}"
  displayName: Run tests for ${{ parameters.task }}

- script: node make.js testLegacy --task "${{ parameters.task }}"
  displayName: Legacy tests with node 6

# Publish test results
- task: PublishTestResults@2
  displayName: Publish Test Results test-*.xml
  inputs:
    testResultsFiles: test-*.xml
    testRunTitle: Node 6 Test Results
    searchFolder: $(System.DefaultWorkingDirectory)/testresults

# Stage tasks individually into the package directory
- script: node ./ci/stage-package.js false individually
  displayName: Stage tasks individually into the package directory

- task: PublishBuildArtifacts@1
  displayName: Publish build artifact for ${{ parameters.task }}
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\_package\tasks-layout\${{ parameters.task }}\task.zip'
    ArtifactName: '${{ parameters.task }}'
    publishLocation: 'Container'