pr:
  - master

jobs:
- job: detect_changes
  displayName: Detect changes
  pool:
    vmImage: ubuntu-20.04
  steps:
  - script: |
      git fetch origin master
      git diff --name-only origin/master
      echo "##vso[task.setvariable variable=TASKS;isoutput=true]$(node ./ci/ci-test-tasks/detect-changed-tasks.js $(git diff --name-only origin/master))"
    displayName: 'Detect changed tasks'
    name: detect
 
- job: get_ado_token
  displayName: Get ADO Token
  pool:
    vmImage: ubuntu-20.04
  steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'ci-test-tasks'
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: 'try {az account get-access-token} catch { $Exception = $_; $Exception | Format-List * -Force | Out-String ; $Exception.InvocationInfo | Format-List * -Force | Out-String ; for ($i = 0; $Exception; $i++, ($Exception = $Exception.InnerException)) { Write-Host ("$i" * 80) ; $Exception | Format-List * -Force | Out-String  }  })'
    displayName: 'Get ADO Token using WIF'
    name: token

- job: run_main_test_pipeline
  displayName: Run main test pipeline
  condition: and(succeeded(),gt(length(dependencies.detect_changes.outputs['detect.TASKS']), 0))
  dependsOn: [ detect_changes , get_ado_token ]
  variables:
      - name: tasks
        value: $[dependencies.detect_changes.outputs['detect.TASKS']]
      - name: adoToken
        value: $[dependencies.get_ado_token.outputs['token.ADOTOKEN']]
  pool:
    vmImage: ubuntu-20.04
  steps:
  - script: |
      npm i axios
    displayName: npm i axios
  - script: |
      echo $(tasks)
      node ./ci/ci-test-tasks/test-and-verify-v2.js $(adoToken) $(ADOUrl) $(System.TeamProject) $(tasks)
    displayName: 'Run test pipelines and verify results'
    failOnStderr: true
