parameters:
- name: tasks
  displayName: Tasks to process (separate by colons, no whitespaces)
  type: string
  default: DownloadPackageV1
- name: BuildSourceVersion
  displayName: The latest version control change of the triggering repo that is included in this build.
  type: string

trigger: none
pr: none

pool:
  vmImage: windows-2022

stages:
- stage: BuildAndTest
  condition: eq(variables['build.reason'], 'Manual')
  jobs:
    - job: BuildAndTest
      displayName: Build and test
      steps:
      - bash: |
          git init
          git remote add origin https://github.com/microsoft/azure-pipelines-tasks
          git fetch --force --tags --prune --prune-tags --progress --no-recurse-submodules origin --depth=1 +${{ parameters.BuildSourceVersion }}:refs/remotes/origin/${{ parameters.BuildSourceVersion }}
          git checkout --progress --force refs/remotes/origin/${{ parameters.BuildSourceVersion }}
        displayName: Checkout ${{ parameters.BuildSourceVersion }}

      # Use node 8, npm 5
      - task: NodeTool@0
        displayName: Use node 8
        inputs:
          versionSpec: 8.x

      - ${{ each task in split(parameters.tasks, ',') }}:
        - template: ./build-task.yml
          parameters:
            task: ${{ task }}
            push: false
            publishArtifact: true
            patchVersion: true
            version: '0.999.0'
            BuildSourceVersion: ${{ parameters.BuildSourceVersion }}

      - script: |
          npm install -g tfx-cli@0.14
        displayName: 'npm install -g tfx-cli'

      - script: |
          tfx login --auth-type pat --service-url $(ADOUrl) --token $(ADOToken)
        displayName: 'tfx login'

      - ${{ each task in split(parameters.tasks, ',') }}:
        - template: ./delete-task.yml
          parameters:
            task: ${{ task }}

      - ${{ each task in split(parameters.tasks, ',') }}:
        - template: ./upload-task.yml
          parameters:
            task: ${{ task }}

      - ${{ each task in split(parameters.tasks, ',') }}:
        - template: ./test-task.yml
          parameters:
            task: ${{ task }}

      - ${{ each task in split(parameters.tasks, ',') }}:
        - template: ./delete-task.yml
          parameters:
            task: ${{ task }}
