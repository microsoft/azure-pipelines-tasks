steps:
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 6.0.0
  displayName: Install nuget

- powershell: |
    $sourcePath = "$(Build.SourcesDirectory)/azure-pipelines-tasks/.gdn"
    $destinationPath = "$(Build.SourcesDirectory)/"
    Copy-Item -Path $sourcePath -Destination $destinationPath -Recurse
  displayName: Copy baseline files to root

- powershell: |
    cd azure-pipelines-tasks/ci/courtesy-push
    npm install
  displayName: npm install

- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: IndividualNugetPackages
    downloadPath: $(Build.SourcesDirectory)/IndividualNugetPackagesDownloaded
  displayName: Download Artifact

- script: node azure-pipelines-tasks\ci\courtesy-push\courtesy-push.js AzureDevOps $(Build.SourcesDirectory)/IndividualNugetPackagesDownloaded\IndividualNugetPackages\unified_deps.xml
  displayName: Update unified deps and create branch
  env:
    USERNAME: $(User)
    PAT: $(ACCESS_TOKEN)
    USEREMAIL: $(Email)
    BRANCH_NAME: $(branchName)

- powershell: ./azure-pipelines-tasks/ci/set-sprint-variables.ps1
  displayName: Set currentSprint variables

- powershell: |
    $currentDate = Get-Date -Format "yyyyMMdd-HHmm"
    Write-Host "##vso[task.setVariable variable=currentDate]$currentDate"
  displayName: Set currentDate variable

# returns branchName
- template: /ci/generate-branch-name.yml@self

- powershell: |
    # The JS script has already created the branch and pushed changes
    # Use the branch name from the template, but only proceed if JS script set actualBranchName
    $releaseBranch = "$(branchName)"
    $actualBranch = "$(actualBranchName)"
    
    if ([string]::IsNullOrEmpty($actualBranch)) {
        Write-Host "No branch was created by the JS script (no changes detected)"
        exit 0
    }
    
    Write-Host "Branch created by JS script: $releaseBranch"
    Write-Host "Creating Pull Request"
    cd azure-pipelines-tasks\ci\courtesy-push
    node open-courtesy-push-pull-request.js $releaseBranch

    # Sleep 30 seconds to let PR be created
    Start-Sleep -Seconds 30
  displayName: Create PR in Azure DevOps
  condition: ne(variables['actualBranchName'], '')
  env:
    TOKEN: $(System.AccessToken)

- powershell: .\azure-pipelines-tasks\ci\courtesy-push\send-notification.ps1
  displayName: Send MS Teams notification
  condition: and(eq(variables['build.reason'], 'Schedule'), ne(variables['actualBranchName'], ''))
  env:
    TEAMS_WEBHOOK: $(MSTeamsUri)
  
