steps:
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 6.0.0
  displayName: Install nuget

- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: IndividualNugetPackages
    downloadPath: IndividualNugetPackagesDownloaded
  displayName: Download Artifact

- script: node azure-pipelines-tasks\ci\courtesy-push\courtesy-push.js AzureDevOps IndividualNugetPackagesDownloaded\IndividualNugetPackages\unified_deps.xml
  displayName: Update unified deps

- task: NuGetAuthenticate@0
  displayName: Authenticate with nuget

# Everything until this point is idempotent (other than pushing tasks release branch which will get overwritten if we re-do this anyways).
# Note: Pushing the tasks release branch has to happen in the first job in case commits are pushed between now and then.

- script: |
    cd IndividualNugetPackagesDownloaded
    cd IndividualNugetPackages
    push.cmd
  displayName: Push Nuget packages

- powershell: |
    # Build the release branch name
    $currentSprint = (Invoke-WebRequest https://whatsprintis.it/sprint -Headers @{"Accept"="application/json"} | ConvertFrom-Json).sprint
    $releaseBranch = "users/$(username)/m" + $currentSprint + "/courtesyPush"

    # Push branch to git
    Write-Host "Pushing branch to AzureDevOps"
    cd AzureDevOps
    git checkout -b $releaseBranch
    git config --global user.email "$(username)@microsoft.com"
    git config --global user.name "$(username)"
    git add .nuget\externals\UnifiedDependencies.xml
    git add Tfs\Service\Deploy\components\*
    git commit -m "Courtesy bump of tasks"
    git push origin $releaseBranch --force
    Write-Host "Creating Pull Request"
    cd ..\azure-pipelines-tasks\ci\courtesy-push
    npm install
    node open-courtesy-push-pull-request.js $releaseBranch

    # Sleep 30 seconds to let PR be created
    Start-Sleep -Seconds 30
  displayName: Create PR in Azure DevOps
  env:
    TOKEN: $(Package.Token)

- powershell: .\azure-pipelines-tasks\ci\courtesy-push\send-notification.ps1
  displayName: Send MS Teams notification
  condition: eq(variables['build.reason'], 'Schedule')
  env:
    TEAMS_WEBHOOK: $(MSTeamsUri)
