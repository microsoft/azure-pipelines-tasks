parameters:
  - name: task
    type: string

steps:
- task: NodeTool@0
  displayName: Use node 8
  inputs:
    versionSpec: 10.x

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: '${{ parameters.task }}'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(System.ArtifactsDirectory)/${{parameters.task}}/tasks.zip'
    destinationFolder: 'task-${{ parameters.task }}'
    cleanDestinationFolder: true
    overwriteExistingFiles: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      npm install -g tfx-cli
      tfx login --auth-type pat --service-url $(ADOUrl) --token $(ADOToken) --no-prompt
      find ./
      TASKID=`node ./ci/canary-test/get-task-guid.js ./task-${{ parameters.task }}/${{parameters.task}}/task.json`
      echo $TASKID
      echo "##vso[task.setvariable variable=TASKID;]$TASKID"
      tfx build tasks delete --task-id $TASKID --no-prompt
      tfx build tasks upload --task-path ./task-${{ parameters.task }}/${{parameters.task}} --no-prompt
  displayName: 'Upload task'  

- script: npm install @octokit/core axios
  displayName: 'npm install @octokit/core axios'

- script: |
    echo "Tasks: $(tasks)"
    node ./ci/testing/testAndVerify.js $(ADOToken) ${{ parameters.task }}
  displayName: 'Run testing pipelines for each task and verify results'  

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "Deleting task"
      echo $TASKID
      tfx build tasks delete --task-id $TASKID
  displayName: 'Delete task'  
