{
  "loc.friendlyName": "Node.js ツール インストーラー",
  "loc.helpMarkDown": "[このタスクの詳細を表示](https://docs.microsoft.com/azure/devops/pipelines/tasks/tool/node-js)、または [Node ドキュメントを参照](https://nodejs.org/docs/latest/api/documentation.html)",
  "loc.description": "Node.js の指定されたバージョン仕様を検索またはダウンロードしてキャッシュし、それを PATH に追加します",
  "loc.instanceNameFormat": "Node $(versionSpec) の使用",
  "loc.group.displayName.advanced": "詳細",
  "loc.input.label.versionSource": "バージョンのソース",
  "loc.input.label.versionSpec": "バージョンの仕様",
  "loc.input.help.versionSpec": "取得するバージョンのバージョン仕様。例: 6.x、4.x、6.10.0、6.10.0 以上",
  "loc.input.label.versionFilePath": ".nvmrc ファイルへのパス",
  "loc.input.help.versionFilePath": "バージョンを取得するためのファイル パス。 例: src/.nvmrc",
  "loc.input.label.checkLatest": "最新バージョンのチェック",
  "loc.input.help.checkLatest": "バージョン仕様を満たす利用可能な最新バージョンを常にオンラインで確認します。これは false にするのが一般的ですが、常に最新版を取得する特定のシナリオの場合は例外です。これにより、実際には必要でない場合にもダウンロードのコストが発生することになります (ホストされたビルド プールの場合は特にそう言えます)。",
  "loc.input.label.force32bit": "x64 エージェントで 32 ビット バージョンを使用する",
  "loc.input.help.force32bit": "エージェントの CPU アーキテクチャに関係なく、Node の x86 バージョンをインストールします。",
  "loc.input.label.nodejsMirror": "Node.js バイナリのソースを設定する",
  "loc.input.help.nodejsMirror": "Node.js バイナリをソース化するときは、代替インストール ミラーを使用します。",
  "loc.input.label.retryCountOnDownloadFails": "ノードのダウンロードに失敗した場合の再試行回数を設定する",
  "loc.input.help.retryCountOnDownloadFails": "タスクがミラーからノード バイナリをダウンロードできなかった場合は、このオプションを使用します。タスクは指定された時間、バイナリのダウンロードを再試行します。",
  "loc.input.label.delayBetweenRetries": "再試行の間隔を設定する",
  "loc.input.help.delayBetweenRetries": "再試行間隔をミリ秒単位で設定するには、このオプションを使用します。既定値は 1000 ミリ秒です。",
  "loc.messages.ToolFailed": "ツールをインストールできませんでした: %s",
  "loc.messages.TryRosetta": "プラットフォーム %s およびアーキテクチャ %s のノードが見つかりません。Rosetta2 でインストールしようとしています",
  "loc.messages.NodeVersionNotFound": "プラットフォーム %s とアーキテクチャ %s のノード バージョン %s が見つかりません。",
  "loc.messages.UnexpectedOS": "予期しない OS %s",
  "loc.messages.AgentTempDirNotSet": "Agent.TempDirectory を設定する必要があります。"
}