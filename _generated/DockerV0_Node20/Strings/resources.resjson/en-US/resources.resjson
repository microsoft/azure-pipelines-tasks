{
  "loc.friendlyName": "Docker",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=848006)",
  "loc.description": "Build, tag, push, or run Docker images, or run a Docker command",
  "loc.instanceNameFormat": "$(action)",
  "loc.group.displayName.advanced": "Advanced Options",
  "loc.input.label.containerregistrytype": "Container Registry Type",
  "loc.input.help.containerregistrytype": "Select 'Azure Container Registry' to connect to it by using an Azure Service Connection. Select 'Container registry' to connect to Docker Hub or any other private container registry.",
  "loc.input.label.dockerRegistryEndpoint": "Docker Registry Service Connection",
  "loc.input.help.dockerRegistryEndpoint": "Select a Docker registry service connection. Required for commands that need to authenticate with a registry.",
  "loc.input.label.azureSubscriptionEndpoint": "Azure subscription",
  "loc.input.help.azureSubscriptionEndpoint": "Select an Azure subscription",
  "loc.input.label.azureContainerRegistry": "Azure Container Registry",
  "loc.input.help.azureContainerRegistry": "Select an Azure Container Registry in the selected Azure Subscription. The container image will be built and pushed to this container registry.",
  "loc.input.label.action": "Action",
  "loc.input.help.action": "Select a Docker action.",
  "loc.input.label.dockerFile": "Docker File",
  "loc.input.help.dockerFile": "Path to the Dockerfile.",
  "loc.input.label.addBaseImageData": "Add base image metadata to image(s)",
  "loc.input.help.addBaseImageData": "By default base image data like base image name and digest are added which helps with traceability. You can opt out of this default behavior by using this input.",
  "loc.input.label.buildArguments": "Build Arguments",
  "loc.input.help.buildArguments": "Build-time variables for the Docker file. Specify each name=value pair on a new line.",
  "loc.input.label.defaultContext": "Use Default Build Context",
  "loc.input.help.defaultContext": "Set the build context to the directory that contains the Docker file.",
  "loc.input.label.context": "Build Context",
  "loc.input.help.context": "Path to the build context.",
  "loc.input.label.imageName": "Image Name",
  "loc.input.help.imageName": "Name of the Docker image to build, push, or run.",
  "loc.input.label.imageNamesPath": "Image Names Path",
  "loc.input.help.imageNamesPath": "Path to a text file that contains the names of the Docker images to tag or push. Each image name is contained on its own line.",
  "loc.input.label.qualifyImageName": "Qualify Image Name",
  "loc.input.help.qualifyImageName": "Qualify the image name with the Docker registry service connection's hostname if not otherwise specified.",
  "loc.input.label.additionalImageTags": "Additional Image Tags",
  "loc.input.help.additionalImageTags": "Additional tags for the Docker image being built or pushed.",
  "loc.input.label.includeSourceTags": "Include Source Tags",
  "loc.input.help.includeSourceTags": "Include Git tags when building or pushing the Docker image.",
  "loc.input.label.includeLatestTag": "Include Latest Tag",
  "loc.input.help.includeLatestTag": "Include the 'latest' tag when building or pushing the Docker image.",
  "loc.input.label.imageDigestFile": "Image Digest File",
  "loc.input.help.imageDigestFile": "Path to a file that is created and populated with the full image repository digest of the Docker image that was pushed.",
  "loc.input.label.containerName": "Container Name",
  "loc.input.help.containerName": "Name of the Docker container to run.",
  "loc.input.label.ports": "Ports",
  "loc.input.help.ports": "Ports in the Docker container to publish to the host. Specify each host-port:container-port binding on a new line.",
  "loc.input.label.volumes": "Volumes",
  "loc.input.help.volumes": "Volumes to mount from the host. Specify each host-dir:container-dir on a new line.",
  "loc.input.label.envVars": "Environment Variables",
  "loc.input.help.envVars": "Environment variables for the Docker container. Specify each name=value pair on a new line.",
  "loc.input.label.workDir": "Working Directory",
  "loc.input.help.workDir": "The working directory for the Docker container.",
  "loc.input.label.entrypoint": "Entry Point Override",
  "loc.input.help.entrypoint": "Override the default entry point for the Docker container.",
  "loc.input.label.containerCommand": "Command",
  "loc.input.help.containerCommand": "The docker run command first creates a writeable container layer over the specified image, and then starts it by using the specified run command. For example, if the image contains a simple Python Flask web application you can specify 'python app.py' to launch the web application.",
  "loc.input.label.detached": "Run In Background",
  "loc.input.help.detached": "Run the Docker container in the background.",
  "loc.input.label.restartPolicy": "Restart Policy",
  "loc.input.help.restartPolicy": "Select a restart policy.",
  "loc.input.label.restartMaxRetries": "Maximum Restart Retries",
  "loc.input.help.restartMaxRetries": "The maximum number of restart retries the Docker daemon attempts.",
  "loc.input.label.customCommand": "Command",
  "loc.input.help.customCommand": "Docker command to execute, with arguments. For example, 'rmi -f image-name' to force remove an image.",
  "loc.input.label.dockerHostEndpoint": "Docker Host Service Connection",
  "loc.input.help.dockerHostEndpoint": "Select a Docker host service connection. Defaults to the agent's host.",
  "loc.input.label.enforceDockerNamingConvention": "Force image name to follow Docker naming convention",
  "loc.input.help.enforceDockerNamingConvention": "If enabled docker image name will be modified to follow Docker naming convention. Converts upper case character to lower case and removes spaces in image name.",
  "loc.input.label.cwd": "Working Directory",
  "loc.input.help.cwd": "Working directory for the Docker command.",
  "loc.input.label.memory": "Memory limit",
  "loc.input.help.memory": "The maximum amount of memory available to the container as a integer with optional suffixes like '2GB'.",
  "loc.messages.ContainerPatternFound": "Pattern found in docker filepath parameter",
  "loc.messages.ContainerPatternNotFound": "No pattern found in docker filepath parameter",
  "loc.messages.ContainerDockerFileNotFound": "No Docker file matching  %s  was found.",
  "loc.messages.ConnectingToDockerHost": "DOCKER_HOST variable is set. Docker will try to connect to the Docker host: %s",
  "loc.messages.DockerHostVariableWarning": "DOCKER_HOST variable is set. Please ensure that the Docker daemon is running on: %s",
  "loc.messages.NoImagesInImageNamesFile": "At least one image name is expected in file '%s'.",
  "loc.messages.CantWriteDataToFile": "Can not write data to the file %s. Error: %s",
  "loc.messages.NoDataWrittenOnFile": "No data was written into the file %s",
  "loc.messages.FileContentSynced": "Synced the file content to the disk. The content is %s.",
  "loc.messages.OutputVariableDataSizeExceeded": "Output variable not set as Docker command output exceeded the maximum supported length. Output length: %s, Maximum supported length: %s",
  "loc.messages.WritingDockerConfigToTempFile": "Writing Docker config to temp file. File path: %s, Docker config: %s"
}