{
  "loc.friendlyName": "使用 .NET Core",
  "loc.helpMarkDown": "[详细了解此任务](https://aka.ms/AA4xgy0)",
  "loc.description": "从 Internet 或本地缓存获取特定版本的 .NET Core SDK，并将其添加到 PATH。使用此任务更改后续任务中使用的 .NET Core 版本。另外还提供代理支持。",
  "loc.instanceNameFormat": "使用 .NET Core $(packageType) $(version)",
  "loc.releaseNotes": "<li>支持并行安装多个版本。</li><li>支持版本模式，以获取最新的次要/主要版本。</li><li>限制多级查找</li><li>安装 NuGet 并提供代理支持。</li><li>从 \"global.json\" 文件安装 sdk 版本</li>",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.packageType": "要安装的包",
  "loc.input.help.packageType": "请选择仅安装运行时还是安装 SDK。",
  "loc.input.label.useGlobalJson": "使用全局 json",
  "loc.input.help.useGlobalJson": "选择此选项以安装 global.json 文件中的所有 SDK。可从 system.DefaultWorkingDirectory 中搜索这些文件。可通过设置工作目录输入来更改搜索根路径。",
  "loc.input.label.workingDirectory": "工作目录",
  "loc.input.help.workingDirectory": "指定在使用 `Use global json` 时应从其中搜索 global.json 文件的路径。如果为空，则 `system.DefaultWorkingDirectory` 将被视为根路径。",
  "loc.input.label.version": "版本",
  "loc.input.help.version": "指定要安装的 .NET Core SDK 或运行时的版本。<br/>可按以下格式提供版本<li>2.x   => 安装最新主要版本。</li><li>2.2.x => 安装最新主要版本和次要版本</li><li>2.2.104 => 安装确切版本</li><br/>从 releases.json 中查找 `version` 的值，以安装 SDK/运行时。指向该 major.minor 版本的 releases.json 的链接可在[版本索引文件****](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json)中找到。例如指向 releases.json 2.2 版本的链接为 https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.input.label.vsVersion": "兼容 Visual Studio 版本",
  "loc.input.help.vsVersion": "指定要安装 .NET Core SDK 的兼容 Visual Studio 的版本。请指定完整的 VS 版本(如 16.6.4)，其中包含主要版本、次要版本和补丁号。从 releases.json 查找用于安装 SDK/运行时的“版本”值。在 [releases-index 文件](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json)中可以找到该 major.minor 版本的 releases.json 的链接 ",
  "loc.input.label.includePreviewVersions": "包括预览版本",
  "loc.input.help.includePreviewVersions": "选择在搜索最新版本时(例如在搜索 2.2.x 时)，是否希望包括预览版本。如果指定了确切版本(例如 3.0.100-preview3-010431)，则忽略此设置",
  "loc.input.label.installationPath": "安装 .Net Core 的路径",
  "loc.input.help.installationPath": "指定应在何处安装 .Net Core SDK/运行时。不同的路径可能会对 .Net 的行为产生以下影响。<li>$(Agent.ToolsDirectory): 这会在代理上缓存版本，因为未在多个管道之间清理此目录。在代理上运行的所有管道都有权访问以前使用代理安装的版本。</li><li>$(Agent.TempDirectory): 这可以确保管道不使用任何缓存版本的 .Net core，因为会在每个管道之后清理此文件夹。</li><li>任何其他路径: 可以配置任何其他路径，前提是代理进程有权访问该路径。这将更改计算机的状态并影响在其上运行的所有进程。<br/>请注意，还可以配置多级查找设置，该设置可以配置 .Net 主机对适当版本的探测。",
  "loc.input.label.performMultiLevelLookup": "执行多级查找",
  "loc.input.help.performMultiLevelLookup": "此输入仅适用于基于 Windows 的代理。这将配置 .Net 主机进程的行为以查找合适的共享框架。<li>未选中: 主机进程将仅查看在此任务中指定的文件夹中存在的版本。</li><li>选中: 主机将尝试使用多级查找查看预定义的全局位置。<br/>默认全局位置为: <br/><b>对于 Windows:</b><br/>C:\\Program Files\\dotnet (64 位进程)<br/>C:\\Program Files (x86)\\dotnet (32 位进程)</li> 可在[**此处**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md)阅读其详细信息。<br/>",
  "loc.messages.ToolFailed": "工具安装失败: %s",
  "loc.messages.ImplicitVersionNotSupported": "版本应为有效的显式版本: %s",
  "loc.messages.getMachinePlatformFailed": "无法获取计算机平台详细信息。错误: %s。",
  "loc.messages.getDownloadUrlsFailed": "未能获取下载 URL。错误: %s。",
  "loc.messages.UsingCachedTool": "存在 .NET Core 的缓存副本。不需要重新安装。缓存工具位置: %s。",
  "loc.messages.CheckingToolCache": "正在检查是否存在此版本的缓存副本...",
  "loc.messages.InstallingAfresh": "缓存未包含 .NET Core 的请求版本。立即下载并安装。",
  "loc.messages.GettingDownloadUrl": "正在获取用于下载 .NET Core %s 版本 %s 的 URL。",
  "loc.messages.CouldNotDetectPlatform": "无法检测计算机的操作系统",
  "loc.messages.NullDownloadUrls": "无法构造下载 URL。请确保指定的版本 %s 有效。",
  "loc.messages.DownloadingUrl": "正在从 URL 下载 .NET Core 包: %s",
  "loc.messages.ExtractingPackage": "正在解压已下载的包 %s。",
  "loc.messages.CachingTool": "正在缓存已安装的此工具。",
  "loc.messages.SuccessfullyInstalled": "已成功安装 .NET Core %s 版本 %s。",
  "loc.messages.ToolToInstall": "要安装的工具: .NET Core %s 版本 %s。",
  "loc.messages.PrimaryPlatform": "检测到的平台(主要): %s",
  "loc.messages.LegacyPlatform": "检测到的平台(旧版): %s",
  "loc.messages.CouldNotDownload": "无法从该 URL 下载安装包: %s 错误: %s",
  "loc.messages.FailedToDownloadPackage": "无法下载用于安装的包",
  "loc.messages.PrependGlobalToolPath": "正在创建全局工具路径并预附加到 PATH。",
  "loc.messages.VersionsFileMalformed": "在支持的版本文档中，指定版本的下载链接格式不正确 => %s/",
  "loc.messages.MatchingVersionNotFound": "针对以下指定的版本找不到匹配的 %s 版本: %s 请注意，如果选中“包括预览版本”复选框，则仅在最新版本搜索中考虑预览版本。",
  "loc.messages.UnableToAccessPath": "无法访问路径: %s。错误: %s。请确保代理进程有权访问该路径。",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "版本 %s 无法从 URL %s 中下载。URL 或版本不正确。",
  "loc.messages.CopyingFoldersIntoPath": "正在将所有根文件夹复制到安装路径: %s",
  "loc.messages.CopyingFilesIntoPath": "正在将根文件(如 dotnet.exe)复制到安装路径: %s",
  "loc.messages.FailedToCopyTopLevelFiles": "未能将根文件复制到安装路径: %s。错误: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "安装版本 %s(位于路径 %s 下)时失败，出现错误: %s",
  "loc.messages.ExplicitVersionRequired": "不允许使用版本: %s。要安装的版本应为以下格式: major.minor.patchversion。例如: 2.2.1",
  "loc.messages.VersionFoundInCache": "已在缓存中找到版本 %s。",
  "loc.messages.VersionNotFoundInCache": "未在缓存中找到版本 %s。",
  "loc.messages.CreatingInstallationCompeleteFile": "正在创建 .Net Core %s 版本 %s 的安装完成标记文件",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "找不到包类型 %s (版本为 %s)的运行时版本",
  "loc.messages.PathNotFoundException": "未能找到路径: %s。请确保该路径存在。",
  "loc.messages.VersionIsLocalLatest": "版本 %s 是路径 %s 中存在的版本之中的最新版本",
  "loc.messages.VersionIsNotLocalLatest": "版本 %s 不是 %s 中存在的版本之中的最新版本",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "对于以下操作系统平台(rid)，找不到 .Net Core %s 版本 %s 的下载 URL: %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "未能下载或分析 releases-index.json，出现错误: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "针对以下用户指定的版本规范找到版本 %s (位于通道 %s 中): %s",
  "loc.messages.UrlForReleaseChannelNotFound": "找不到通道版本为 %s 的 releases.json 的 URL",
  "loc.messages.NoSuitableChannelWereFound": "找不到与版本 %s 对应的通道。",
  "loc.messages.DetectingPlatform": "正在检测操作系统平台以查找操作系统的正确下载包。",
  "loc.messages.FailedInDetectingMachineArch": "检测计算机操作系统平台时失败，出现错误: %s",
  "loc.messages.runtimeVersionPropertyNotFound": "找不到 .Net Core %s 版本 %s 的 runtime-version 属性。",
  "loc.messages.VersionNotFound": "找不到与以下内容匹配的 %s 版本: %s",
  "loc.messages.VersionNotAllowed": "不允许使用版本 %s。允许的版本类型为: majorVersion.x、majorVersion.minorVersion.x、majorVersion.minorVersion.patchVersion。更多详细信息: %s",
  "loc.messages.VersionsCanNotBeCompared": "无法比较版本 %s 和 %s。这两个版本都应是显式的。",
  "loc.messages.FileNameNotCorrectCompleteFileName": "文件名 %s 不是正确的 \".complete\" 文件。",
  "loc.messages.ChannelVersionsNotComparable": "无法比较通道版本 %s 和 %s。它们都必须具有数字主要版本和次要版本。",
  "loc.messages.LookingForVersionInChannel": "正在通道 %s 中搜索版本",
  "loc.messages.FallingBackToAdjacentChannels": "无法在版本 %s 的通道中找到该版本，现在将在邻近通道中搜索。",
  "loc.messages.ErrorWhileSettingDotNetToolPath": "将 .Net Core 工具路径预附加到 PATH 环境变量时失败。错误: %s",
  "loc.messages.RequiredChannelVersionForSpec": "正在查找通道 %s (针对版本 %s)",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "获取版本 %s(从通道 %s 获取)时失败，出现错误: %s",
  "loc.messages.ComparingInstalledFolderVersions": "正在比较正在安装的版本 %s 是否高于具有文件夹名称 %s 的已安装版本",
  "loc.messages.ComparingInstalledFileVersions": "正在比较正在安装的版本 %s 是否高于具有版本完整文件名 %s 的已安装版本",
  "loc.messages.InvalidChannelObject": "对象不能用作通道，缺少必需的属性，如 channel-version、releases.json。",
  "loc.messages.ReleasesIndexBodyIncorrect": "已分析的版本索引正文不正确。请确保文件中的版本索引部分为非空。",
  "loc.messages.InvalidVersionObject": "Releases.json 具有一个包含无效 %s 对象的版本: %s",
  "loc.messages.InvalidVersion": "指定的版本无效 %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "在发布 %s 中(针对版本 %s)，文件数据不正确(可能缺少必填字段，如 name、rid 和 url): %s",
  "loc.messages.VersionFilesDataIncorrect": "版本的文件数据缺失或缺少必填字段。",
  "loc.messages.VersionInformationNotComplete": "版本 %s 所需的信息在 releases.json 文件中不完整。错误: %s",
  "loc.messages.FailedWhileExtractingPacakge": "提取下载的包时失败，出现错误: %s",
  "loc.messages.InstallingNuGetVersion": "正在安装 NuGet 版本 %s",
  "loc.messages.FailureWhileInstallingNuGetVersion": "安装 NuGet 版本时失败。错误: %s",
  "loc.messages.SettingUpNugetProxySettings": "正在设置 NuGet 的代理配置。",
  "loc.messages.GlobalJsonFound": "在路径 %s 中找到了 global.json",
  "loc.messages.GlobalJsonSdkVersion": "SDK 版本 %s 由路径 %s 中的 global.json 指定",
  "loc.messages.GlobalJsonIsEmpty": "路径 %s 中的 global.json 为空。未指定任何版本。",
  "loc.messages.FailedToFindGlobalJson": "未能在路径 %s 中找到 global.json",
  "loc.messages.FailedToReadGlobalJson": "路径 \"%s\" 中的 global.json 的格式不正确。有关 global.json 的信息，请访问此处: https://docs.microsoft.com/zh-cn/dotnet/core/tools/global-json。尝试读取时出错: %s",
  "loc.messages.VersionNumberHasTheWrongFormat": "版本号 %s 的格式不正确。可按以下格式提供版本: 2.x   => 安装最新主要版本。2.2.x => 安装最新主要版本和次要版本。2.2.104 => 安装确切版本。从 releases.json 中查找 `version` 值，以安装 SDK/运行时。指向该 major.minor 版本的 releases.json 的链接可在[版本索引文件****](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json)中找到。例如指向 releases.json 2.2 版本的链接为 https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.messages.OnlyExplicitVersionAllowed": "仅接受显式版本，例如: 2.2.301。版本 %s 无效。",
  "loc.messages.SupportPhaseNotPresentInChannel": "通道版本为 %s 的通道中不存在支持阶段。",
  "loc.messages.DepricatedVersionNetCore": "你指定的 NET Core 版本 %s 不受支持，并且即将从托管代理中删除。有关 .NET 支持策略的详细信息，请参阅 https://aka.ms/dotnet-core-support。"
}