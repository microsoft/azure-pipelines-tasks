{
  "loc.friendlyName": "Use Node.js ecosystem",
  "loc.helpMarkDown": "",
  "loc.description": "Set up a Node.js environment and add it to the PATH, additionally providing proxy support",
  "loc.instanceNameFormat": "Use Node $(versionSpec)",
  "loc.input.label.version": "Version",
  "loc.input.help.version": "Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0",
  "loc.input.label.checkLatest": "Check for Latest Version",
  "loc.input.help.checkLatest": "Always checks online for the latest available version that satisfies the version spec. This is typically false unless you have a specific scenario to always get latest. This will cause it to incur download costs when potentially not necessary, especially with the hosted build pool.",
  "loc.input.label.force32bit": "Use 32 bit version on x64 agents",
  "loc.input.help.force32bit": "Installs the x86 version of Node regardless of the CPU architecture of the agent.",
  "loc.input.label.retryCountOnDownloadFails": "Set retry count when nodes downloads failed",
  "loc.input.help.retryCountOnDownloadFails": "Use this option when the task failed to download node binaries from the mirror. The task will retry to download the binaries for the specified times.",
  "loc.input.label.delayBetweenRetries": "Set delay between retries",
  "loc.input.help.delayBetweenRetries": "Use this option to set the delay between retries in milliseconds. The default value is 1000 milliseconds.",
  "loc.messages.ToolFailed": "Node install failed: %s",
  "loc.messages.TryRosetta": "Unable to find Node for platform %s and architecture %s. Trying to install with Rosetta2",
  "loc.messages.NodeVersionNotFound": "Unable to find Node version %s for platform %s and architecture %s.",
  "loc.messages.UnexpectedOS": "Unexpected OS %s",
  "loc.messages.AgentTempDirNotSet": "Expected Agent.TempDirectory to be set."
}