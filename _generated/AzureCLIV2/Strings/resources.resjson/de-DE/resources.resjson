{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[Weitere Informationen zu dieser Aufgabe](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) oder [Azure CLI-Dokumentation anzeigen](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Hiermit werden Azure CLI-Befehle für ein Azure-Abonnement in einem PowerShell Core-/Shellskript (bei Ausführung für einen Linux-Agent) oder einem PowerShell-/PowerShell Core-/Batchskript (bei Ausführung für einen Windows-Agent) ausgeführt.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "Neuerungen in Version 2.0:\n– Unterstützung für PowerShell- und PowerShell Core-Skripts. \n– PowerShell Core arbeitet mit plattformübergreifenden Agents (Linux, macOS oder Windows). Stellen Sie sicher, dass der Agent PowerShell-Version 6 oder höher verwendet. \n– Ein PowerShell-Skript funktioniert nur mit dem Windows-Agent. Stellen Sie sicher, dass der Agent PowerShell-Version 5 oder niedriger verwendet.",
  "loc.group.displayName.advanced": "Erweitert",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager-Verbindung",
  "loc.input.help.connectedServiceNameARM": "Wählen Sie eine Azure Resource Manager-Dienstverbindung für die Bereitstellung aus.",
  "loc.input.label.scriptType": "Skripttyp",
  "loc.input.help.scriptType": "Skripttyp: PowerShell-/PowerShell Core-/BAT-/Shellskript. Wählen Sie bei Ausführung für einen Linux-Agent ein Shell-/PowerShell Core-Skript oder bei Ausführung für einen Windows-Agent ein Batch-/PowerShell-/PowerShell Core-Skript aus. Das PowerShell Core-Skript kann für plattformübergreifende Agents (Linux, macOS oder Windows) ausgeführt werden.",
  "loc.input.label.scriptLocation": "Skriptspeicherort",
  "loc.input.help.scriptLocation": "Pfad zum Skript: Dateipfad oder Inlineskript",
  "loc.input.label.scriptPath": "Skriptpfad",
  "loc.input.help.scriptPath": "Vollqualifizierter Pfad des Skripts (PS1 oder BAT oder CMD bei Verwendung des Windows-basierten Agents, PS1 oder SH bei Verwendung eines Linux-basierten Agents) oder ein Pfad relativ zum Standardarbeitsverzeichnis",
  "loc.input.label.inlineScript": "Inlineskript",
  "loc.input.help.inlineScript": "Sie können Ihre Skripts hier inline einfügen. Bei Verwendung eines Windows-Agents verwenden Sie ein PowerShell-, PowerShell Core- oder Batchskript, bei Verwendung eines Linux-basierten Agents ein PowerShell- oder Shellskript. Verwenden Sie für Batchdateien das Präfix \"call\" vor jedem Azure-Befehl. Sie können außerdem mithilfe von Argumenten vordefinierte und benutzerdefinierte Variablen an das Skript übergeben. \n\n Beispiel für PowerShell/PowerShellCore/Shell: \naz --version \naz account show \n\n Beispiel für Batch: \ncall  az --version \ncall az account show",
  "loc.input.label.scriptArguments": "Skriptargumente",
  "loc.input.help.scriptArguments": "An das Skript übergebenen Argumente",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Stellt oben in Ihrem PowerShell-/PowerShell Core-Skript die Zeile \"$ErrorActionPreference = 'VALUE'\" voran.",
  "loc.input.label.addSpnToEnvironment": "Auf Dienstprinzipaldetails im Skript zugreifen",
  "loc.input.help.addSpnToEnvironment": "Fügt die Dienstprinzipal-ID, den Dienstprinzipalschlüssel und die Mandanten-ID des ausgewählten Azure-Endpunkts zur Ausführungsumgebung des Skripts hinzu. Sie können in Ihrem Skript die folgenden Variablen verwenden: \"servicePrincipalId\", \"servicePrincipalKey\" und \"tenantId\".\n\nEine Berücksichtigung erfolgt nur, wenn der Azure-Endpunkt das Dienstprinzipal-Authentifizierungsschema aufweist.\n\nDie Syntax für den Zugriff auf Umgebungsvariablen basiert auf dem Skripttyp.\n\nPowerShell-Skript: $env:servicePrincipalId\n\nBatchskript: %servicePrincipalId% \n\nShellskript: $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "Globale Azure CLI-Konfiguration verwenden",
  "loc.input.help.useGlobalConfig": "Bei Festlegung auf FALSE verwendet diese Aufgabe ein eigenes, separates [Azure CLI-Konfigurationsverzeichnis](https://docs.microsoft.com/de-de/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file). Dieses Verzeichnis kann zum Ausführen von Azure CLI-Aufgaben in *parallelen* Releases verwendet werden.",
  "loc.input.label.cwd": "Arbeitsverzeichnis",
  "loc.input.help.cwd": "Das aktuelle Arbeitsverzeichnis, in dem das Skript ausgeführt wird. Wenn keine Angabe erfolgt, wird der Stamm des Repositorys (Build) oder der Artefakte (Release) verwendet, das \"$(System.DefaultWorkingDirectory)\" lautet.",
  "loc.input.label.failOnStandardError": "Fehler bei Standardfehler.",
  "loc.input.help.failOnStandardError": "Bei aktivierter Option kann diese Aufgabe nicht erfolgreich ausgeführt werden, wenn Fehler in den StandardError-Stream geschrieben werden. Deaktivieren Sie das Kontrollkästchen, um Standardfehler zu ignorieren, und bestimmen Sie den Status mithilfe von Exitcodes.",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "$LASTEXITCODE ignorieren",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "Wenn dieser Wert FALSE ist, wird am Ende Ihres Skripts die Zeile \"if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }\" angehängt. Dadurch wird der letzte Exitcode aus einem externen Befehl als Exitcode der PowerShell weitergegeben. Andernfalls wird die Zeile nicht an das Ende Ihres Skripts angehängt.",
  "loc.messages.ScriptReturnCode": "Skript wurde mit Rückgabecode beendet: %d",
  "loc.messages.ScriptFailed": "Skriptfehler: %s",
  "loc.messages.ScriptFailedStdErr": "Das Skript weist Ausgabe in stderr auf. Dies verursacht einen Fehler, weil \"failOnStdErr\" auf TRUE festgelegt ist.",
  "loc.messages.ScriptFailedWithExitCode": "Skriptfehler mit Exitcode %d.",
  "loc.messages.UnsupportedEndpointScheme": "Nicht unterstütztes Authentifizierungsschema für Dienstverbindung: Dienstprinzipal für AzureRM",
  "loc.messages.AzureSDKNotFound": "Azure CLI 2.x ist nicht auf diesem Computer installiert.",
  "loc.messages.FailedToLogout": "Beim Abmelden ist der folgende Fehler aufgetreten: %s",
  "loc.messages.LoginFailed": "Fehler bei der Azure-Anmeldung.",
  "loc.messages.MSILoginFailed": "Fehler bei der Azure-Anmeldung mit einer verwalteten Dienstidentität.",
  "loc.messages.AuthSchemeNotSupported": "Das Authentifizierungsschema \"%s\" wird nicht unterstützt.",
  "loc.messages.ErrorInSettingUpSubscription": "Fehler beim Festlegen des Abonnements.",
  "loc.messages.SettingAzureConfigDir": "AZURE_CONFIG_DIR-Umgebungsvariable wird festgelegt auf: %s",
  "loc.messages.SettingAzureCloud": "Aktive Cloud wird festgelegt auf: %s",
  "loc.messages.JS_InvalidFilePath": "Die Skriptdatei wurde am angegebenen Skriptspeicherort nicht gefunden: \"%s\". Überprüfen Sie, ob das Skript im angegebenen Pfad vorhanden ist. Wenn Sie ein Inlineskript verwenden möchten, geben Sie den Skriptspeicherort als \"inlineScript\" an.",
  "loc.messages.JS_InvalidErrorActionPreference": "ErrorActionPreference \"%s\" ungültig. Der Wert muss \"Stop\", \"Continue\" oder \"SilentlyContinue\" sein.",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "Für Agent-Versionen vor 2.115.0 kann nur die globale Azure CLI-Konfiguration verwendet werden.",
  "loc.messages.UnacceptedScriptLocationValue": "\"%s\" ist kein gültiger Wert für die Aufgabeneingabe für den Skriptspeicherort (\"scriptLocation\" in YAML). Der Wert kann entweder \"inlineScript\"oder \"scriptPath\" lauten."
}