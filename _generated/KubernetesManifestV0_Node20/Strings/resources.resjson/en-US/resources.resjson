{
  "loc.friendlyName": "Deploy to Kubernetes",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?linkid=851275) or [see the Kubernetes documentation](https://kubernetes.io/docs/home/)",
  "loc.description": "Use Kubernetes manifest files to deploy to clusters or even bake the manifest files to be used for deployments using Helm charts",
  "loc.instanceNameFormat": "$(action)",
  "loc.input.label.action": "Action",
  "loc.input.help.action": "Choose the action to be performed.",
  "loc.input.label.kubernetesServiceConnection": "Kubernetes service connection",
  "loc.input.help.kubernetesServiceConnection": "Select a Kubernetes service connection.",
  "loc.input.label.namespace": "Namespace",
  "loc.input.help.namespace": "Sets the namespace for the commands by using the â€“namespace flag. If the namespace is not provided, the commands will run in the default namespace.",
  "loc.input.label.strategy": "Strategy",
  "loc.input.help.strategy": "Deployment strategy to be used",
  "loc.input.label.trafficSplitMethod": "Traffic split method",
  "loc.input.help.trafficSplitMethod": "Traffic split method to be used",
  "loc.input.label.percentage": "Percentage",
  "loc.input.help.percentage": "Percentage of traffic redirect to canary deployment",
  "loc.input.label.baselineAndCanaryReplicas": "Baseline and canary replicas",
  "loc.input.help.baselineAndCanaryReplicas": "Baseline and canary replicas count",
  "loc.input.label.manifests": "Manifests",
  "loc.input.help.manifests": "Manifests to deploy",
  "loc.input.label.containers": "Containers",
  "loc.input.help.containers": "Containers",
  "loc.input.label.imagePullSecrets": "ImagePullSecrets",
  "loc.input.help.imagePullSecrets": "ImagePullSecret to pull image from private registry",
  "loc.input.label.renderType": "Render Engine",
  "loc.input.help.renderType": "Tool to use for generating manifest files.",
  "loc.input.label.dockerComposeFile": "Path to docker compose file",
  "loc.input.help.dockerComposeFile": "docker-compose file path",
  "loc.input.label.helmChart": "Helm Chart",
  "loc.input.help.helmChart": "Helm chart path to bake",
  "loc.input.label.releaseName": "Helm Release Name",
  "loc.input.help.releaseName": "Helm release name to use",
  "loc.input.label.overrideFiles": "Override Files",
  "loc.input.help.overrideFiles": "Override files to set",
  "loc.input.label.overrides": "Overrides",
  "loc.input.help.overrides": "Override values to set",
  "loc.input.label.kustomizationPath": "Kustomization Path",
  "loc.input.help.kustomizationPath": "The argument must be the path to the directory containing the file, or a git repository URL with a path suffix specifying same with respect to the repository root.",
  "loc.input.label.resourceToPatch": "Resource to patch",
  "loc.input.help.resourceToPatch": "to identify the resource",
  "loc.input.label.resourceFileToPatch": "File path",
  "loc.input.help.resourceFileToPatch": "Path to the file used for patch",
  "loc.input.label.kind": "Kind",
  "loc.input.help.kind": "Kind of K8s object; deployment, replicaSet etc.",
  "loc.input.label.name": "Name",
  "loc.input.help.name": "Name of the k8s object",
  "loc.input.label.replicas": "Replica count",
  "loc.input.help.replicas": "Number of replicas to scale to",
  "loc.input.label.mergeStrategy": "Merge Strategy",
  "loc.input.help.mergeStrategy": "The type of patch being provided; one of [json merge strategic]",
  "loc.input.label.arguments": "Arguments",
  "loc.input.help.arguments": "Arguments for `kubectl delete` command",
  "loc.input.label.patch": "Patch",
  "loc.input.help.patch": "Contents of patch",
  "loc.input.label.secretType": "Type of secret",
  "loc.input.help.secretType": "Create/update a generic or docker imagepullsecret. Select dockerRegistry to create/update the imagepullsecret of the selected registry. An imagePullSecret is a way to pass a secret that contains a container registry password to the Kubelet so it can pull a private image on behalf of your Pod.",
  "loc.input.label.secretName": "Secret name",
  "loc.input.help.secretName": "Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.",
  "loc.input.label.secretArguments": "Arguments",
  "loc.input.help.secretArguments": "Specify keys and literal values to insert in secret.For example, --from-literal=key1=value1 --from-literal=key2=\"top secret\".",
  "loc.input.label.dockerRegistryEndpoint": "Docker registry service connection",
  "loc.input.help.dockerRegistryEndpoint": "Select a Docker registry service connection. Required for commands that need to authenticate with a registry.",
  "loc.input.label.rolloutStatusTimeout": "Timeout for rollout status",
  "loc.input.help.rolloutStatusTimeout": "The length of time (in seconds) to wait before ending watch on rollout status",
  "loc.messages.DownloadPathForStableTxt": "Download path for stable.txt: %s",
  "loc.messages.DownloadKubeCtlFailed": "Can not download the kubectl client of version %s. Check if the version is correct https://github.com/kubernetes/kubernetes/releases",
  "loc.messages.DownloadStableVersionFailed": "Can not download kubernetes stable version file from %s. Falling back to %s",
  "loc.messages.DockerComposeFilePathNotSupplied": "docker-compose file path not supplied",
  "loc.messages.UsingLatestStableVersion": "Invalid version 1.7 specified in Version Spec input. Using latest stable version instead. Check for correct versions https://github.com/kubernetes/kubernetes/releases",
  "loc.messages.NotAValidSemverVersion": "Version not specified in correct format. E.g: 1.8.2, v1.8.2, 2.8.2, v2.8.2.",
  "loc.messages.ManifestFileNotFound": "No manifest file(s) matching %s was found.",
  "loc.messages.KubernetesServiceConnectionNotFound": "Kubernetes service connection details not found.",
  "loc.messages.UnknownRenderType": "Unknown render engine",
  "loc.messages.ResourceKindNotDefined": "Resource kind is null",
  "loc.messages.NullInputObject": "Input object is null.",
  "loc.messages.ArgumentsInputNotSupplied": "Arguments are not supplied.",
  "loc.messages.NullInputObjectMetadata": "Input object metadata is null.",
  "loc.messages.InvalidRejectActionDeploymentStrategy": "Reject action works only with strategy: canary",
  "loc.messages.InvalidPromotetActionDeploymentStrategy": "Promote action works only with strategy: canary",
  "loc.messages.AllContainersNotInReadyState": "All the containers are not in a ready state.",
  "loc.messages.CouldNotDeterminePodStatus": "Could not determine the pod's status due to the error: %s",
  "loc.messages.KubectlShouldBeUpgraded": "kubectl client version equal to v1.14 or higher is required to use kustomize features.",
  "loc.messages.CouldNotDetermineServiceStatus": "Could not determine the service %s status due to the error: %s",
  "loc.messages.waitForServiceIpAssignment": "Waiting for service %s external IP assignment",
  "loc.messages.waitForServiceIpAssignmentTimedOut": "Wait for service %s external IP assignment timed out",
  "loc.messages.ServiceExternalIP": "service %s external IP is %s",
  "loc.messages.UnableToCreateTrafficSplitManifestFile": "Unable to create TrafficSplit manifest file. %s",
  "loc.messages.StableSpecSelectorNotExist": "Resource %s not deployed using SMI canary deployment.",
  "loc.messages.InvalidPercentage": "Invalid value for percentage.",
  "loc.messages.InvalidBaselineAndCanaryReplicas": "Invalid value for replica count.",
  "loc.messages.InvalidTimeoutValue": "Invalid value for timeout. Enter a valid number.",
  "loc.messages.RolloutStatusTimedout": "Rollout status check failed.",
  "loc.messages.EnvironmentLink": "For more information, go to %s"
}