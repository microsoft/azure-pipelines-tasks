{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[详细了解此任务](https://go.microsoft.com/fwlink/?LinkID=613718)或[参阅 Ant 文档](http://ant.apache.org/)",
  "loc.description": "使用 Apache Ant 生成",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "JUnit 测试结果",
  "loc.group.displayName.codeCoverage": "代码覆盖率",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.antBuildFile": "Ant 生成文件",
  "loc.input.help.antBuildFile": "从存储库根路径到“Ant 生成文件”的相对路径。",
  "loc.input.label.options": "选项",
  "loc.input.help.options": "提供要传递到 Ant 命令行的任意选项。可以提供自己的属性(例如，***-DmyProperty=myPropertyValue***)，也可使用内置变量(例如，**-DcollectionId=$(system.collectionId)***)。或者，已在生成过程中将内置变量设置为环境变量，且可直接传递(例如，***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***)。",
  "loc.input.label.targets": "对象",
  "loc.input.help.targets": "要生成的可选目标列表，以空格分隔。如果未指定，将使用“默认”目标。如果未定义“默认”目标，则 Ant 1.6.0 和更高版本将生成所有顶级任务。",
  "loc.input.label.publishJUnitResults": "发布到 Azure Pipelines",
  "loc.input.help.publishJUnitResults": "选择此选项可将 Ant 生成产生的 JUnit 测试结果发布到 Azure Pipelines。每个与 `Test Results Files` 匹配的测试结果文件都会在 Azure Pipelines 中发布为测试运行。",
  "loc.input.label.testResultsFiles": "测试结果文件",
  "loc.input.help.testResultsFiles": "测试结果文件路径。可以使用通配符([详细信息](https://go.microsoft.com/fwlink/?linkid=856077))。例如，\"**/TEST-*.xml\" 表示名称以 TEST- 开头的所有 xml 文件。",
  "loc.input.label.testRunTitle": "测试运行标题",
  "loc.input.help.testRunTitle": "为测试运行提供一个名称。",
  "loc.input.label.codeCoverageTool": "代码覆盖率工具",
  "loc.input.help.codeCoverageTool": "选择代码覆盖率工具。有关本地代理支持，请参阅下方的“详细信息”链接。",
  "loc.input.label.classFilesDirectories": "类文件目录",
  "loc.input.help.classFilesDirectories": "从 Ant 生成文件到目录的相对路径的列表，以逗号分隔，其中目录包含类文件和存档文件(JAR 和 WAR 等)。报告这些目录中类文件的代码覆盖率。例如: target/classes,target/testClasses。",
  "loc.input.label.classFilter": "类包含/排除筛选器",
  "loc.input.help.classFilter": "用于在收集代码覆盖率时包含或排除类的筛选器列表，以逗号分隔。例如: +:com.*、+:org.*、-:my.app*.*。",
  "loc.input.label.srcDirectories": "源文件目录",
  "loc.input.help.srcDirectories": "从 Ant 生成文件到源代码目录的相对路径列表，用逗号隔开。代码覆盖率报告将使用这些路径来突出显示源代码。例如: src/java,src/Test。",
  "loc.input.label.failIfCoverageEmpty": "缺失代码覆盖率结果时失败",
  "loc.input.help.failIfCoverageEmpty": "如果代码覆盖率未产生任何要发布的结果，则生成将失败。",
  "loc.input.label.antHomeUserInputPath": "设置 ANT_HOME 路径",
  "loc.input.help.antHomeUserInputPath": "如已设置，将用给定路径覆盖任何现有 ANT_HOME 环境变量。",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 设置方法",
  "loc.input.help.javaHomeSelection": "可通过选择将在生成期间发现的 JDK 版本或手动输入 JDK 路径来设置 JAVA_HOME。",
  "loc.input.label.jdkVersion": "JDK 版本",
  "loc.input.help.jdkVersion": "将尝试发现所选 JDK 版本的路径并相应地设置 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK 路径",
  "loc.input.help.jdkUserInputPath": "将 JAVA_HOME 设置到给定路径。",
  "loc.input.label.jdkArchitecture": "JDK 体系结构",
  "loc.input.help.jdkArchitecture": "可以选择提供 JDK 的体系结构(x86、x64)。",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "为 Java %s %s 查找 JAVA_HOME",
  "loc.messages.UnsupportedJdkWarning": "JDK 9 和 JDK 10 不受支持。请切换到项目和管道中的更高版本。正在尝试使用 JDK 11 进行生成...",
  "loc.messages.FailedToLocateSpecifiedJVM": "未能找到指定的 JDK 版本。请确保代理上安装了指定的 JDK 版本，环境变量“%s”存在并设置为对应 JDK 的位置或使用[Java 工具安装程序](https://go.microsoft.com/fwlink/?linkid=875287)任务安装所需 JDK。",
  "loc.messages.DiscontinueAntCodeCoverage": "我们将不再支持为 Ant 项目自动生成代码覆盖率报告。有关详细信息，请参阅 https://go.microsoft.com/fwlink/?linkid=875306。",
  "loc.messages.NoCodeCoverage": "未找到可发布的代码覆盖率结果。",
  "loc.messages.NoTestResults": "未找到匹配 %s 的测试结果文件，因此将跳过发布 JUnit 测试结果。"
}