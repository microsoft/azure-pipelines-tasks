{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[Learn more about this task](https://go.microsoft.com/fwlink/?LinkID=613718) or [see the Ant documentation](http://ant.apache.org/)",
  "loc.description": "Build with Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "JUnit Test Results",
  "loc.group.displayName.codeCoverage": "Code Coverage",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.antBuildFile": "Ant build file",
  "loc.input.help.antBuildFile": "Relative path from the repository root to the Ant build file.",
  "loc.input.label.options": "Options",
  "loc.input.help.options": "Provide any options to pass to the Ant command line. You can provide your own properties (for example, ***-DmyProperty=myPropertyValue***) and also use built-in variables (for example, ***-DcollectionId=$(system.collectionId)***). Alternatively, the built-in variables are already set as environment variables during the build and can be passed directly (for example, ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "Target(s)",
  "loc.input.help.targets": "An optional, space-separated list of targets to build. If not specified, the `default` target will be used. If no `default` target is defined, Ant 1.6.0 and later will build all top-level tasks.",
  "loc.input.label.publishJUnitResults": "Publish to Azure Pipelines",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Ant build to Azure Pipelines. Each test results file matching `Test Results Files` will be published as a test run in Azure Pipelines.",
  "loc.input.label.testResultsFiles": "Test results files",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used ([more information](https://go.microsoft.com/fwlink/?linkid=856077)). For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "Test run title",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "Code coverage tool",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool. For on-premises agent support, refer to the `More Information` link below.",
  "loc.input.label.classFilesDirectories": "Class files directories",
  "loc.input.help.classFilesDirectories": "Comma-separated list of relative paths from the Ant build file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.classFilter": "Class inclusion/exclusion filters",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.srcDirectories": "Source files directories",
  "loc.input.help.srcDirectories": "Comma-separated list of relative paths from the Ant build file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.failIfCoverageEmpty": "Fail when code coverage results are missing",
  "loc.input.help.failIfCoverageEmpty": "Fail the build if code coverage did not produce any results to publish.",
  "loc.input.label.antHomeUserInputPath": "Set ANT_HOME path",
  "loc.input.help.antHomeUserInputPath": "If set, overrides any existing ANT_HOME environment variable with the given path.",
  "loc.input.label.javaHomeSelection": "Set JAVA_HOME by",
  "loc.input.help.javaHomeSelection": "Sets JAVA_HOME either by selecting a JDK version that will be discovered during builds or by manually entering a JDK path.",
  "loc.input.label.jdkVersion": "JDK version",
  "loc.input.help.jdkVersion": "Will attempt to discover the path to the selected JDK version and set JAVA_HOME accordingly.",
  "loc.input.label.jdkUserInputPath": "JDK path",
  "loc.input.help.jdkUserInputPath": "Sets JAVA_HOME to the given path.",
  "loc.input.label.jdkArchitecture": "JDK architecture",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK.",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "Locate JAVA_HOME for Java %s %s",
  "loc.messages.UnsupportedJdkWarning": "JDK 9 and JDK 10 are out of support. Please switch to a later version in your project and pipeline. Attempting to build with JDK 11...",
  "loc.messages.FailedToLocateSpecifiedJVM": "Failed to find the specified JDK version. Please ensure the specified JDK version is installed on the agent and the environment variable '%s' exists and is set to the location of a corresponding JDK or use the [Java Tool Installer](https://go.microsoft.com/fwlink/?linkid=875287) task to install the desired JDK.",
  "loc.messages.DiscontinueAntCodeCoverage": "We are discontinuing the support of automated code coverage report generation for Ant projects. Please refer to https://go.microsoft.com/fwlink/?linkid=875306 for more details.",
  "loc.messages.NoCodeCoverage": "No code coverage results were found to publish.",
  "loc.messages.NoTestResults": "No test result files matching %s were found, so publishing JUnit test results is being skipped."
}