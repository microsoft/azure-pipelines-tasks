{
  "loc.friendlyName": ".NET Core SDK/런타임 설치 관리자",
  "loc.helpMarkDown": "[이 작업에 대한 자세한 정보](https://aka.ms/AA4ihfi)",
  "loc.description": "인터넷 또는 로컬 캐시에서 특정 버전의 .NET Core SDK를 가져와 PATH에 추가합니다.",
  "loc.instanceNameFormat": ".NET Core $(packageType) $(version) 설치",
  "loc.releaseNotes": "<li>여러 버전의 병렬 설치 지원</li><li>주/부 버전으로 최신 버전을 페치하기 위한 버전 패턴 지원</li><li>다단계 조회 제한</li>",
  "loc.group.displayName.advanced": "고급",
  "loc.input.label.packageType": "설치할 패키지",
  "loc.input.help.packageType": "런타임만 설치할지 또는 SDK를 설치할지 선택합니다.",
  "loc.input.label.version": "버전",
  "loc.input.help.version": "설치할 .NET Core SDK 또는 런타임 버전을 지정합니다.<br/>다음 형식으로 버전을 지정할 수 있습니다.<li>2.x   => 주 버전으로 최신 버전을 설치합니다.</li><li>2.2.x => 주 버전과 부 버전으로 최신 버전을 설치합니다.</li><li>2.2.104 => 정확한 버전을 설치합니다.</li><br/>releases.json에서 SDK/런타임을 설치할 '버전' 값을 찾습니다. 해당 major.minor 버전의 releases.json 링크는 [**releases-index 파일**](https://github.com/dotnet/core/blob/master/release-notes/releases-index.json)에서 확인할 수 있습니다. 예를 들어 2.2 버전의 releases.json 링크는 https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json입니다.",
  "loc.input.label.includePreviewVersions": "미리 보기 버전 포함",
  "loc.input.help.includePreviewVersions": "최신 버전을 검색할 때(예: 2.2.x 검색) 미리 보기 버전을 포함하려면 선택합니다. 정확한 버전(예: 3.0.100-preview3-010431)을 지정하는 경우 이 설정은 무시됩니다.",
  "loc.input.label.installationPath": ".NET Core 설치 경로",
  "loc.input.help.installationPath": ".NET Core SDK/런타임을 설치할 위치를 지정합니다. 경로에 따라 .NET의 동작에 다음과 같은 영향을 줄 수 있습니다.<li>$(Agent.ToolsDirectory): 이 디렉터리는 파이프라인 간에 정리되지 않으므로 버전이 에이전트에 캐시되도록 합니다. 에이전트에서 실행되는 모든 파이프라인이 이전에 해당 에이전트를 사용하여 설치된 버전에 액세스할 수 있습니다.</li><li>$(Agent.TempDirectory): 이 폴더는 각 파이프라인 후에 정리되므로 파이프라인에서 캐시된 .NET Core 버전을 사용하지 않도록 할 수 있습니다.</li><li>다른 모든 경로: 에이전트 프로세스에서 경로에 액세스할 수 있기만 하면 다른 경로를 구성할 수 있습니다. 이렇게 하면 머신의 상태가 변경되고 머신에서 실행되는 모든 프로세스에 영향을 줍니다.<br/>적합한 버전에 대해 .NET 호스트 프로빙을 구성할 수 있는 다단계 조회 설정을 구성할 수도 있습니다.",
  "loc.input.label.performMultiLevelLookup": "다단계 조회 수행",
  "loc.input.help.performMultiLevelLookup": "이 입력은 Windows 기반 에이전트에만 해당합니다. 적합한 공유 프레임워크를 찾기 위한 .NET 호스트 프로세스의 동작을 구성합니다. <li>선택 취소됨: 호스트 프로세스에서 이 작업에 지정된 폴더에 있는 버전만 확인합니다.</li><li>선택됨: 호스트가 다단계 조회를 사용하여 미리 정의된 전역 위치에서 찾습니다.<br/>기본 전역 위치는 다음과 같습니다. <br/><b>Windows:</b><br/>C:\\Program Files\\dotnet(64비트 프로세스)<br/>C:\\Program Files (x86)\\dotnet(32비트 프로세스)</li> [**여기**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md)에서 자세한 정보를 확인할 수 있습니다.<br/>",
  "loc.messages.ToolFailed": "도구 설치 실패: %s",
  "loc.messages.ImplicitVersionNotSupported": "버전은 유효하고 명시적인 버전(%s)이어야 합니다.",
  "loc.messages.getMachinePlatformFailed": "머신 플랫폼 정보를 가져오지 못했습니다. 오류: %s.",
  "loc.messages.getDownloadUrlsFailed": "다운로드 URL을 가져오지 못했습니다. 오류: %s.",
  "loc.messages.UsingCachedTool": ".NET Core의 캐시된 복사본이 있습니다. 새로 설치하지 않아도 됩니다. 캐시된 도구 위치: %s.",
  "loc.messages.CheckingToolCache": "이 버전에 대해 캐시된 복사본이 있는지 확인 중...",
  "loc.messages.InstallingAfresh": "캐시에 요청된 .NET Core 버전이 없습니다. 지금 다운로드하여 설치합니다.",
  "loc.messages.GettingDownloadUrl": ".NET Core %s 버전, %s을(를) 다운로드할 URL을 가져오는 중입니다.",
  "loc.messages.CouldNotDetectPlatform": "머신의 OS를 검색할 수 없습니다.",
  "loc.messages.NullDownloadUrls": "다운로드 URL을 생성할 수 없습니다. 지정한 버전 %s이(가) 유효한지 확인하세요.",
  "loc.messages.DownloadingUrl": "URL %s에서 .NET Core 패키지를 다운로드하는 중",
  "loc.messages.ExtractingPackage": "다운로드한 패키지 %s의 압축을 푸는 중입니다.",
  "loc.messages.CachingTool": "설치된 이 도구를 캐싱하는 중입니다.",
  "loc.messages.SuccessfullyInstalled": ".NET Core %s 버전 %s을(를) 설치했습니다.",
  "loc.messages.ToolToInstall": "설치할 도구: .NET Core %s 버전 %s.",
  "loc.messages.PrimaryPlatform": "검색된 플랫폼(기본): %s",
  "loc.messages.LegacyPlatform": "검색된 플랫폼(레거시): %s",
  "loc.messages.WarningVersionNotFound": "%s 버전의 다운로드 정보를 페치할 수 없습니다. 지정한 버전이 올바른지 확인하세요. 지원되는 버전은 https://github.com/dotnet/core/blob/master/release-notes/releases.json 링크를 참조할 수 있습니다. 규칙 기반 URL 생성으로 대체합니다.",
  "loc.messages.CouldNotDownload": "이 URL %s에서 설치 패키지를 다운로드할 수 없습니다. 오류: %s",
  "loc.messages.FailedToDownloadPackage": "설치할 패키지를 다운로드하지 못했습니다.",
  "loc.messages.PrependGlobalToolPath": "전역 도구 경로를 만들어 PATH 앞에 추가하는 중입니다.",
  "loc.messages.VersionsFileMalformed": "지정한 버전의 다운로드 링크가 지원되는 버전 문서에서 올바르게 구성되지 않았습니다. => %s/",
  "loc.messages.MatchingVersionNotFound": "일치하는 %s 버전을 찾을 수 없습니다. 지정한 버전은 %s입니다. [미리 보기 버전 포함] 확인란을 선택한 경우에만 최신 버전 검색에서 미리 보기 버전이 고려됩니다.",
  "loc.messages.UnableToAccessPath": "%s 경로에 액세스할 수 없습니다. 오류: %s \n 에이전트 프로세스에 경로에 대한 액세스 권한이 있는지 확인하세요.",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "%s 버전을 URL %s에서 다운로드할 수 없습니다. URL 또는 버전이 잘못되었습니다.",
  "loc.messages.CopyingFoldersIntoPath": "모든 루트 폴더를 설치 경로 %s에 복사하는 중",
  "loc.messages.CopyingFilesIntoPath": "루트 파일(예: dotnet.exe)을 설치 경로 %s에 복사하는 중",
  "loc.messages.FailedToCopyTopLevelFiles": "루트 파일을 설치 경로 %s에 복사하지 못했습니다. 오류: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "%s 버전을 %s 경로에 설치하지 못했습니다. 오류: %s",
  "loc.messages.ExplicitVersionRequired": "%s 버전은 허용되지 않습니다. 설치할 버전은 major.minor.patchversion 형식이어야 합니다. 예: 2.2.1",
  "loc.messages.VersionFoundInCache": "캐시에서 %s 버전을 찾았습니다.",
  "loc.messages.VersionNotFoundInCache": "캐시에서 %s 버전을 찾을 수 없습니다.",
  "loc.messages.CreatingInstallationCompeleteFile": ".NET Core %s 버전 %s의 설치 완료 표시 파일을 만드는 중",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "패키지 형식 %s 버전 %s의 런타임 버전을 찾을 수 없습니다.",
  "loc.messages.PathNotFoundException": "%s 경로를 찾을 수 없습니다. 경로가 있는지 확인하세요.",
  "loc.messages.VersionIsLocalLatest": "%s 버전이 %s 경로에 있는 버전 중 최신 버전입니다.",
  "loc.messages.VersionIsNotLocalLatest": "%s 버전은 %s에 있는 버전 중 최신 버전이 아닙니다.",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "다음 OS 플랫폼(RID)용 .NET Core %s 버전 %s의 다운로드 URL을 찾을 수 없음: %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "release-index.json을 다운로드하거나 구문 분석하지 못했습니다. 오류: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "%s 버전을 %s 채널(사용자 지정 버전 사양 %s)에서 찾았습니다.",
  "loc.messages.UrlForReleaseChannelNotFound": "채널 버전 %s의 releases.json URL을 찾을 수 없습니다.",
  "loc.messages.NoSuitableChannelWereFound": "%s 버전에 해당하는 채널을 찾을 수 없습니다.",
  "loc.messages.DetectingPlatform": "OS에 맞는 다운로드 패키지를 찾기 위해 OS 플랫폼을 검색하는 중입니다.",
  "loc.messages.FailedInDetectingMachineArch": "머신 OS 플랫폼을 검색하지 못했습니다. 오류: %s",
  "loc.messages.runtimeVersionPropertyNotFound": ".NET Core %s 버전 %s의 runtime-version 속성을 찾을 수 없습니다.",
  "loc.messages.VersionNotFound": "%s 버전 일치: %s을(를) 찾을 수 없습니다.",
  "loc.messages.VersionNotAllowed": "%s 버전은 허용되지 않습니다. 허용되는 버전 유형은 majorVersion.x, majorVersion.minorVersion.x, majorVersion.minorVersion.patchVersion입니다.",
  "loc.messages.VersionsCanNotBeCompared": "%s 버전과 %s 버전을 비교할 수 없습니다. 둘 다 명시적 버전이어야 합니다.",
  "loc.messages.FileNameNotCorrectCompleteFileName": "파일 이름 %s이(가) 올바른 '.complete' 파일이 아닙니다.",
  "loc.messages.ChannelVersionsNotComparable": "채널 버전 %s과(와) %s을(를) 비교할 수 없습니다. 둘 다 주 버전과 부 버전이 숫자여야 합니다.",
  "loc.messages.LookingForVersionInChannel": "%s 채널에서 버전을 검색하는 중",
  "loc.messages.FallingBackToAdjacentChannels": "해당 채널에서 %s 버전을 찾을 수 없습니다. 이제 인접한 채널에서 검색합니다.",
  "loc.messages.ErrorWhileSettingDotNetToolPath": ".NET Core 도구 경로를 PATH 환경 변수 앞에 추가하지 못했습니다. 오류: %s",
  "loc.messages.RequiredChannelVersionForSpec": "%s 채널(%s 버전)을 찾는 중",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "%s 버전을 %s 채널에서 가져오지 못했습니다. 오류: %s",
  "loc.messages.ComparingInstalledFolderVersions": "설치되는 버전 %s이(가) 폴더 이름 %s(으)로 설치된 기존 버전보다 이후 버전인지 비교하는 중",
  "loc.messages.ComparingInstalledFileVersions": "설치되는 버전 %s이(가) version.complete 파일 이름 %s(으)로 설치된 기존 버전보다 이후 버전인지 비교하는 중",
  "loc.messages.InvalidChannelObject": "개체를 채널로 사용할 수 없습니다. channel-version, releases.json 등의 필수 속성이 누락되었습니다.",
  "loc.messages.ReleasesIndexBodyIncorrect": "구문 분석된 릴리스 인덱스 본문이 잘못되었습니다. 파일에서 releases-index 섹션이 비어 있지 않은지 확인하세요.",
  "loc.messages.InvalidVersionObject": "Releases.json에 잘못된 %s 개체가 포함된 릴리스가 있음: %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "%s 릴리스(%s 버전)의 파일 데이터가 잘못됨(이름, RID, URL 등의 필수 필드가 누락되었을 수 있음): %s",
  "loc.messages.VersionFilesDataIncorrect": "버전의 파일 데이터가 없거나 필수 필드가 누락되었습니다.",
  "loc.messages.VersionInformationNotComplete": "releases.json 파일에 있는 %s 버전의 필수 정보가 불완전합니다. 오류: %s",
  "loc.messages.FailedWhileExtractingPacakge": "다운로드한 패키지를 추출하지 못했습니다. 오류: %s"
}