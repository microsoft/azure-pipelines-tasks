{
  "loc.friendlyName": "Archive files",
  "loc.helpMarkDown": "[Learn more about this task](http://go.microsoft.com/fwlink/?LinkId=809083)",
  "loc.description": "Compress files into .7z, .tar.gz, or .zip",
  "loc.instanceNameFormat": "Archive $(rootFolderOrFile)",
  "loc.group.displayName.archive": "Archive",
  "loc.input.label.rootFolderOrFile": "Root folder or file to archive",
  "loc.input.help.rootFolderOrFile": "Enter the root folder or file path to add to the archive. If a folder, everything under the folder will be added to the resulting archive.",
  "loc.input.label.includeRootFolder": "Prepend root folder name to archive paths",
  "loc.input.help.includeRootFolder": "If selected, the root folder name will be prepended to file paths within the archive. Otherwise, all file paths will start one level lower.<p>For example, suppose the selected root folder is: <b>`/home/user/output/classes/`</b>, and contains: <b>`com/acme/Main.class`</b>. <ul><li>If selected, the resulting archive would contain: <b>`classes/com/acme/Main.class`</b>.</li><li>Otherwise, the resulting archive would contain: <b>`com/acme/Main.class`</b>.</li></ul>",
  "loc.input.label.archiveType": "Archive type",
  "loc.input.help.archiveType": "Specify the compression scheme used.  To create <b>`foo.jar`</b>, for example, choose <b>`zip`</b> for the compression, and specify <b>`foo.jar`</b> as the archive file to create.  For all tar files (including compressed ones), choose <b>`tar`</b>.",
  "loc.input.label.sevenZipCompression": "7z compression",
  "loc.input.help.sevenZipCompression": "Optionally choose a compression level, or choose <b>`None`</b> to create an uncompressed 7z file.",
  "loc.input.label.tarCompression": "Tar compression",
  "loc.input.help.tarCompression": "Optionally choose a compression scheme, or choose <b>`None`</b> to create an uncompressed tar file.",
  "loc.input.label.archiveFile": "Archive file to create",
  "loc.input.help.archiveFile": "Specify the name of the archive file to create.  For example, to create <b>`foo.tgz`</b>, select the <b>`tar`</b> archive type and <b>`gz`</b> for tar compression.",
  "loc.input.label.replaceExistingArchive": "Replace existing archive",
  "loc.input.help.replaceExistingArchive": "If an existing archive exists, specify whether to overwrite it.  Otherwise, files will be added to it.",
  "loc.input.label.verbose": "Force verbose output",
  "loc.input.help.verbose": "If set to true, forces tools to use verbose output. Overrides 'quiet'",
  "loc.input.label.quiet": "Force quiet output",
  "loc.input.help.quiet": "If set to true, forces tools to use quiet output. Can be overridden by 'verbose'",
  "loc.messages.Filename": "files=%s",
  "loc.messages.TarExists": "Intermediate tar: %s already exists.  Attempting to add files to it.",
  "loc.messages.RemoveBeforeCreation": "Removing existing archive file before creation: %s",
  "loc.messages.AlreadyExists": "Archive file: %s already exists.  Attempting to add files to it.",
  "loc.messages.ArchiveCreationFailedWithError": "Archive creation failed for archive file: %s \ncode: %d \nstdout: %s \nstderr: %s \nerror: %s;",
  "loc.messages.ArchiveFileExistsButNotAFile": "Specified archive file: %s already exists and is not a file.",
  "loc.messages.FailedArchiveFile": "Specified archive file: %s cannot be created because it cannot be accessed: %s",
  "loc.messages.FoundNFiles": "Found %d files",
  "loc.messages.ArchivingFile": "Archiving file: %s",
  "loc.messages.MoreFiles": "... %d more ..."
}