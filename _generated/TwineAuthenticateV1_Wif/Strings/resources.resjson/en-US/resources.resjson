{
  "loc.friendlyName": "Python twine upload authenticate",
  "loc.helpMarkDown": "[Learn more about this task](https://docs.microsoft.com/azure/devops/pipelines/tasks/package/twine-authenticate) or [see the Twine documentation](https://twine.readthedocs.io/)",
  "loc.description": "Authenticate for uploading Python distributions using twine. Add '-r FeedName/EndpointName --config-file $(PYPIRC_PATH)' to your twine upload command. For feeds present in this organization, use the feed name as the repository (-r). Otherwise, use the endpoint name defined in the service connection.",
  "loc.instanceNameFormat": "Twine Authenticate $(message)",
  "loc.group.displayName.feedAuthentication": "Feeds and Authentication",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.workloadIdentityServiceConnection": "'Entra Workload ID-backed Azure DevOps user' Service Connection",
  "loc.input.help.workloadIdentityServiceConnection": "If this is set, feedUrl is required. All other inputs are ignored.",
  "loc.input.label.feedUrl": "Azure Artifacts Feed url.",
  "loc.input.help.feedUrl": "If this is set, workloadIdentityServiceConnection is required. All other inputs are ignored. Not compatible with pythonUploadServiceConnections. Feed Url should be in the pypi upload registry format, e.g. https://pkgs.dev.azure.com/{ORG_NAME}/{PROJECT}/_packaging/{FEED_NAME}/pypi/upload/",
  "loc.input.label.artifactFeed": "My feed name (select below)",
  "loc.input.help.artifactFeed": "Select a feed to authenticate present in this organization.",
  "loc.input.label.pythonUploadServiceConnection": "Feed from external organizations",
  "loc.input.help.pythonUploadServiceConnection": "Select an endpoint to authenticate outside this organization. Make sure the endpoint has package upload permissions.",
  "loc.messages.Info_AddingInternalFeeds": "Adding auth information for %s internal feed.",
  "loc.messages.Info_AddingExternalFeeds": "Adding auth information for %s external endpoint.",
  "loc.messages.Info_AddingAuthForRegistry": "Adding authentication to configuration for registry %s",
  "loc.messages.Info_SuccessAddingAuth": "Successfully added auth for %s internal feeds, %s external endpoints, and %s federated feeds",
  "loc.messages.Info_AddingPasswordAuthEntry": "Adding username password auth entry for feed %s",
  "loc.messages.Info_AddingTokenAuthEntry": "Adding token auth entry for feed %s",
  "loc.messages.Info_SuccessAddingFederatedFeedAuth": "Successfully added federated auth for feed %s.",
  "loc.messages.Error_FailedToParseFeedUrlAndAuth": "Failed to parse the feed url and add auth information. %s",
  "loc.messages.Warning_OnlyOneFeedAllowed": "Only one internal feed can be authorized at a time using this task. All the feeds except first one will be ignored.",
  "loc.messages.Warning_OnlyOneServiceConnectionAllowed": "Only one service connection can be authorized at a time using this task. All the connections except first one will be ignored.",
  "loc.messages.Warning_DuplicateEntryForFeed": "This is a duplicate entry for the feed name %s or url %s. Use unique names and url's to avoid potential publish issues.",
  "loc.messages.Error_FailedToGetServiceConnectionAuth": "Unable to get federated credentials from service connection: %s.",
  "loc.messages.Error_MissingFeedUrlOrServiceConnection": "Both feed url and service connection need to be set and cannot be empty.",
  "loc.messages.FailedToGetPackagingUri": "Unable to get packaging uri, using default collection uri.",
  "loc.messages.FailedToAddAuthentication": "Failed to add authentication.",
  "loc.messages.NoPypircFile": "No .pypirc file to clean up.",
  "loc.messages.VariableSetForPypirc": "Environment variable for .pypirc at %s is set.",
  "loc.messages.Info_RemovingPypircFile": "Removing .pypirc file from %s",
  "loc.messages.NoRepoFound": "No repo url found under %s"
}