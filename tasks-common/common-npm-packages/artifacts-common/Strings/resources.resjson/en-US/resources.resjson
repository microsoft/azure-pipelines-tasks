{
  "loc.messages.AuthSchemeNotSupported": "Auth Scheme %s is not supported",
  "loc.messages.CouldNotFetchAccessTokenforAAD": "Could not fetch access token for AAD.",
  "loc.messages.CredProvider_AlreadyInstalled": "The credential provider is already installed. If there are package related authentication failures in later steps, consider setting this task's input 'forceReinstallCredentialProvider' to true to force reinstallation.",
  "loc.messages.CredProvider_Error_FailedCopy": "Failed to copy from '%s' to '%s' while installing the credential provider. Ensure that the destination directory is not in use and that the agent account has permission to write to it.",
  "loc.messages.CredProvider_Error_FailedRemoveDir": "Failed to remove the directory '%s' while installing the credential provider. Ensure that this directory is not in use and that the agent account has permission to delete this directory.",
  "loc.messages.CredProvider_Error_InvalidServiceConnection": "The service connection for '%s' is not valid.",
  "loc.messages.CredProvider_Error_InvalidServiceConnection_ApiKey": "The service connection for '%s' is not valid. ApiKey service connections are not supported in this task. Instead, use -ApiKey (NuGet) or --api-key (dotnet) when invoking the tool itself. See the task documentation for more details.",
  "loc.messages.CredProvider_InstallingNetCoreTo": "Installing the Azure Artifacts Credential Provider (.NET Core) to '%s'. This credential provider is compatible with dotnet SDK 2.1.400 or later.",
  "loc.messages.CredProvider_InstallingNetFxTo": "Installing the Azure Artifacts Credential Provider (.NET Framework) to '%s'. This credential provider is compatible with nuget.exe 4.8.0.5385 or later, and MSBuild 15.8.166.59604 or later.",
  "loc.messages.CredProvider_Error_ServiceConnectionExists": "An existing service connection already exists for the endpoint '%s'. Overwriting existing authentication.",
  "loc.messages.ErrorInSettingUpSubscription": "Error in setting up subscription",
  "loc.messages.Error_FederatedTokenAquisitionFailed": "Failed to aquire federated token.",
  "loc.messages.Error_GetFeedTenantIdFailed": "Failed to find tenantId for feedUrl. %s",
  "loc.messages.LoginFailed": "Azure login failed",
  "loc.messages.MSILoginFailed": "Azure login failed using Managed Service Identity",
  "loc.messages.CredProvider_SettingUpForOrgFeeds": "Setting up the credential provider to use the identity '%s' for feeds in your organization/collection starting with:",
  "loc.messages.CredProvider_SettingUpForServiceConnections": "Setting up the credential provider for these service connections:",
  "loc.messages.ServiceConnections_Error_FailedToParseServiceEndpoint_MissingParameter": "Failed to parse the service endpoint '%s' because it was missing the parameter '%s'",
  "loc.messages.ServiceConnections_Error_FailedToParseServiceEndpoint_BadScheme": "Failed to parse the service endpoint '%s' because the auth scheme '%s' was invalid",
  "loc.messages.ServiceConnections_Error_FailedToGetServiceConnectionAuth" : "Unable to get federated credentials from service connection: %s.",
  "loc.messages.SettingAzureCloud": "Setting active cloud to: %s",
  "loc.messages.Info_GotAndMaskAuth":"Got auth token, setting it as secret so it does not print in console log",
  "loc.messages.Info_UsingTenantId" : "Using tenant id: %s"
}